#+TITLE:     The Org-article LaTeX class
#+AUTHOR:    Tom Dye
#+EMAIL:     tsd at tsdye dot com
#+DATE:      2010-09-18 Sat
#+DESCRIPTION: 
#+KEYWORDS: 
#+LANGUAGE:  en
#+OPTIONS:   H:3 num:t toc:t \n:nil @:t ::t |:t ^:nil -:t f:t *:t <:t
#+OPTIONS:   TeX:t LaTeX:t skip:nil d:nil todo:t pri:nil tags:not-in-toc
#+INFOJS_OPT: view:nil toc:nil ltoc:t mouse:underline buttons:0 path:http://orgmode.org/org-info.js
#+EXPORT_SELECT_TAGS: export
#+EXPORT_EXCLUDE_TAGS: noexport
#+LINK_UP:   
#+LINK_HOME: 
#+XSLT: 
#+BABEL: :exports code
#+LaTeX_CLASS: org-article
#+LaTeX_CLASS_OPTIONS: [koma,letterpaper,fontset=bera,11pt,source=listings,microtype,lists=inparai,colorlinks=true,urlcolor=blue,secnum=section,gantt]
#+LATEX_HEADER: \usepackage[AUTO]{inputenc}


#+BEGIN_abstract
This document contains the code and documentation for the [[latex:classfile][Org-article]]
LaTeX class.  The [[latex:classfile][Org-article]] class is designed to work with the
output of the [[latex:proglang][Org-mode]] LaTeX exporter.  It offers some features
that might make it easy for non-programmers or LaTeX novices to use:
  4. self-contained configuration;
  1. several choices of fonts;
  2. flexible arrangement of the abstract, table of contents, and
     lists of tables, figures, and source code listings; 
  3. semantic markup in the domain of computer programming;  and
  4. a common interface for syntax highlighting and typesetting source
     code blocks.  
The pdf version of this document is created with the [[latex:classfile][Org-article]] class
     directly from the [[latex:proglang][Org-mode]] source document, without any
     subsequent tweaking of the LaTeX export.
#+END_abstract

#+LATEX: \tableofcontents
#+LATEX: \listoftables
#+LATEX: \listoffigures
#+LATEX: \listoflistings

* Org-article class
  :PROPERTIES:
  :VISIBILITY: children
  :END:

This file uses [[latex:proglang][Org-mode's]] Babel facilities to tangle a [[latex:proglang][LaTeX]] class
named [[latex:classfile][Org-article]].  The class is designed to work with [[latex:proglang][Org-mode]] LaTeX
export and provides all of the LaTeX packages used by the exporter.
The class accepts numerous options, which the user can set either in
=.emacs=, for default use with all [[latex:classfile][Org-article]] exports, or within the
[[latex:proglang][Org-mode]] file itself using =#+LaTeX_CLASS_OPTIONS:=.

Some features of [[latex:classfile][Org-article]] include:
  - Default [[latex:proglang][Org-mode]] packages :: Options to keep individual LaTeX
       packages from loading make it somewhat easier to modify which
       packages are loaded during the processing of LaTeX code
       exported by [[latex:proglang][Org-mode]]
  - Fonts :: The package implements several choices of fonts and
             takes steps to ensure that the fonts don't clash with the
             symbol font files that [[latex:proglang][Org-mode]] depends upon to typeset
             [[latex:progstruct][org-entities]]
  - Source code :: The class supports both the [[latex:package][listings]] and
                      the [[latex:package][minted]] packages for syntax highlighting and
                      typesetting of source code
  - Compact lists :: A facility to typeset lists with less vertical
                     space between entries is provided
  - Double spacing :: An option is provided to set lines double spaced
  - Table of contents :: The table of contents depth can be set
       independently of section numbering depth
  - Section numbering :: Section numbering depth can be specified
       independently of the table of contents depth
  - Key=value options :: [[latex:classfile][Org-article]] implements key=value options
       using [[latex:package][pgfkeys]] and [[latex:package][pgfopts]]
  - Semantic markup :: Facilities are provided for markup in
       the domain of computer programming

** How to get this Org-mode document
   :PROPERTIES:
   :VISIBILITY: folded
   :END:

You might be able to get the [[latex:proglang][Org-mode]] document from GitHub using a
shell command (Listing \ref{fig:clone}).  If all goes well, this will
create a sub-directory, [[latex:path][org-article]], initialize the git repository
there, and download the file [[latex:path][article-class.org]] as part of the
repository.

#+BEGIN_listing
#+source: get-from-github-alt
#+begin_src sh :exports code
  git clone git://github.com/tsdye/org-article.git
#+end_src
#+LATEX: \caption[Shell command to clone the Org-article repository]{Shell command to clone the Org-article repository at GitHub.}\label{fig:clone}
#+END_listing

** How to make and install the class file
The [[latex:proglang][Org-mode]] document can be tangled to produce the
=org-article.cls= file.  This is done by running [[latex:progstruct][org-babel-tangle]] 
against the file, either by =M-x org-babel-tangle RET= or =C-c C-v
[C-]t=.

The resulting =org-article.cls= file should then be moved where LaTeX
can find it.  This can be the directory where the LaTeX file(s) will
be compiled or another location for use system-wide.  In LaTeX setups
that conform to the [[http://www.tex.ac.uk/tex-archive/tds/tds.html][Tex Directory Structure]], this system-wide location
might be [[latex:path][path/to/texmf-local/tex/latex/base]].  

Once the file has been placed in an appropriate directory it is often
the case that the directory database, such as the one maintained by
[[http://tug.org/kpathsea/][Kpathsea]], must then be updated. Shell commands that work on
an OS X system with the [[http://tug.org/mactex/][MacTeX]] distribution are shown in Listing
\ref{fig:install}.  Something very similar should work on Un*x systems
using the TeXLive LaTeX distribution.

#+BEGIN_listing
#+source: install-org-article
#+begin_src sh :exports code
  sudo cp org-article.cls /usr/local/texlive/texmf-local/tex/latex/base/
  sudo mktexlsr
  kpsewhich org-article.cls
#+end_src
#+LATEX: \caption[Installing Org-article on an OS X system]{Installing Org-article on an OS X system.}\label{fig:install}
#+END_listing

** LaTeX export setup
   :PROPERTIES:
   :VISIBILITY: folded
   :END:
# <<export-setup>>

[[latex:classfile][Org-article]] requires that the [[latex:proglang][Org-mode]] environment be set up before LaTeX
export.  How the environment is set up will depend on the LaTeX packages you
typically load, 

There are two ways to set up [[latex:classfile][Org-article]] and your choice will probably
depend on the value of the variable [[latex:lispvar][org-export-latex-packages-alist]].
If this variable is nil (or it refers to packages that you always want
loaded), then the following setup should work for you.  It asks
[[latex:proglang][Org-mode]] *not* to load the default packages, because these are loaded
by [[latex:classfile][Org-article]].  Then, it loads the packages in
[[latex:lispvar][org-export-latex-packages-alist]], which should consist of a single
entry for the [[latex:package][inputenc]] package.  [[latex:proglang][Org-mode]] automatically sets the
input encoding based on the status of the [[latex:proglang][Org-mode]] buffer being
exported, which it can't do if it is loaded by [[latex:classfile][Org-article]].  Finally,
any packages specified in the [[latex:proglang][Org-mode]] buffer are loaded (the [EXTRA]
argument).

*** Set up if org-export-latex-packages-alist is nil

The number of heading levels in the LaTeX output is determined by two
factors: the number of heading levels (section, subsection, etc.)
defined in [[latex:lispvar][org-export-latex-classes]] and the setting of the [[latex:progstruct][H:]]
option in the export header.  The number of heading levels will be the
smaller of the two values, e.g., if [[latex:progexample][H: 5]] calls for five heading
levels, but only sections are defined in [[latex:lispvar][org-export-latex-classes]]
then the exported LaTeX file will only contain sections and will lack
subsections, subsubsections, etc.  Similarly, if headings down to
subparagraph are defined in [[latex:lispvar][org-export-latex-classes]] and  [[latex:progexample][H: 1]],
then only sections will appear in the LaTeX export.  In a practical
sense, the only reason to restrict the number of headings specified in
[[latex:lispvar][org-export-latex-classes]] would be to constrain the options available
to the author of the document.  Thus, [[latex:classfile][Org-article]] defines
headings to the subparagraph level, which is the maximum defined by LaTeX.

The configuration to use if [[latex:proglang][Org-mode]] doesn't load LaTeX packages is
shown in Listing \ref{fig:setup-one}.  If [[latex:proglang][Org-mode]] does load LaTeX
packages, then the configuration in Listing \ref{fig:setup-two} can be
used.

#+BEGIN_listing
#+source: packages-alist-not-nil
#+begin_src emacs-lisp :exports code
  (require 'org-latex)
  (add-to-list 'org-export-latex-packages-alist
               '(("AUTO" "inputenc" t)))
  (add-to-list 'org-export-latex-classes
            '("org-article"
               "\\documentclass{org-article}
               [NO-DEFAULT-PACKAGES]
               [PACKAGES]
               [EXTRA]"
               ("\\section{%s}" . "\\section*{%s}")
               ("\\subsection{%s}" . "\\subsection*{%s}")
               ("\\subsubsection{%s}" . "\\subsubsection*{%s}")
               ("\\paragraph{%s}" . "\\paragraph*{%s}")
               ("\\subparagraph{%s}" . "\\subparagraph*{%s}")))
#+end_src
#+LATEX: \caption[Configuration when Org-mode doesn't load LaTeX packages]{Configuration when Org-mode doesn't load LaTeX packages.}\label{fig:setup-one}
#+END_listing

*** Set up if org-export-latex-packages-alist is not nil

If, for some reason, [[latex:lispvar][org-export-latex-packages-alist]] is not [[latex:progstruct][nil]],
and it includes packages that you don't want always loaded then
the following setup should work.

#+BEGIN_listing
#+source: packages-alist-not-nil
#+begin_src emacs-lisp :exports code
  (require 'org-latex)
  (add-to-list 'org-export-latex-classes
               '("org-article"
                 "\\documentclass{org-article}
                   [NO-DEFAULT-PACKAGES]
                   [EXTRA]"
                 ("\\section{%s}" . "\\section*{%s}")
                 ("\\subsection{%s}" . "\\subsection*{%s}")
                 ("\\subsubsection{%s}" . "\\subsubsection*{%s}")
                 ("\\paragraph{%s}" . "\\paragraph*{%s}")
                 ("\\subparagraph{%s}" . "\\subparagraph*{%s}")))
#+end_src
#+LATEX: \caption[Configuration when Org-mode also loads LaTeX packages]{Configuration when Org-mode also loads LaTeX packages.}\label{fig:setup-two}
#+END_listing

In this case, you will need to specify the [[latex:package][inputenc]] package in the
[[latex:proglang][Org-mode]] file, as follows:  =#+LATEX_HEADER: \usepackage{AUTO}{inputenc}=

** Export configuration
The following code blocks set up your system to export
to LaTeX.  They are provided here for convenience only and you might
want to configure your system in some other way.

The first code block sets up the environment when the [[latex:package][minted]] package
is used (Listing \ref{fig:minted-config}).  The second sets it up for
the [[latex:package][listings]] package (Listing \ref{fig:listings-config}).

Both of the code blocks rely on [[latex:progstruct][noweb]] expansion.  

  - define-latex-link :: Defines the [[latex:progstruct][latex]] link type for semantic
       markup of text
  - define-inline-link :: Defines the [[latex:progstruct][inline]] link type for syntax
       highlighting and typesetting of inline code snippets
  - format-toc-for-secnum-with-listings :: Lets [[latex:classfile][Org-article]] configure
       the table of contents depth and section numbering depth, and
       also inserts a list of source code listings after the table of contents

  - babel-load-languages :: Configures Org-mode to evaluate code
       blocks in [[latex:proglang][Emacs Lisp]], [[latex:proglang][Python]], and LaTeX

  - special-blocks :: Loads [[latex:package][org-special-blocks]] for semantic markup of
                      text blocks
  - minted-setup :: Loads the [[latex:package][minted]] package, specifies the source
                    code languages that it will deal with, and
                    configures the call to [[latex:proglang][pdflatex]] so it will
                    communicate with the external processes launched
                    by [[latex:package][minted]]
  - listings-setup :: Loads the [[latex:package][listings]] package, and specifies the source
                      code languages it will deal with

#+BEGIN_listing
#+source: config-with-minted
#+begin_src emacs-lisp :noweb tangle :exports code :results silent
  <<define-latex-link>>
  <<define-inline-link>>
  <<format-no-toc>>
  <<babel-load-languages>>
  <<special-blocks>>
  <<minted-setup>>
#+end_src
#+LATEX: \caption[Minted configuration]{Minted configuration.}\label{fig:minted-config}
#+END_listing

#+BEGIN_listing
#+source: config-with-listings
#+begin_src emacs-lisp :noweb tangle :exports code :results silent
  <<define-latex-link>>
  <<define-inline-link>>
  <<format-no-toc>>
  <<babel-load-languages>>
  <<special-blocks>>
  <<listings-setup>>
#+end_src
#+LATEX: \caption[Listings configuration]{Listings configuration.}\label{fig:listings-config}
#+END_listing

This document contains [[latex:proglang][Python]], LaTeX, and
[[latex:proglang][shell]] source code blocks that can be evaluated.
The variable [[latex:lispvar][org-babel-load-languages]] should
enable these languages as shown in Listing \ref{fig:babel-config}.

#+BEGIN_listing
#+source: babel-load-languages
#+begin_src emacs-lisp :tangle yes
  (org-babel-do-load-languages
   'org-babel-load-languages
   '((emacs-lisp . t)
     (latex . t)
     (python . t)))
#+end_src
#+LATEX: \caption[Babel configuration]{Babel configuration.}\label{fig:babel-config}
#+END_listing
** Requirements
[[latex:classfile][Org-article]] requires a working LaTeX installation.  Most of the
packages that it uses will be included in a modern LaTeX installation,
with the possible exception of some of the font packages.  Certain
distributions package these separately; it is up to you to install the
fonts you choose to use.  If you have problems with fonts, then the
[[times-font][times]] option might be a good choice, since it relies on
widely distributed fonts---Times, Helvetica, and Courier.

When a package is not widely distributed, then shell source code to
download the package is provided.  These packages can either be placed
in the directory where the LaTeX files will be compiled, or they can
be installed at an appropriate place in the TeX directory structure.

Finally, [[latex:classfile][Org-article]] requires a working [[latex:proglang][Python]] installation for its
implementation of certain features, in particular future support for the
[[latex:package][minted]] package, which uses a [[latex:proglang][Python]] library for syntax highlighting of
source code in a wide variety of programming languages.

** Examples                                                        :noexport:
The functionality of [[latex:classfile][Org-article]] can be demonstrated with the
following two examples of pdf output generated by [[latex:proglang][Org-mode]] LaTeX
export of this [[latex:proglang][Org-mode]] file.  In the first, these three lines appear
near the top of the [[latex:proglang][Org-mode]] file:

#+source: first-example
#+begin_src org :exports code
#+OPTIONS:   H:5 num:t toc:t \n:nil @:t ::t |:t ^:nil -:t f:t *:t <:t
#+LaTeX_CLASS: org-article
#+LaTeX_CLASS_OPTIONS: [article,letterpaper,times,12pt,listings-bw,microtype]
#+end_src

The resulting [[http://www.tsdye2.com/org-babel/article-class-times-art.pdf][pdf file]] is typeset with the standard LaTeX
[[latex:classfile][article]] on 8.5 x 11 in. paper, using Times, Helvetica, and
Courier fonts with a 12 point base size.  Source code listings are
given in black and white, and microtypographic justification is
applied.

In the second example, these three lines appear near the top of the
[[latex:proglang][Org-mode]] file:

#+source: second-example
#+begin_src org :exports code
#+OPTIONS:   H:5 num:t toc:t \n:nil @:t ::t |:t ^:nil -:t f:t *:t <:t
#+LaTeX_CLASS: org-article
#+LaTeX_CLASS_OPTIONS: [koma,a5paper,landscape,twocolumn,utopia,10pt,listings-sv,microtype,paralist]
#+end_src

The resulting [[http://www.tsdye2.com/org-babel/article-class-utopia-koma.pdf][pdf file]] is typeset with the KOMA-script [[latex:classfile][scrartcl]]
on 5.8 x 8.3 in. paper in landscape mode, using Utopia, Bera,
and Incosolata fonts with a 10 point base size.  Source code listings
are given in color, and microtypographic justification is applied.  In
addition, the [[latex:progstruct][paralist]] option has been set; compare the tightly-set
list immediately below with the standard list of the first example.

In the third example, these three lines appear at the top of the
[[latex:proglang][Org-mode]] file:

#+source: third-example
#+begin_src org :exports code
  ,#+OPTIONS:   H:5 num:t toc:t \n:nil @:t ::t |:t ^:nil -:t f:t *:t <:t
  ,#+LaTeX_CLASS: org-article
  ,#+LaTeX_CLASS_OPTIONS: [koma,a5paper,DIV=15,landscape,utopia,10pt,listings-sv,microtype,paralist]
#+end_src

The resulting [[http://www.tsdye2.com/org-babel/article-class-koma-div.pdf][pdf file]] is typeset with the KOMA-script [[latex:classfile][scrartcl]]
on 5.8 x 8.3 in. paper in landscape mode, using Utopia, Bera, and
Incosolata fonts with a 10 point base size.  The size of the text
block has been increased by setting [[latex:progstruct][DIV]] to a relatively high number.
Source code listings are given in color, and microtypographic
justification is applied.  In addition, the [[latex:progstruct][paralist]] option has been
set.

The fourth example, set out in the listing below, illustrates use of
the [[latex:classfile][Org-article]] section numbering facility.  The option
[[latex:progstruct][secnums]] has been used to number section heads but leave subsection
and lower level heads unnumbered.  This [[http://www.tsdye2.com/org-babel/article-class-secnum.pdf][results]] in a clean look.  The
[[latex:progstruct][listings-es]] theme has been used for the listings, which uses color
sparingly and sets code blocks off primarily by numbering and small
size of the font.
 
#+source: fourth-example
#+begin_src org :exports code
  ,#+OPTIONS:   H:5 num:t toc:t \n:nil @:t ::t |:t ^:nil -:t f:t *:t <:t
  ,#+LaTeX_CLASS: org-article
  ,#+LaTeX_CLASS_OPTIONS: [koma,letterpaper,utopia,11pt,listings-es,microtype,paralist,colorlinks=true,urlcolor=blue,secnum=section]
#+end_src

* The class file
   :PROPERTIES:
   :VISIBILITY: folded
   :ID:       CF77554B-3CC5-4A09-B15B-98C13A93AB41
   :END:
The LaTeX class file has six standard parts (Listing \ref{fig:class-structure}):

   - Identification part :: Defines the nature of the file and
        specifies the TeX format that it requires (Listing \ref{fig:identification-part})
   - Initial code part :: Loads packages used internally by the class
        file (Listing \ref{fig:initial-code})
   - Declaration of options part :: All options known to the class are
        declared here (Listing \ref{fig:declaration-options})
   - Execution of options part :: Set default values and execute the
        code for the options that have been declared.
   - Package loading part :: Load packages with the options specified
        in the declaration of options part using [[latex:progstruct][PassOptionsToPackage]].
   - Main code part :: Usually used to define new commands and structures.

#+BEGIN_listing
#+source: org-article
#+begin_src latex :tangle org-article.cls :noweb yes :exports none
  <<identification-part>>
  <<initial-code-part>>
  <<declaration-of-options-part>>
  <<execution-of-options-part>>
  <<package-loading-part>>
  <<class-code-part>>
#+end_src
#+LATEX: \caption[Structure of the LaTeX class file]{Structure of the LaTeX class file.}\label{fig:class-structure}
#+END_listing
** Identification part

[[latex:classfile][Org-article]] uses a standard identification part (Listing
\ref{fig:identification-part}).  The [[latex:progstruct][NeedsTeXFormat]] command can take an
optional argument with a release date for the oldest version of LaTeX
that can use the class.  It is relatively easy to update LaTeX
installations nowadays, so there is less reason to use this optional
argument than there was in the past.  The optional argument is omitted
here.

#+BEGIN_listing
#+source: identification-part
#+begin_src latex :exports code
  \NeedsTeXFormat{LaTeX2e}
  \ProvidesClass{org-article}[2010/11/25 0.3 (TSD)]
#+end_src
#+LATEX: \caption[The identification part of the class file]{The identification part of the class file.}\label{fig:identification-part}
#+END_listing

** Initial code part
The initial code part loads packages needed to process the class file
(Listing \ref{fig:initial-code}).  

  - ifthen :: Implements an [[latex:progstruct][ifthenelse]] flow control
  - ifpdf :: Tests whether output is pdf or not (this is a holdover
             from the days when I was making the transition from dvi
             to pdf output, not sure it's needed anymore)
  - pdfopts :: Loads the classfile interface to Till Tantau's [[latex:package][pgfkeys]]
               package for implementing =key = value= options
 
#+BEGIN_listing
#+source: initial-code-part
#+begin_src latex :noweb yes :exports code
  \RequirePackage{ifthen}
  \RequirePackage{ifpdf}
  \RequirePackage{pgfopts}
#+end_src
#+LATEX: \caption[The initial code part of the class file]{The initial code part of the class file.}\label{fig:initial-code}
#+END_listing
  
** Declaration of options part
# <<declaration>>

The package options are declared here in a code block made up entirely
of noweb references (Listing \ref{fig:declaration-options}).  It is
forbidden to load packages in this part, so a package referred to here
will also appear in the [[package-loading-part][package loading part]] or it will be sent to
=AtEndOfCodeBlock= or =AtBeginDocument= for loading there.  The
[[package-loading-part][package loading part]] also consists of noweb references, an arrangement
that makes it possible to keep all the code specific to a particular
package together in the [[latex-packages][LaTeX packages]] section.

This is a long part and it is broken up here mostly for convenience in
typesetting a printed page.

  - org-mode-default-options :: Process options not to load the LaTeX
       packages typically loaded by default with the [[latex:proglang][Org-mode]] LaTeX
       exporter (Listing \ref{fig:org-mode-default-options})
  - fontset-options :: Options to load font sets where the serif,
       sans-serif, and monospace fonts are chosen to look good with
       one another (Listing \ref{fig:fontset-options})
  - base-class-options :: Options to configure the base class (Listing \ref{fig:base-class-options})
  - other-package-options :: Options to load other packages that might
       be useful (Listing \ref{fig:other-package-options})
  - pass-options-to-packages :: Route options to the appropriate class
       or package (Listing \ref{fig:pass-options})
#+BEGIN_listing
#+source: declaration-of-options-part
#+begin_src latex :noweb tangle :exports code
  <<org-mode-default-options>>
  <<fontset-options>>  
  <<base-class-options>>
  <<other-package-options>>
  <<pass-options-to-packages>>
#+end_src
#+LATEX: \caption[Declaration of options part]{Declaration of options part.}\label{fig:declaration-options}
#+END_listing

The LaTeX packages that Org-mode loads by default are listed here
(Listing \ref{fig:org-mode-default-options}).  Note that the list
excludes the [[latex:package][inputenc]] package.

#+BEGIN_listing
#+source: org-mode-default-options
#+begin_src latex :noweb tangle :exports code
  <<option-fontenc>>
  <<option-fixltx2e>>
  <<option-graphicx>>
  <<option-longtable>>
  <<option-wrapfig>>
  <<option-soul>>
  <<option-textcomp>>
  <<option-marvosym>>
  <<pgf-option-wasysym>>
  <<option-latexsym>>
  <<option-amssymb>>
  <<option-hyperref>>
#+end_src
#+LATEX: \caption[Options for the Org-mode default LaTeX packages]{Options for the Org-mode default LaTeX packages.}\label{fig:org-mode-default-options}
#+END_listing

The font sets defined by [[latex:classfile][Org-article]] are listed here (Listing
\ref{fig:fontset-options}).

#+BEGIN_listing
#+source: fontset-options
#+begin_src latex :noweb tangle :exports code
  <<pgf-option-fontset>>
  <<pgf-option-bera>>
  <<pgf-option-charter>>
  <<pgf-option-garamond>>
  <<pgf-option-kp>>
  <<pgf-option-libertine>>
  <<pgf-option-nimbus>>
  <<pgf-option-palatino>>
  <<pgf-option-times>>
  <<pgf-option-utopia>>
#+end_src
#+LATEX: \caption[Options for font sets]{Options for font sets.}\label{fig:fontset-options}
#+END_listing

The base class options include the choice of which class to load and
setting the depth of the table of contents and section numbering
(Listing \ref{fig:base-class-options}).

#+BEGIN_listing
#+source: base-class-options
#+begin_src latex :noweb tangle :exports code
  <<option-koma>>
  <<option-article>>
  <<pgf-option-tocdepth>>
  <<pgf-option-secnum>>
#+end_src
#+LATEX: \caption[Base class options]{Base class options.}\label{fig:base-class-options}
#+END_listing

Options are provided to load several other packages that might be
useful.
  - option-microtype :: Sophisticated typesetting made possible when
       using [[latex:package][pdflatex]] (Listing \ref{fig:microtype-option})
  - option-paralist :: Set lists compactly (Listing \ref{fig:paralist-option})
  - option-setspace :: Double-space output (Listing \ref{fig:setspace-options})
  - pgf-option-source :: Options for syntax highlighting and
       typesetting source code blocks (Listing \ref{fig:option-source})
  - pgf-option-mintedstyle :: Styles for the [[latex:package][minted]] package are color
       themes used in syntax highlighting (Listing \ref{fig:option-mintedstyle})
  - option-gantt :: Create GANTT charts from Org-mode tables (Listing \ref{fig:option-gantt})

#+BEGIN_listing
#+source: other-package-options
#+begin_src latex :noweb tangle :exports code
  <<option-microtype>>
  <<pgf-option-paralist>>
  <<option-setspace>>
  <<pgf-option-source>>
  <<pgf-option-mintedstyle>>
  <<option-gantt>>
#+end_src
#+LATEX: \caption[Other package options]{Other package options.}\label{fig:other-package-options}
#+END_listing

Options defined by the base class, either the standard [[latex:classfile][article]] or the
Koma class [[latex:classfile][scrartcl]], are passed on to those classes by default and
don't have to be declared here (Listing \ref{fig:pass-options}).

#+BEGIN_listing
#+source: pass-options-to-packages
#+begin_src latex :noweb tangle :exports code
  <<pass-to-hyperref>>
#+end_src
#+LATEX: \caption[Pass options to packages]{Pass options to packages.}\label{fig:pass-options}
#+END_listing

** Execution of options part

This part reflects the on-going transition to using the [[latex:package][pgfkeys]]
package (Listing \ref{fig:execution-of-options}).  The [[latex:package][pgfkeys]] options
are processed first because the [[latex:progstruct][ProcessOptions]] command reclaims the
memory used to store user options.

#+BEGIN_listing
#+source: execution-of-options-part
#+begin_src latex :exports code
  \ProcessPgfOptions{/ORGART}
  \ProcessOptions\relax
#+end_src
#+LATEX: \caption[Execution of options]{Execution of options.}\label{fig:execution-of-options}
#+END_listing

** Package loading part
# <<package-loading-part>>

By default, [[latex:classfile][Org-article]] loads all but one of the packages in
[[latex:lispvar][org-export-latex-default-packages-alist]].  It does not load [[latex:package][inputenc]]
directly, but instead relies on the [[latex:proglang][Org-mode]] LaTeX exporter to load
this package, which passes as an option the encoding scheme of the
exported buffer.  The [[latex:package][fontenc]] package is loaded with the [[latex:progstruct][T1]] option
by default as a prerequisite for the various symbol packages.  There
is no facility to disable loading [[latex:package][fontenc]], which is unusual among
LaTeX packages in its ability to be loaded more than once.  This
functionality is required in the case where two or more fonts with
different encodings are used.

This code block is implemented as noweb references so that
package-specific code can be kept together in [[latex-packages][LaTeX packages]] (Listing
\ref{fig:package-loading}).


#+BEGIN_listing
#+source: package-loading-part
#+begin_src latex :noweb tangle :exports code
  <<load-base-class>>
  <<load-fixltx2e>>    
  <<load-graphicx>>   
  <<load-longtable>>    
  <<load-float>>  
  <<load-wrapfig>>  
  <<load-soul>>  
  <<load-fontenc>>
  <<load-textcomp>>  
  <<load-marvosym>>  
  <<load-wasysym>>  
  <<load-latexsym>>  
  <<load-amssymb>>  
  <<load-microtype>>
  <<load-setspace>>
  <<load-color>>
  <<load-gantt>>
  <<load-hyperref>>  
#+end_src
#+LATEX: \caption[The package loading part]{The package loading part.}\label{fig:package-loading}
#+END_listing

** Class code part
# <<class-code-part>>

The class code part is also implemented with noweb references (Listing
\ref{fig:class-code}).  It calls package-specific setup routines that
are defined in the [[latex-packages][LaTeX packages]] section.

  - setspace-code :: The code that sets [[setspace][doublespacing]]
  - proglangs-code :: Markup of terms having to do with
                      programming languages (Listing \ref{fig:proglangs})
  - progstructs-code :: Markup of terms having to do with
       programming structures (Listing \ref{fig:progstructs})

#+BEGIN_listing
#+source: class-code-part
#+begin_src latex :exports code :noweb tangle
  <<setspace-code>>
  <<proglangs-code>>
  <<progstructs-code>>
#+end_src
#+LATEX: \caption[The class code part]{The class code part.}\label{fig:class-code}
#+END_listing

* Semantic markup

LaTeX works with semantic markup, where units of meaning are tagged in
the source file.  A style or class file is responsible for typesetting
these appropriately.

It is possible to introduce semantic markup in Org-mode files and
[[latex:classfile][Org-article]] defines a variety of in-line and block-level semantic
markup conventions.

** In-line markup
# <<in-line markup>>

Arbitrary semantic markup in [[latex:proglang][Org-mode]] files is implemented by
defining new link types with [[latex:lispvar][org-add-link-type]].  Two new links are
defined here.  The [[latex-link-type][first code block]]
defines a new link type, [[latex:progstruct][latex]], whose [[latex:progstruct][path]] argument can hold the
name of any LaTeX command (Listing \ref{fig:latex-link}).  A link such as
=[latex:proglang][Org-mode]= will export =\proglang{Org-mode}= to the
LaTeX file (Listing).

#+BEGIN_listing
# <<latex-link-type>>
#+source: define-latex-link
#+begin_src emacs-lisp :exports code
  (org-add-link-type
   "latex" nil
   (lambda (path desc format)
     (cond
      ((eq format 'html)
       (format "<span class=\"%s\">%s</span>" path desc))
      ((eq format 'latex)
       (format "\\%s{%s}" path desc)))))
  
#+end_src
#+LATEX: \caption[Define a new link type, latex, for in-line markup]{Define a new link type, latex, for in-line markup.}\label{fig:latex-link}
#+END_listing

[[latex:classfile][Org-article]] defines [[markup-code-snippets][several macros]] for marking up code
snippets.  A separate link type is needed because the markup is
delimited by slashes rather than the curly braces typical of LaTeX.
This is handled by the "inline" link (Listing \ref{fig:inline-link}).

#+BEGIN_listing
# <<inline-link-type>>
#+source: define-inline-link
#+begin_src emacs-lisp :exports code :results silent
  (org-add-link-type
   "inline" nil
   (lambda (path desc format)
     (cond
      ((eq format 'html)
       (format "<span class=\"%s\">%s</span>" path desc))
      ((eq format 'latex)
       (format "\\%s/%s/" path desc)))))  
#+end_src
#+LATEX: \caption[Define a new link type, inline, for in-line source snippets]{Define a new link type, inline, for in-line source snippets.}\label{fig:inline-link}
#+END_listing
Note that both of the new link definitions assume a [[latex:proglang][CSS]] stylsheet that
defines classes with the same names as their corresponding LaTeX macros.

Using custom links in this way, it is possible to make the [[latex:proglang][Org-mode]]
LaTeX exporter honor the semantic markup defined in arbitrary LaTeX
(and CSS) style files.  With TAB, [[latex:proglang][Org-mode]] will even help complete
your new link as you type!

*** The path command
# <<path-command>>

It is often the case that paths are long and difficult to break at the
end of a line.  One way to get line breaks right is to wrap a path in
the [[latex:progstruct][path]] command from the [[latex:package][url]] package.  This can be done
with a link such as this one (abbreviated for obvious reasons)
=[latex:path][/path/ ...]=, which gets typeset so it will break at the
end of the line,
[[latex:path][/path/to/a/file/nested/very/deeply/in/the/directory/structure]].

*** Programming languages
# <<proglangs>>

Markup for programming language names, package names, and
class file names is provided with the [[latex:progstruct][proglang]], [[latex:progstruct][package]], and [[latex:progstruct][classfile]]
commands (Listing \ref{fig:proglangs}).  [[latex:classfile][Org-article]] currently defines
all of these in the same way.

#+BEGIN_listing
#+source: proglangs-code
#+begin_src latex :exports code
  \let\proglang=\textsf
  \let\package=\textsf
  \let\classfile=\textsf
#+end_src
#+LATEX: \caption[Markup of programming language, class, and package names]{Markup of programming language, class, and package names.}\label{fig:proglangs}
#+END_listing

For example,  =[[latex:proglangs][Org-mode]]= will set [[latex:proglang][Org-mode]] in sans serif font, as you
see it here.


*** Programming constructs
Markup for programming constructs is provided with the [[latex:progstruct][progstruct]]
and [[latex:progstruct][progexample]] commands.  Both are set in monospaced type; the
examples are set at a slightly smaller size.

#+BEGIN_listing
#+source: progstructs-code
#+begin_src latex :exports code
  \let\progstruct=\texttt
  \newcommand{\progexample}[1]{{\ttfamily\small #1}}
#+end_src
#+LATEX: \caption[Semantic markup of programming structures]{Semantic markup of programming structures.}\label{fig:progstructs}
#+END_listing

In addition, a =lispvar= command that will break long [[latex:proglang][Emacs Lisp]]
variable names at hyphens is also provided (see Listing
\ref{fig:load-hyperref}).  It is typically invoked as follows: \\  =[[latex:lispvar][a-long-and-descriptive-emacs-lisp-var]]=
** Block-level markup
# <<special blocks>>

Block-level markup is accomplished with the help of the
[[latex:package][org-special-blocks]] package.  It is used in this file to wrap the
[[latex:progstruct][listing]] environment defined by the [[latex:package][minted]] package around a source code
block to get a floating listing in the LaTeX document.  LaTeX will
keep track of floating listings and will also prepare a list of
listings that can be placed between the table of contents and the
first section of the article.  [[latex:classfile][Org-article]] makes the [[latex:progstruct][listing]]
environment available with the [[latex:package][listings]] package, as well, so this
facility can be used regardless of the package chosen to highlight
syntax and typeset source code listings.

Use a construct like this to wrap the source block in a [[latex:progstruct][listing]]
environment.  Typically, you will want to include a figure caption and
a label for cross referencing.  This can be done with a =#+LATEX:= line.

 : #+BEGIN_listing
 :  <source block>
 : #+LATEX: \caption{The caption.}\ref{fig:src_blk}
 : #+END_listing

To use this facility, you'll need to load [[latex:package][org-special-blocks]] (Listing
\ref{fig:org-special-blocks}).  This code can go in =.emacs=, or you
can load it for the session by executing the following source code
block with =C-c C-c=.

#+BEGIN_listing
#+source: special-blocks
#+begin_src emacs-lisp :exports code :results silent
  (require 'org-special-blocks)
#+end_src
#+LATEX: \caption[Require org-special-blocks]{Require org-special-blocks.}\label{fig:org-special-blocks}
#+END_listing

The [[latex:package][org-special-blocks]] package leaves it up to the user to see that
the HTML output is styled correctly.  A line of code like Listing
\ref{fig:css}, or something similar, when added to the [[latex:proglang][Org-mode]]
buffer, styles listings by putting a black box around them.

#+BEGIN_listing
#+source: css
#+begin_src org :exports code
 #+STYLE: <style>.listing {margin: 1em; padding: 1em; border: 1px solid black}</style>
#+end_src
#+LATEX: \caption[A simple CSS style for listings]{A simple CSS style for listings.}\label{fig:css}
#+END_listing

Note that the [[latex:progstruct][listing]] environment is implemented in [[latex:classfile][Org-article]] using
the [[latex:package][float]] package to ensure compatability with the environment defined
in the [[latex:package][minted]] package and to take advantage of the [[latex:package][float]] package being
one of the default packages loaded by [[latex:proglang][Org-mode]].  The [[latex:classfile][KOMA script
scrartcl]] class complains about this and advises that its own package,
[[latex:package][tocbasic]], be used instead.

* LaTeX packages
   :PROPERTIES:
   :VISIBILITY: folded
   :END:
# <<latex-packages>>

** Article base class options

[[latex:classfile][Org-article]] offers a choice of two base classes:  the
standard LaTeX [[latex:classfile][article]] class, and the [[http://www.ctan.org/tex-archive/macros/latex/contrib/koma-script/][KOMA-script]]
[[latex:classfile][scrartcl]] class.  The KOMA-script [[latex:classfile][scrartcl]] class is compatible with the
standard LaTeX article class; input that compiles with [[latex:classfile][article]] should
also compile with [[latex:classfile][scrartcl]].  It differs in the layout of the page and
the styling of page elements, producing a somewhat more "modern"
design based on principles set out by the typographer and book
designer [[http://en.wikipedia.org/wiki/Jan_Tschichold][Jan Tschichold]].

To select the standard LaTeX [[latex:classfile][article]] class, use the class option
=[article]= (Listing \ref{fig:option-article}).  To select the
[[http://www.ctan.org/tex-archive/macros/latex/contrib/koma-script/][KOMA-script]] [[latex:classfile][scrartcl]] class, use the class option =[koma]= (Listing
\ref{fig:option-koma}).  By default, the LaTeX [[latex:classfile][article]] class is
loaded (Listing \ref{fig:load-base-class}). For information on
[[latex:classfile][scrartcl]], you can probably read the documentation on your system with
the following shell command: [[inline:sh][texdoc koma]].


#+BEGIN_listing
#+source: option-article
#+begin_src latex :exports code
  \newboolean{ORGART@article}
  \DeclareOption{article}{\setboolean{ORGART@article}{true}}
#+end_src
#+LATEX: \caption[Set up the article option]{Set up the article option.}\label{fig:option-article}
#+END_listing

#+BEGIN_listing
#+source: option-koma
#+begin_src latex :exports code
  \newboolean{ORGART@koma}
  \DeclareOption{koma}{\setboolean{ORGART@koma}{true}}
#+end_src
#+LATEX: \caption[Set up the koma option]{Set up the koma option.}\label{fig:option-koma}
#+END_listing

#+BEGIN_listing
#+source: load-base-class
#+begin_src latex :exports code
  \ifthenelse{\boolean{ORGART@koma}}
  {\LoadClassWithOptions{scrartcl}}
  {\LoadClassWithOptions{article}}
#+end_src
#+LATEX: \caption[Load the base class]{Load the base class.}\label{fig:load-base-class}
#+END_listing

*** Paper size

There are several paper size options are available for both the
standard LaTeX [[latex:classfile][article]] class and the [[http://www.ctan.org/tex-archive/macros/latex/contrib/koma-script/][KOMA-script]] [[latex:classfile][scrartcl]] class
(Listing \ref{fig:paper-sizes}).  The
first three options are [[http://en.wikipedia.org/wiki/Paper_size#North_American_paper_sizes][North American paper sizes]].  The [[latex:progstruct][a4paper]],
[[latex:progstruct][a5paper]], [[latex:progstruct][b4paper]], and [[latex:progstruct][b5paper]] options are [[http://en.wikipedia.org/wiki/Paper_size#The_international_standard:_ISO_216][international standard ISO
216]].  The [[latex:progstruct][landscape]] option orients the paper with the long axis
horizontal.

#+BEGIN_listing
#+source: paper-sizes
#+begin_src org :exports code
  #+LaTeX_CLASS_OPTIONS: [letterpaper]
  #+LaTeX_CLASS_OPTIONS: [legalpaper]
  #+LaTeX_CLASS_OPTIONS: [executivepaper]
  #+LaTeX_CLASS_OPTIONS: [a4paper]
  #+LaTeX_CLASS_OPTIONS: [a5paper]
  #+LaTeX_CLASS_OPTIONS: [b4paper]
  #+LaTeX_CLASS_OPTIONS: [b5paper]
  #+LaTeX_CLASS_OPTIONS: [landscape]
#+end_src
#+LATEX: \caption[Base class paper size options]{Base class paper size options.}\label{fig:paper-sizes}
#+END_listing

The [[http://www.ctan.org/tex-archive/macros/latex/contrib/koma-script/][KOMA-script]] [[latex:classfile][scrartcl]] class has options for a fuller range of the
[[http://en.wikipedia.org/wiki/Paper_size#The_international_standard:_ISO_216][international standard ISO 216]] paper sizes, in addition to the sizes
offered by the standard LaTeX [[latex:classfile][article]] class.  In the examples in
Listing \ref{fig:koma-paper-sizes}, X is replaced by an integer [0, 1,
... 10].
 
#+BEGIN_listing
#+source: koma-paper-sizes
#+begin_src org :exports code
  #+LaTeX_CLASS_OPTIONS: [aXpaper]
  #+LaTeX_CLASS_OPTIONS: [bXpaper]
  #+LaTeX_CLASS_OPTIONS: [cXpaper]
  #+LaTeX_CLASS_OPTIONS: [dXpaper]  
#+end_src
#+LATEX: \caption[Paper sizes available only with the KOMA scrartcl class]{Paper sizes available only with the KOMA scrartcl class.}\label{fig:koma-paper-sizes}
#+END_listing

*** Font size

There are three base font size options available for the standard
LaTeX [[latex:classfile][article]] and the [[http://www.ctan.org/tex-archive/macros/latex/contrib/koma-script/][KOMA-script]] [[latex:classfile][scrartcl]] classes (Listing
\ref{fig:font-sizes}).  This option sets the size of the main text in
the body of the document.  Other fonts used in the document design,
such as headers, footers, heads, sub-heads, etc., will be scaled
according to the document design of the base class.

#+BEGIN_listing
#+source: font-sizes
#+begin_src org :exports code
  ,#+LaTeX_CLASS_OPTIONS: [10pt]
  ,#+LaTeX_CLASS_OPTIONS: [11pt]
  ,#+LaTeX_CLASS_OPTIONS: [12pt]
#+end_src
#+LATEX: \caption[Standard font sizes]{Standard font sizes.}\label{fig:font-sizes}
#+END_listing

*** Text block and margins

With the [[latex:progstruct][koma]] option, the size of the text block and the resulting
margins can be altered using the option [[latex:progstruct][DIV]].  A typical value of [[latex:progstruct][DIV]]
is 9. Smaller text blocks with larger margins result when [[latex:progstruct][DIV]] takes a
smaller value and larger text blocks with smaller margins result when
[[latex:progstruct][DIV]] takes a larger value (Fig. \ref{fig:div}).

#+CAPTION: Text block sizes on A4 paper with different values of DIV.
#+LABEL: fig:div
#+ATTR_LaTeX: width=0.8\textwidth
#+results:
[[file:../images/org-article-text-blocks.png]]


The [[latex:classfile][KOMA]] class can also take into account the part of the page used
by the binding.  This value is passed to the package with the option
[[latex:progstruct][BCOR]], which takes any LaTeX length as its argument.

For example, to set the text block large and leave ample space for
binding with a clip, one might pass the following options to the class
=[koma,DIV=15,BCOR=15mm]=.

#+source: koma-text-block
#+begin_src org :exports none
  #+LaTeX_CLASS_OPTIONS: [koma,DIV=15,BCOR=15mm]
#+end_src

*** Table of contents
In the default configuration, the [[latex:proglang][Org-mode]] LaTeX exporter includes a
function that sandwiches the LaTeX =\tableofcontents= command between
a command that sets the depth of the headings that appear in the table
of contents (based on the number of headline levels that will be
exported as headings, rather than lists) and a command to add some
vertical space.  Neither of these additions to the =\tableofcontents=
command is especially desireable.  It is often the case that one wants
the table of contents depth to differ from the depth to which sections
are numbered.  Also, in the LaTeX world, the space between the end of one
element and the start of another is something that is specified within
a class or style file, rather than within the document itself.  Formatting with
the class or style file exclusively can give the finished document a pleasing
stylistic uniformity that is difficult to achieve in an ad hoc way.
Also, hardwiring the table of contents in this way always puts it
directly following the output of the LaTeX [[latex:progstruct][maketitle]] command.  In
practice, however, it is often useful to print an abstract or
executive summary between the title and the table of contents.
Fortunately, the LaTeX exporter is coded in such a way that it is
possible for the user to alter this behavior relatively easily.

[[latex:classfile][Org-article]] makes these behaviors possible by changing the default
behavior of the LaTeX exporter so that nothing is inserted after the
LaTeX [[latex:progstruct][maketitle]] command (Listing \ref{fig:format-no-toc}).

#+BEGIN_listing
#+source: format-no-toc
#+begin_src emacs-lisp :exports code
(defun org-export-latex-no-toc (depth)  
    (when depth
      (format "%% Org-mode is exporting headings to %s levels.\n"
              depth)))
  (setq org-export-latex-format-toc-function 'org-export-latex-no-toc)
#+end_src
#+LATEX: \caption[Configure org-export-latex-format-toc-function]{Configure org-export-latex-format-toc-function.}\label{fig:format-no-toc}
#+END_listing

The table of contents depth is set with the [[latex:progstruct][tocdepth]] key:
=[tocdepth=<section>]=.  The recognized values of =<section>= are
=section=, =subsection=, =subsubsection=, =paragraph=, and
=subparagraph= (Listing \ref{fig:tocdepth}).  These are the standard LaTeX section names available
to articles.

#+BEGIN_listing
#+source: pgf-option-tocdepth
#+begin_src latex :exports code
  \pgfkeys{ 
    /ORGART/.cd, 
    tocdepth/.is choice,
    tocdepth/section/.code={\AtBeginDocument{\setcounter{tocdepth}{1}}},
    tocdepth/subsection/.code={\AtBeginDocument{\setcounter{tocdepth}{2}}},
    tocdepth/subsubsection/.code={\AtBeginDocument{\setcounter{tocdepth}{3}}},
    tocdepth/paragraph/.code={\AtBeginDocument{\setcounter{tocdepth}{4}}},
    tocdepth/subparagraph/.code={\AtBeginDocument{\setcounter{tocdepth}{5}}}
  } 
#+end_src
#+LATEX: \caption[The tocdepth key]{The tocdepth key.}\label{fig:tocdepth}
#+END_listing
*** Section numbering
# <<section-numbering>>

It is possible to set the level to which sections will be numbered
with [[latex:classfile][Org-article]].  Sections below this level will have unnumbered
headings.  This requires that the default behavior of the [[latex:proglang][Org-mode]]
LaTeX exporter be modified, as in Listing \ref{fig:format-no-toc}.

Section numbering is controlled with the =secnum= key: =[secnum=<section>]=.  [[latex:classfile][Org-article]]
recognizes the following values of =<section>: =none= to inhibit
section numbering altogether; =section=, =subsection=;
=subsubsection=; =paragraph=; and =subparagraph= (Listing \ref{fig:secnum}).

#+BEGIN_listing
#+source: pgf-option-secnum
#+begin_src latex :exports none
  \pgfkeys{ 
    /ORGART/.cd, 
    secnum/.is choice,
    secnum/none/.code={\AtBeginDocument{\setcounter{secnumdepth}{0}}},
    secnum/section/.code={\AtBeginDocument{\setcounter{secnumdepth}{1}}},
    secnum/subsection/.code={\AtBeginDocument{\setcounter{secnumdepth}{2}}},
    secnum/subsubsection/.code={\AtBeginDocument{\setcounter{secnumdepth}{3}}},
    secnum/paragraph/.code={\AtBeginDocument{\setcounter{secnumdepth}{4}}},
    secnum/subparagraph/.code={\AtBeginDocument{\setcounter{secnumdepth}{5}}}
  } 
#+end_src
#+LATEX: \caption[The secnum key]{The secnum key.}\label{fig:secnum}
#+END_listing

*** Equations

The standard LaTeX [[latex:classfile][article]] class and the [[http://www.ctan.org/tex-archive/macros/latex/contrib/koma-script/][KOMA-script]] [[latex:classfile][scrartcl]] class
both recognize two options that control formatting of equations
(Listing \ref{fig:equations}).  The option [[latex:progstruct][leqno]] will number equations
on the left, rather than the right, which is the default.  The option
[[latex:progstruct][fleqn]] displays equations flush left, rather than centered, which is
the default

#+BEGIN_listing
#+source: equations
#+begin_src org :exports code
  ,#+LaTeX_CLASS_OPTIONS: [leqno]
  ,#+LaTeX_CLASS_OPTIONS: [fleqn]
#+end_src
#+LATEX: \caption[Options for equation numbering]{Options for equation numbering.}\label{fig:equations}
#+END_listing
*** Table captions

The standard LaTeX [[latex:classfile][article]] formats captions to appear below the
captioned item.  However, many document styles require table captions
above the table.  Users of the standard LaTeX [[latex:classfile][article]] class typically
use a package, [[http://tug.ctan.org/cgi-bin/ctanPackageInformation.py?id%3Dtopcapt][topcapt]], and place the command [[latex:progstruct][topcaption]] above the
captioned item.  The [[http://www.ctan.org/tex-archive/macros/latex/contrib/koma-script/][KOMA-script]] [[latex:classfile][scrartcl]] class provides an option
that gets rid of the need for [[latex:package][topcapt]]: =[captions=tableheading]=.
This is left as an option so that default handling of table captions
is the same, regardless of which base class is chosen and even though
the default yields less than satisfactory results.  


** Org-mode default packages

*** Inputenc                                                       :noexport:

The input encoding of the document is specified by the [[latex:package][inputenc]] package.  It
takes one of the following options:

#+source: inputenc-options
#+begin_src org :exports code
  ,#+LaTeX_CLASS_OPTIONS: [ascii]
  ,#+LaTeX_CLASS_OPTIONS: [latin1] 
  ,#+LaTeX_CLASS_OPTIONS: [latin2]
  ,#+LaTeX_CLASS_OPTIONS: [latin3] 
  ,#+LaTeX_CLASS_OPTIONS: [latin4] 
  ,#+LaTeX_CLASS_OPTIONS: [latin5]
  ,#+LaTeX_CLASS_OPTIONS: [latin9] 
  ,#+LaTeX_CLASS_OPTIONS: [latin10]
  ,#+LaTeX_CLASS_OPTIONS: [decmulti]
  ,#+LaTeX_CLASS_OPTIONS: [cp850]
  ,#+LaTeX_CLASS_OPTIONS: [cp852]
  ,#+LaTeX_CLASS_OPTIONS: [cp858]
  ,#+LaTeX_CLASS_OPTIONS: [cp437]
  ,#+LaTeX_CLASS_OPTIONS: [cp437de]
  ,#+LaTeX_CLASS_OPTIONS: [cp865]
  ,#+LaTeX_CLASS_OPTIONS: [applemac]
  ,#+LaTeX_CLASS_OPTIONS: [macce] 
  ,#+LaTeX_CLASS_OPTIONS: [next]
  ,#+LaTeX_CLASS_OPTIONS: [cp1250]
  ,#+LaTeX_CLASS_OPTIONS: [cp1252]
  ,#+LaTeX_CLASS_OPTIONS: [cp1257]
  ,#+LaTeX_CLASS_OPTIONS: [ansinew]
  ,#+LaTeX_CLASS_OPTIONS: [utf8]
#+end_src

The package documentation describes each of these options.  You can
probably read the documentation for [[latex:package][inputenc]] with the following shell
command:
#+source: read-inputenc
#+begin_src sh :exports code
  texdoc inputenc
#+end_src

This is a standard [[latex:proglang][Org-mode]] package that is loaded by default.  An
option is provided to not load it.

#+source: org-buffer-inputenc
#+begin_src org :exports code
  #+LaTeX_CLASS_OPTIONS: [noinputenc]
#+end_src
 

#+source: option-inputenc
#+begin_src latex :exports none
  \newboolean{noinputenc}  
  \DeclareOption{noinputenc}{\setboolean{noinputenc}{true}}  
#+end_src

#+source: load-inputenc
#+begin_src latex :exports none
  \ifthenelse{\boolean{noinputenc}}
  {}
  {\RequirePackage{inputenc}}
#+end_src

#+source: options-to-inputenc
#+begin_src latex :exports none
  \DeclareOption*{%
    \PassOptionsToPackage{\CurrentOption}{inputenc}
  }
#+end_src

*** Inputenc
The input encoding of the document is specified by the [[latex:package][inputenc]]
package.  [[latex:proglang][Org-mode]] provides a nifty method for sending options to this
package, so it is not loaded directly by [[latex:classfile][Org-article]].  See
[[export-setup][Org-mode LaTeX export setup]].

*** Fontenc

The [[latex:package][fontenc]] package specifies the encoding to use with a font.  The
history of font encodings in LaTeX is a long one; suffice it to say
that the most common option is [[latex:progstruct][T1]], also known as the Cork encoding
because it was formulated at a EuroTeX conference in Ireland's County
Cork.  The [[latex:package][fontenc]] package pretends that it was never loaded so that
it can be called several times with different options to load fonts
that have various encodings.

You can probably read the documentation for [[latex:package][fontenc]] on your system
with the following shell command:  [[inline:sh][texdoc fontenc]].

This is a standard [[latex:proglang][Org-mode]] package that is loaded by default (Listing
\ref{fig:nofontenc}).  An option, =[nofontenc]=, is provided not to
load it (Listing \ref{fig:nofontenc}).  Note that most of the font
sets load [[latex:package][fontenc]] themselves, so the =[nofontenc]= option can't ensure
that the package won't be loaded.

#+BEGIN_listing
#+source: load-fontenc
#+begin_src latex :exports code
  \ifthenelse{\boolean{ORGART@nofontenc}}
  {}
  {\AtEndOfClass{\RequirePackage[T1]{fontenc}}}
#+end_src
#+LATEX: \caption[Loading the fontenc package]{Loading the fontenc package.}\label{fig:load-fontenc}
#+END_listing

#+BEGIN_listing
#+source: option-fontenc
#+begin_src latex :exports code
  \newboolean{ORGART@nofontenc}  
  \DeclareOption{nofontenc}{\setboolean{ORGART@nofontenc}{true}}
#+end_src
#+LATEX: \caption[The nofontenc option]{The nofontenc option.}\label{fig:nofontenc}
#+END_listing

Options passed to [[latex:classfile][Org-article]] are passed on to the [[latex:package][fontenc]] package
(Listing \ref{fig:options-to-fontenc}).

#+BEGIN_listing
#+source: options-to-fontenc
#+begin_src latex :exports code
  \DeclareOption*{%
    \PassOptionsToPackage{\CurrentOption}{fontenc}
  }
#+end_src
#+LATEX: \caption[Passing options to the fontenc package]{Passing options to the fontenc package.}\label{fig:options-to-fontenc}
#+END_listing
*** Fixltx2e
The [[latex:package][fixltx2e]] package applies fixes to LaTeX2e that would break older
documents, so have not been applied to the LaTeX2e kernel.  You can
probably read about [[latex:package][fixltx2e]] on your system by issuing the following
shell command: [[inline:sh][texdoc fixltx2e]].  An option, =[nofixltx2e]= is provided
not to load it (Listing \ref{fig:nofixltx2e}).  This is a standard
[[latex:proglang][Org-mode]] package that is loaded by default (Listing
\ref{fig:load-fixltx2e}).  The package doesn't take any options.

#+BEGIN_listing
#+source: option-fixltx2e
#+begin_src latex :exports code
  \newboolean{ORGART@nofixltx2e}
  \DeclareOption{nofixltx2e}{\setboolean{ORGART@nofixltx2e}{true}}
#+end_src
#+LATEX: \caption[The nofixltx2e option]{The nofixltx2e option.}\label{fig:nofixltx2e}
#+END_listing

#+BEGIN_listing
#+source: load-fixltx2e
#+begin_src latex :exports code
  \ifthenelse{\boolean{ORGART@nofixltx2e}}
  {}
  {\AtEndOfClass{\RequirePackage{fixltx2e}}}
#+end_src
#+LATEX: \caption[Load the fixltx2e package]{Load the fixltx2e package.}\label{fig:load-fixltx2e}
#+END_listing

*** Graphicx
The [[latex:package][graphicx]] package is typically configured with *.def files
because the facilities it specifies are provided by a graphics driver,
rather than by LaTeX.  For this reason, it is typically loaded without
options. 

You should be able to read about [[latex:package][graphicx]], along with its companion
packages [[latex:package][color]] and [[latex:package][graphics]] by issuing the following shell
command: [[inline:sh][texdoc graphicx]].  An
option, [[latex:progstruct][nographicx]], is provided not to load it (Listing
\ref{fig:nographicx}), otherwise this is a standard [[latex:proglang][Org-mode]] package
that is loaded by default (Listing \ref{fig:load-graphicx}).

#+BEGIN_listing
#+source: option-graphicx
#+begin_src latex :exports code
  \newboolean{ORGART@nographicx}
  \DeclareOption{nographicx}{\setboolean{ORGART@nographicx}{true}}
#+end_src
#+LATEX: \caption[The nographicx option]{The nographicx option.}\label{fig:nographicx}
#+END_listing

#+BEGIN_listing
#+source: load-graphicx
#+begin_src latex :exports code
  \ifthenelse{\boolean{ORGART@nographicx}}
  {}
  {\AtEndOfClass{\RequirePackage{graphicx}}}
#+end_src
#+LATEX: \caption[Load the graphicx package]{Load the graphicx package.}\label{fig:load-graphicx}
#+END_listing

*** Longtable
The [[latex:package][longtable]] package defines a new LaTeX environment that can be
used in place of the =tabular= environment and can be broken by the
TeX page-breaking algorithm.  It is used, as the name implies, by long
tables that typically won't fit onto a single page.  The package is
loaded without option.

You should be able to read the [[latex:package][longtable]] documentation on your
system by issuing the following shell command: [[inline:sh][texdoc longtable]].  An
option, [[latex:progstruct][nolongtable]], is provided not to load it (Listing \ref{fig:nolongtable}).
This is a standard [[latex:proglang][Org-mode]] package that is loaded by default (Listing
\ref{fig:load-longtable}).

#+BEGIN_listing
#+source: option-longtable
#+begin_src latex :exports code
  \newboolean{ORGART@nolongtable}
  \DeclareOption{nolongtable}{\setboolean{ORGART@nolongtable}{true}}
#+end_src
#+LATEX: \caption[The nolongtable option]{The nolongtable option.}\label{fig:nolongtable}
#+END_listing

#+BEGIN_listing
#+source: load-longtable
#+begin_src latex :exports code
  \ifthenelse{\boolean{ORGART@nolongtable}}
  {}
  {\AtEndOfClass{\RequirePackage{longtable}}}
#+end_src
#+LATEX: \caption[Load the longtable package]{Load the longtable package.}\label{fig:load-longtable}
#+END_listing
*** Float
Tables and figures in LaTeX are treated as floating objects.
Internally, they are treated as a single (large) glyph, which makes
them difficult to place on a page of otherwise small glyphs.
Consequently, they are allowed to "float" until a suitable location is
found.  

The [[latex:package][float]] package provides facilities to define new floating
environments, to restyle the existing float environments, and
additionally defines a placement parameter, [[latex:progstruct][{H}]], that keeps a float
from floating.  The package is loaded without options.  Unfortunately,
the [[latex:package][float]] package isn't fully compatible with the KOMA-script [[latex:classfile][scrartcl]]
class, which uses a package, [[latex:package][tocbasic]], instead.  [[latex:classfile][Org-article]] can use
either of these packages, depending upon whether the [[latex:classfile][article]] class or
the KOMA-script [[latex:classfile][scrartcl]] class is used.

#+BEGIN_listing
#+source: load-float
#+begin_src latex :exports code
  \ifthenelse{\boolean{ORGART@koma}}
  {\RequirePackage{tocbasic}}
  {\RequirePackage{float}}
#+end_src
#+LATEX: \caption[Loading the float or tocbasic packages]{Loading the float or tocbasic packages.}\label{fig:load-float}
#+END_listing

You can probably read about the [[latex:package][float]] package on your system by
issuing the following shell command: [[inline:sh][texdoc float]].  You can learn
about the [[latex:package][tocbasic]] package by issuing this shell command: [[inline:sh][texdoc koma]].

*** Wrapfig
The [[latex:package][wrapfig]] package defines two new environments to set a narrow
float at the edge of the text and wrap the text around it.  Because
LaTeX floats in these new environments do not float it is sometimes the
case that they appear out of order, e.g. Figure n appears before
Figure n-1.  Caveat emptor.

The documentation for this package is included at the end of the
package source.  You should be able to read it on your system by
issuing the following shell command: [[inline:sh][texdoc wrapfig]].  An option,
[[latex:progstruct][nowrapfig]], is provided to not load it (Listing \ref{fig:nowrapfig}).
This is a standard [[latex:proglang][Org-mode]] package that is loaded by default (Listing
\ref{fig:load-wrapfig}).  The package is loaded without options.

#+BEGIN_listing
#+source: option-wrapfig
#+begin_src latex :exports code
  \newboolean{ORGART@nowrapfig}
  \DeclareOption{nowrapfig}{\setboolean{ORGART@nowrapfig}{true}}
#+end_src
#+LATEX: \caption[The nowrapfig option]{The nowrapfig option.}\label{fig:nowrapfig}
#+END_listing

#+BEGIN_listing
#+source: load-wrapfig
#+begin_src latex :exports code
  \ifthenelse{\boolean{ORGART@nowrapfig}}
  {}
  {\AtEndOfClass{\RequirePackage{wrapfig}}}
#+end_src
#+LATEX: \caption[Load the wrapfig package]{Load the wrapfig package.}\label{fig:load-wrapfig}
#+END_listing

*** Soul
The [[latex:package][soul]] package is used primarily for underlining text.  You can
probably read the [[latex:package][soul]] documentation on your system by issuing the
following shell command: [[inline:sh][texdoc soul]].  An option, [[latex:progstruct][nosoul]], is provided
not to load it (Listing \ref{fig:nosoul}).  This is a standard
[[latex:proglang][Org-mode]] package that is loaded by default (Listing
\ref{fig:load-soul}).  It is loaded without options.

#+BEGIN_listing
#+source: option-soul
#+begin_src latex :exports code
  \newboolean{ORGART@nosoul}
  \DeclareOption{nosoul}{\setboolean{ORGART@nosoul}{true}}
#+end_src
#+LATEX: \caption[The nosoul option]{The nosoul option.}\label{fig:nosoul}
#+END_listing

#+BEGIN_listing
#+source: load-soul
#+begin_src latex :exports code
  \ifthenelse{\boolean{ORGART@nosoul}}
  {}
  {\AtEndOfClass{\RequirePackage{soul}}}
#+end_src
#+LATEX: \caption[Load the soul package]{Load the soul package.}\label{fig:load-soul}
#+END_listing

*** T1enc                                                          :noexport:
This is a standard [[latex:proglang][Org-mode]] package that is loaded by default.  An
option is provided to not load it.

#+source: org-buffer-t1enc
#+begin_src org :exports code
  #+LaTeX_CLASS_OPTIONS: [not1enc]
#+end_src
 
#+source: option-t1enc
#+begin_src latex :exports code
  \newboolean{ORGART@not1enc} 
  \DeclareOption{not1enc}{\setboolean{ORGART@not1enc}{true}}
#+end_src

#+source: load-t1enc
#+begin_src latex :exports code
  \ifthenelse{\boolean{ORGART@not1enc}}
  {}
  {\RequirePackage{t1enc}}
#+end_src

*** Textcomp
This package provides support for the Text Companion fonts, which
provide symbols used by [[latex:progstruct][org-entities]], in particular the Euro currency
symbol.  An option, [[latex:progstruct][notextcomp]], is provided not to load it (Listing
\ref{fig:notextcomp}).  This is a standard [[latex:proglang][Org-mode]] package that is
loaded by default (Listing \ref{fig:load-textcomp}).  It is loaded
without options.

#+BEGIN_listing
#+source: option-textcomp
#+begin_src latex :exports code
  \newboolean{ORGART@notextcomp}
  \DeclareOption{notextcomp}{\setboolean{ORGART@notextcomp}{true}}
#+end_src
#+LATEX: \caption[The notextcomp option]{The notextcomp option.}\label{fig:notextcomp}
#+END_listing

#+BEGIN_listing
#+source: load-textcomp
#+begin_src latex :exports code
  \ifthenelse{\boolean{ORGART@notextcomp}}
  {}
  {\AtEndOfClass{\RequirePackage{textcomp}}}
#+end_src
#+LATEX: \caption[Load the textcomp package]{Load the textcomp package.}\label{fig:load-textcomp}
#+END_listing
*** MarVoSym
The [[latex:package][marvosym]] package provides support for Martin Vogel's Symbol
font, some glyphs from which are required by [[latex:progstruct][org-entities]].

You can probably read about the [[latex:package][marvosym]] package by issuing the
following command in the shell: [[inline:sh][texdoc marvosym]].  An option,
[[latex:progstruct][nomarvosym]], is provided not to load it (Listing \ref{fig:nomarvosym}).
This is a standard [[latex:proglang][Org-mode]] package that is loaded by default (Listing
\ref{fig:load-marvosym}).  The package is loaded without options.

#+BEGIN_listing
#+source: option-marvosym
#+begin_src latex :exports code
  \newboolean{ORGART@nomarvosym}
  \DeclareOption{nomarvosym}{\setboolean{ORGART@nomarvosym}{true}}
#+end_src
#+LATEX: \caption[The nomarvosym option]{The nomarvosym option.}\label{fig:nomarvosym}
#+END_listing

#+BEGIN_listing
#+source: load-marvosym
#+begin_src latex :exports code
  \ifthenelse{\boolean{ORGART@nomarvosym}}
  {}
  {\AtEndOfClass{\RequirePackage{marvosym}}}
#+end_src
#+LATEX: \caption[Load the marvosym package]{Load the marvosym package.}\label{fig:load-marvosym}
#+END_listing
*** Wasysym
The [[latex:package][wasysym]] package makes available some symbol glyphs from the [[latex:package][wasy]]
fonts.  It is needed to support some of the glyphs in [[latex:progstruct][org-entities]].
You can probably read the wasysym documentation on your system by
issuing the following shell command: [[inline:sh][texdoc wasysym]].

When it is loaded without options, this package clashes with the
American Mathematical Society's [[latex:package][amsmath]] package.  Using the
[[latex:progstruct][nointegrals]] option resolves this clash.  The [[latex:progstruct][waysym]] key takes the
following options (Listing \ref{fig:option-wasysym}):
  - none :: Don't load the [[latex:package][wasysym]] package
  - integrals :: Load the [[latex:package][wasysym]] package with the [[latex:progstruct][integrals]] option
  - nointegrals :: Load the [[latex:package][wasysym]] package with the [[latex:progstruct][nointegrals]] option

This is a standard [[latex:proglang][Org-mode]] package that is loaded by default with the
[[latex:progstruct][integrals]] option (Listing \ref{fig:load-wasysym}).

#+BEGIN_listing
#+source: pgf-option-wasysym
#+begin_src latex :exports code
  \newboolean{ORGART@nowasysym}
  \pgfkeys{ 
    /ORGART/.cd, 
    wasysym/.is choice,
    wasysym/none/.code={\setboolean{ORGART@nowasysym}{true}},
    wasysym/integrals/.code={\setboolean{ORGART@nowasysym}{true}
    \AtEndOfClass{\RequirePackage[integrals]{wasysym}}},
    wasysym/nointegrals/.code={\setboolean{ORGART@nowasysym}{true}
    \AtEndOfClass{\RequirePackage[nointegrals]{wasysym}}}
  } 
#+end_src
#+LATEX: \caption[The wasysym key]{The wasysym key.}\label{fig:option-wasysym}
#+END_listing

#+BEGIN_listing
#+source: load-wasysym
#+begin_src latex :exports code
  \ifthenelse{\boolean{ORGART@nowasysym}}
  {}
  {\AtEndOfClass{\RequirePackage[integrals]{wasysym}}}
#+end_src
#+LATEX: \caption[Load the wasysym package]{Load the wasysym package.}\label{fig:load-wasysym}
#+END_listing

*** Latexsym
The [[latex:package][latexsym]] package provides a few glyphs, one or more of which might
be required by [[latex:progstruct][org-entities]].  You can probably read about the [[latex:package][latexsym]]
package on your system by issuing the following shell command: [[inline:sh][texdoc
latexsym]].  According to the documentation, [[latex:package][latexsym]] isn't needed if
the [[latex:package][amssymb]] package is loaded.  An option, [[latex:progstruct][nolatexsym]], is provided not
to load it (Listing \ref{fig:nolatexsym}).  This is a standard
[[latex:proglang][Org-mode]] package that is loaded by default if the [[latex:package][amssymb]] package is
not loaded (Listing \ref{fig:load-latexsym}).

#+BEGIN_listing
#+source: option-latexsym
#+begin_src latex :exports code
  \newboolean{ORGART@nolatexsym}
  \DeclareOption{nolatexsym}{\setboolean{ORGART@nolatexsym}{true}}
#+end_src
#+LATEX: \caption[The nolatexsym option]{The nolatexsym option.}\label{fig:nolatexsym}
#+END_listing

#+BEGIN_listing
#+source: load-latexsym
#+begin_src latex :exports code
  \ifthenelse{\boolean{ORGART@nolatexsym}\and\not\boolean{ORGART@noamssymb}}
  {}
  {\AtEndOfClass{\RequirePackage{latexsym}}}
#+end_src
#+LATEX: \caption[Load the latexsym package]{Load the latexsym package.}\label{fig:load-latexsym}
#+END_listing

*** Amssymb
This package provides access to the symbols defined in the American
Mathematical Society's [[http://www.ams.org/publications/authors/tex/amsfonts][symbol fonts]] =msam= and =msbm=.  They are
required to support [[latex:progstruct][org-entities]].  It is superseded by the
=mathdesign= package, which is used by various fonts.  If one of these
is specified, then the [[latex:package][amssymb]] package is not loaded. If the package is
loaded, then it is loaded without options.

You can probably read the [[latex:package][amssymb]] package documentation by issuing the
following shell command: [[inline:sh][texdoc amssymb]].  An option, [[latex:progstruct][noamssymb]], is
provided not to load it (Listing \ref{fig:noamssymb}).  This is a
standard [[latex:proglang][Org-mode]] package that is loaded by default (Listing
\ref{fig:load-amssymb}).

#+BEGIN_listing
#+source: option-amssymb
#+begin_src latex :exports code
  \newboolean{ORGART@noamssymb}
  \DeclareOption{noamssymb}{\setboolean{ORGART@noamssymb}{true}}
#+end_src
#+LATEX: \caption[The noamssymb option]{The noamssymb option.}\label{fig:noamssymb}
#+END_listing

#+BEGIN_listing
#+source: load-amssymb
#+begin_src latex :exports code
  \ifthenelse{\boolean{ORGART@noamssymb}}
  {}
  {\AtEndOfClass{\RequirePackage{amssymb}}}
#+end_src
#+LATEX: \caption[Load the amssymb package]{Load the amssymb package.}\label{fig:load-amssymb}
#+END_listing  

*** Hyperref
The [[latex:package][hyperref]] package turns LaTeX cross-referencing commands into
hyperlinks, including the table of contents, bibliography, etc.  It is
typically configured on a site-wide basis with options kept in a file,
=hyperref.cfg=.  The LaTeX document loads the package without
specifying any options.  The [[latex:package][hyperref]] package redefines many LaTeX
commands, so it needs to be loaded at, or near the end of, the [[package-loading-part][package
loading part]]. 

The [[latex:package][hyperref]] package accepts numerous options, which can be given as
=key = value= pairs.  Boolean options default to =true= when passed
without a value.  Options are passed in the usual way, and
[[latex:classfile][Org-article]] simply passes them on to [[latex:package][hyperref]].

#+source: hyperref-options
#+begin_src org :exports none
  ,#+LaTeX_CLASS_OPTIONS: [anchorcolor, backref, baseurl, bookmarks,
  bookmarksnumbered, bookmarksopen, bookmarksopenlevel, bookmarkstype,
  breaklinks, CJKbookmarks, citebordercolor, citecolor, colorlinks,
  draft, dvipdfm, dvipdfmx, dvips, dvipsone, dviwindo, encap,
  extension, filebordercolor, filecolor, final, frenchlinks,
  hyperfigures, hyperfootnotes, hyperindex, hypertex, hypertexnames,
  implicit, latex2html, legalpaper, linkbordercolor,
  linkcolor, linktocpage, menubordercolor, menucolor, nativepdf,
  naturalnames, nesting, pageanchor, pagebackref, pdfauthor,
  pdfborder, pdfcenterwindow, pdfcreator, pdfdirection,
  pdfdisplaydoctitle, pdfduplex, pdffitwindow, pdfhighlight, pdfinfo,
  pdfkeywords, pdflang, pdfmark, pdfmenubar, pdfnewwindow,
  pdfnonfullscreenpagemode, pdfnumcopies, pdfpagelayout, pdfpagemode,
  pdfpagelabels, pdfpagescrop, pdfpagetransition,
  pdfpicktraybypdfsize, pdfprintarea, pdfprintclip, pdfprintpagerange,
  pdfprintscaling, pdfproducer, pdfstartpage, pdfstartview,
  pdfsubject, pdftex, pdftitle, pdftoolbar, pdftrapped, pdfview,
  pdfviewarea, pdfviewclip, pdfwindowui, plainpages, ps2pdf,
  raiselinks, runbordercolor, runcolor, setpagesize, tex4ht, textures,
  unicode, urlbordercolor, urlcolor, verbose, vtex, xetex]
#+end_src


You can probably read the [[latex:package][hyperref]] documentation by issuing the
following shell command: [[inline:sh][texdoc hyperref]].  An option, [[latex:progstruct][nohyperref]], is
provided not to load it (Listing \ref{fig:nohyperref}).  This is a standard [[latex:proglang][Org-mode]] package that is
loaded by default (Listing \ref{fig:load-hyperref}).

#+BEGIN_listing
#+source: option-hyperref
#+begin_src latex :exports code
  \newboolean{ORGART@nohyperref}
  \DeclareOption{nohyperref}{\setboolean{ORGART@nohyperref}{true}}
#+end_src
#+LATEX: \caption[The nohyperref option]{The nohyperref option.}\label{fig:nohyperref})
#+END_listing

If [[latex:package][hyperref]] is not loaded, then the [[latex:package][url]] package is loaded for the [[path-command][path]]
command (Listing \ref{fig:load-hyperref}).  The [[latex:package][hyperref]] package asks
to be loaded last; it is loaded here =AtBeginDocument=, which follows
on the other packages loaded =AtEndOfClass=.  The [[latex:package][url]] package is
loaded with options to let it accept spaces in its argument, break its
argument at those spaces, and also to break it at hyphens.  This
latter option is potentially ambiguous, but seems to be the only
option when typesetting those long [[latex:proglang][Emacs Lisp]] variable names used in
[[latex:proglang][Org-mode]].

#+BEGIN_listing
#+source: load-hyperref
#+begin_src latex :exports code
  \ifthenelse{\boolean{ORGART@nohyperref}}
  {\AtEndOfClass{\RequirePackage[spaces,obeyspaces,hyphens]{url}
      \DeclareUrlCommand\lispvar{\urlstyle{tt}}}}
  {\AtBeginDocument{%
      \RequirePackage[spaces,obeyspaces,hyphens]{url}
      \RequirePackage{hyperref}
      \DeclareUrlCommand\lispvar{\urlstyle{tt}}
      \def\theHfigure{\thesection.\arabic{figure}}
    }}
#+end_src
#+LATEX: \caption[Load the hyperref and url packages]{Load the hyperref and url packages.}\label{fig:load-hyperref}
#+END_listing

Options do not include =debug=.

#+source: pass-to-hyperref
#+begin_src latex :exports none
\DeclareOption{anchorcolor}{%
   \PassOptionsToPackage{anchorcolor}{hyperref}}
\DeclareOption{backref}{%
   \PassOptionsToPackage{backref}{hyperref}}
\DeclareOption{baseurl}{%
   \PassOptionsToPackage{baseurl}{hyperref}}
\DeclareOption{bookmarks}{%
   \PassOptionsToPackage{bookmarks}{hyperref}}
\DeclareOption{bookmarksnumbered}{%
   \PassOptionsToPackage{bookmarksnumbered}{hyperref}}
\DeclareOption{bookmarksopen}{%
   \PassOptionsToPackage{bookmarksopen}{hyperref}}
\DeclareOption{bookmarksopenlevel}{%
   \PassOptionsToPackage{bookmarksopenlevel}{hyperref}}
\DeclareOption{bookmarkstype}{%
   \PassOptionsToPackage{bookmarkstype}{hyperref}}
\DeclareOption{breaklinks}{%
   \PassOptionsToPackage{breaklinks}{hyperref}}
\DeclareOption{CJKbookmarks}{%
   \PassOptionsToPackage{CJKbookmarks}{hyperref}}
\DeclareOption{citebordercolor}{%
   \PassOptionsToPackage{citebordercolor}{hyperref}}
\DeclareOption{citecolor}{%
   \PassOptionsToPackage{citecolor}{hyperref}}
\DeclareOption{colorlinks}{%
   \PassOptionsToPackage{colorlinks}{hyperref}}
\DeclareOption{draft}{%
   \PassOptionsToPackage{draft}{hyperref}}
\DeclareOption{dvipdfm}{%
   \PassOptionsToPackage{dvipdfm}{hyperref}}
\DeclareOption{dvipdfmx}{%
   \PassOptionsToPackage{dvipdfmx}{hyperref}}
\DeclareOption{dvips}{%
   \PassOptionsToPackage{dvips}{hyperref}}
\DeclareOption{dvipsone}{%
   \PassOptionsToPackage{dvipsone}{hyperref}}
\DeclareOption{dviwindo}{%
   \PassOptionsToPackage{dviwindo}{hyperref}}
\DeclareOption{encap}{%
   \PassOptionsToPackage{encap}{hyperref}}
\DeclareOption{extension}{%
   \PassOptionsToPackage{extension}{hyperref}}
\DeclareOption{filebordercolor}{%
   \PassOptionsToPackage{filebordercolor}{hyperref}}
\DeclareOption{filecolor}{%
   \PassOptionsToPackage{filecolor}{hyperref}}
\DeclareOption{final}{%
   \PassOptionsToPackage{final}{hyperref}}
\DeclareOption{frenchlinks}{%
   \PassOptionsToPackage{frenchlinks}{hyperref}}
\DeclareOption{hyperfigures}{%
   \PassOptionsToPackage{hyperfigures}{hyperref}}
\DeclareOption{hyperfootnotes}{%
   \PassOptionsToPackage{hyperfootnotes}{hyperref}}
\DeclareOption{hyperindex}{%
   \PassOptionsToPackage{hyperindex}{hyperref}}
\DeclareOption{hypertex}{%
   \PassOptionsToPackage{hypertex}{hyperref}}
\DeclareOption{hypertexnames}{%
   \PassOptionsToPackage{hypertexnames}{hyperref}}
\DeclareOption{implicit}{%
   \PassOptionsToPackage{implicit}{hyperref}}
\DeclareOption{latex2html}{%
   \PassOptionsToPackage{latex2html}{hyperref}}
\DeclareOption{legalpaper}{%
   \PassOptionsToPackage{legalpaper}{hyperref}}
\DeclareOption{linkbordercolor}{%
   \PassOptionsToPackage{linkbordercolor}{hyperref}}
\DeclareOption{linkcolor}{%
   \PassOptionsToPackage{linkcolor}{hyperref}}
\DeclareOption{linktocpage}{%
   \PassOptionsToPackage{linktocpage}{hyperref}}
\DeclareOption{menubordercolor}{%
   \PassOptionsToPackage{menubordercolor}{hyperref}}
\DeclareOption{menucolor}{%
   \PassOptionsToPackage{menucolor}{hyperref}}
\DeclareOption{nativepdf}{%
   \PassOptionsToPackage{nativepdf}{hyperref}}
\DeclareOption{naturalnames}{%
   \PassOptionsToPackage{naturalnames}{hyperref}}
\DeclareOption{nesting}{%
   \PassOptionsToPackage{nesting}{hyperref}}
\DeclareOption{pageanchor}{%
   \PassOptionsToPackage{pageanchor}{hyperref}}
\DeclareOption{pagebackref}{%
   \PassOptionsToPackage{pagebackref}{hyperref}}
\DeclareOption{pdfauthor}{%
   \PassOptionsToPackage{pdfauthor}{hyperref}}
\DeclareOption{pdfborder}{%
   \PassOptionsToPackage{pdfborder}{hyperref}}
\DeclareOption{pdfcenterwindow}{%
   \PassOptionsToPackage{pdfcenterwindow}{hyperref}}
\DeclareOption{pdfcreator}{%
   \PassOptionsToPackage{pdfcreator}{hyperref}}
\DeclareOption{pdfdirection}{%
   \PassOptionsToPackage{pdfdirection}{hyperref}}
\DeclareOption{pdfdisplaydoctitle}{%
   \PassOptionsToPackage{pdfdisplaydoctitle}{hyperref}}
\DeclareOption{pdfduplex}{%
   \PassOptionsToPackage{pdfduplex}{hyperref}}
\DeclareOption{pdffitwindow}{%
   \PassOptionsToPackage{pdffitwindow}{hyperref}}
\DeclareOption{pdfhighlight}{%
   \PassOptionsToPackage{pdfhighlight}{hyperref}}
\DeclareOption{pdfinfo}{%
   \PassOptionsToPackage{pdfinfo}{hyperref}}
\DeclareOption{pdfkeywords}{%
   \PassOptionsToPackage{pdfkeywords}{hyperref}}
\DeclareOption{pdflang}{%
   \PassOptionsToPackage{pdflang}{hyperref}}
\DeclareOption{pdfmark}{%
   \PassOptionsToPackage{pdfmark}{hyperref}}
\DeclareOption{pdfmenubar}{%
   \PassOptionsToPackage{pdfmenubar}{hyperref}}
\DeclareOption{pdfnewwindow}{%
   \PassOptionsToPackage{pdfnewwindow}{hyperref}}
\DeclareOption{pdfnonfullscreenpagemode}{%
   \PassOptionsToPackage{pdfnonfullscreenpagemode}{hyperref}}
\DeclareOption{pdfnumcopies}{%
   \PassOptionsToPackage{pdfnumcopies}{hyperref}}
\DeclareOption{pdfpagelayout}{%
   \PassOptionsToPackage{pdfpagelayout}{hyperref}}
\DeclareOption{pdfpagemode}{%
   \PassOptionsToPackage{pdfpagemode}{hyperref}}
\DeclareOption{pdfpagelabels}{%
   \PassOptionsToPackage{pdfpagelabels}{hyperref}}
\DeclareOption{pdfpagescrop}{%
   \PassOptionsToPackage{pdfpagescrop}{hyperref}}
\DeclareOption{pdfpagetransition}{%
   \PassOptionsToPackage{pdfpagetransition}{hyperref}}
\DeclareOption{pdfpicktraybypdfsize}{%
   \PassOptionsToPackage{pdfpicktraybypdfsize}{hyperref}}
\DeclareOption{pdfprintarea}{%
   \PassOptionsToPackage{pdfprintarea}{hyperref}}
\DeclareOption{pdfprintclip}{%
   \PassOptionsToPackage{pdfprintclip}{hyperref}}
\DeclareOption{pdfprintpagerange}{%
   \PassOptionsToPackage{pdfprintpagerange}{hyperref}}
\DeclareOption{pdfprintscaling}{%
   \PassOptionsToPackage{pdfprintscaling}{hyperref}}
\DeclareOption{pdfproducer}{%
   \PassOptionsToPackage{pdfproducer}{hyperref}}
\DeclareOption{pdfstartpage}{%
   \PassOptionsToPackage{pdfstartview}{hyperref}}
\DeclareOption{pdfsubject}{%
   \PassOptionsToPackage{pdfsubject}{hyperref}}
\DeclareOption{pdftex}{%
   \PassOptionsToPackage{pdftex}{hyperref}}
\DeclareOption{pdftitle}{%
   \PassOptionsToPackage{pdftitle}{hyperref}}
\DeclareOption{pdftoolbar}{%
   \PassOptionsToPackage{pdftoolbar}{hyperref}}
\DeclareOption{pdftrapped}{%
   \PassOptionsToPackage{pdftrapped}{hyperref}}
\DeclareOption{pdfview}{%
   \PassOptionsToPackage{pdfview}{hyperref}}
\DeclareOption{pdfviewarea}{%
   \PassOptionsToPackage{pdfviewarea}{hyperref}}
\DeclareOption{pdfviewclip}{%
   \PassOptionsToPackage{pdfviewclip}{hyperref}}
\DeclareOption{pdfwindowui}{%
   \PassOptionsToPackage{pdfwindowui}{hyperref}}
\DeclareOption{plainpages}{%
   \PassOptionsToPackage{plainpages}{hyperref}}
\DeclareOption{ps2pdf}{%
   \PassOptionsToPackage{ps2pdf}{hyperref}}
\DeclareOption{raiselinks}{%
   \PassOptionsToPackage{raiselinks}{hyperref}}
\DeclareOption{runbordercolor}{%
   \PassOptionsToPackage{runbordercolor}{hyperref}}
\DeclareOption{runcolor}{%
   \PassOptionsToPackage{runcolor}{hyperref}}
\DeclareOption{setpagesize}{%
   \PassOptionsToPackage{setpagesize}{hyperref}}
\DeclareOption{tex4ht}{%
   \PassOptionsToPackage{tex4ht}{hyperref}}
\DeclareOption{textures}{%
   \PassOptionsToPackage{textures}{hyperref}}
\DeclareOption{unicode}{%
   \PassOptionsToPackage{unicode}{hyperref}}
\DeclareOption{urlbordercolor}{%
   \PassOptionsToPackage{urlbordercolor}{hyperref}}
\DeclareOption{urlcolor}{%
   \PassOptionsToPackage{urlcolor}{hyperref}}
\DeclareOption{verbose}{%
   \PassOptionsToPackage{verbose}{hyperref}}
\DeclareOption{vtex}{%
   \PassOptionsToPackage{vtex}{hyperref}}
\DeclareOption{xetex}{%
   \PassOptionsToPackage{xetex}{hyperref}}
#+end_src

** Font packages
LaTeX documents might need three text fonts, one for the serif
typeface used for text, the sans-serif typeface often used for heads
and sub-heads, and the monospace typewriter typeface typically used to
set code examples and the like.  


[[latex:classfile][Org-article]] offers a =fontset= key that can be used to specify sets of
all three fonts (Listing \ref{fig:fontset}).  The fonts in each set have been chosen to look good
with one another.  Each set takes its name after the serif font in the
set.

#+BEGIN_listing
#+source: pgf-option-fontset
#+begin_src latex :exports code
  \pgfkeys{ 
    /ORGART/.cd, 
    fontset/.is choice,
  } 
#+end_src
#+LATEX: \caption[The fontset key]{The fontset key.}\label{fig:fontset}
#+END_listing

The fonts that come with LaTeX distributions differ in their ability
to set complex mathematical expressions.  [[latex:classfile][Org-article]] font sets with
math support include [[garamond-font][Garamond]], [[kp-font][KP]], [[palatino-font][Palatino]], [[times-font][Times]], and [[utopia-font][Utopia]].  The
[[libertine-font][Libertine]] and [[nimbus-font][Nimbus]] font sets are replacements for Times, but with
extended character sets for typesetting a variety of languages.

*** Bera
# <<bera-font>>

Bera is the LaTeX version of the Bitstream's Vera family of fonts.
The family includes serif, sans-serif, and monospace fonts designed to
work well with one another.  The Bera fontset is selected by passing
the value [[latex:progstruct][bera]] to the [[latex:progstruct][fontset]] key (Listing \ref{fig:bera}).

#+BEGIN_listing
#+source: pgf-option-bera
#+begin_src latex :exports code
  \pgfkeys{
    /ORGART/.cd,
    fontset/bera/.code={
      \AtBeginDocument{\ifpdf
        \RequirePackage[T1]{fontenc} 
        \RequirePackage[scaled]{beraserif}
        \RequirePackage[scaled]{berasans} 
        \RequirePackage[scaled]{beramono} % tt
        \fi}}}
#+end_src
#+LATEX: \caption[Define the bera value of the fontset key]{Define the bera value of the fontset key.}\label{fig:bera}
#+END_listing

*** Charter
# <<charter-font>>

[[http://en.wikipedia.org/wiki/Bitstream_Charter][Charter]] was designed to reproduce well on low-resolution 300 dpi
printers.  It is paired here with Helvetica and Courier, like [[times-font][Times]],
for which it is an alternative.  Helvetica is set a bit smaller to
match the shape of the Charter font.  These fonts conflict with the
[[latex:package][amssymb]] package.  The font set can be selected by passing the value
[[latex:progstruct][charter]] to the [[latex:progstruct][fontset]] key (Listing \ref{fig:charter}).

#+BEGIN_listing 
#+source: pgf-option-charter
#+begin_src latex :exports code
  \pgfkeys{
    /ORGART/.cd,
    fontset/charter/.code={
      \setboolean{ORGART@noamssymb}{true}
      \AtBeginDocument{\ifpdf
        \RequirePackage[T1]{fontenc} 
        \RequirePackage[bitstream-charter]{mathdesign}
        \RequirePackage[scaled=.90]{helvet} 
        \RequirePackage{courier} % tt
        \fi}}}
#+end_src
#+LATEX: \caption[Define the charter value of the fontset key]{Define the charter value of the fontset key.}\label{fig:charter}
#+END_listing

*** Garamond
# <<garamond-font>>

[[http://en.wikipedia.org/wiki/Garamond][Garamond]] refers to a group of old-style serif typefaces and is named
after the sixteenth-century type designer, Claude Garamond.  It is an
elegant typeface.  Garamond requires a bit more leading than normal.
The sans-serif font is Latin Modern and the typewriter font is
Courier.  Both were chosen to match the shape and stroke weight of
Garamond.  The font can be selected by passing the value [[latex:progstruct][garamond]] to
the [[latex:progstruct][fontset]] key (Listing \ref{fig:garamond}).

#+BEGIN_listing
#+source: pgf-option-garamond
#+begin_src latex :exports code
  \pgfkeys{
    /ORGART/.cd,
    fontset/garamond/.code={
      \setboolean{ORGART@noamssymb}{true}
      \AtBeginDocument{\ifpdf
        \RequirePackage[T1]{fontenc} 
        \RequirePackage[urw-garamond]{mathdesign}
        \RequirePackage{lmodern} 
        \RequirePackage{courier} % tt
        \linespread{1.0609}
        \fi}}}
#+end_src
#+LATEX: \caption[Define the garamond value of the fontset key]{Define the garamond value of the fontset key.}\label{fig:garamond}
#+END_listing

*** KP family
# <<kp-font>>

The [[http://tug.ctan.org/pkg/kpfonts][KP font family]] is produced by Christophe Caignaert for the Johannes Kepler project.  The
family supports math.   The font set can be selected by passing the value
[[latex:progstruct][kp]] to the [[latex:progstruct][fontset]] key (Listing \ref{fig:kp}).

#+BEGIN_listing
#+source: pgf-option-kp
#+begin_src latex :exports code
  \pgfkeys{
    /ORGART/.cd,
    fontset/kp/.code={
      \setboolean{ORGART@noamssymb}{true}
      \setboolean{ORGART@notextcomp}{true}
      \AtBeginDocument{\ifpdf
        \RequirePackage[T1]{fontenc} 
        \RequirePackage{kpfonts}
        \fi}}}
#+end_src
#+LATEX: \caption[Define the kp value of the fontset option]{Define the kp value of the fontset option.}\label{fig:kp}
#+END_listing
*** Libertine
# <<libertine-font>>

The [[http://www.linuxlibertine.org/][Linux Libertine Project]] produces OpenSource fonts.  Libertine is a
replacement for Times New Roman and includes a companion sans-serif
font.  It was used to typeset the Wikipedia logo.  The monospace
typewriter font is Latin Modern.   The font set can be selected by passing the value
[[latex:progstruct][libertine]] to the [[latex:progstruct][fontset]] key (Listing \ref{fig:libertine}).

#+BEGIN_listing
#+source: pgf-option-libertine
#+begin_src latex :exports code
    \pgfkeys{
      /ORGART/.cd,
      fontset/libertine/.code={
        \AtBeginDocument{\ifpdf
          \RequirePackage[T1]{fontenc} 
          \RequirePackage{libertine}
          \renewcommand*\oldstylenums[1]{{\fontfamily{fxlj}\selectfont #1}}
          \RequirePackage{lmodern} % tt
          \fi}}}
#+end_src
#+LATEX: \caption[Define the libertine value of the fontset key]{Define the libertine value of the fontset key.}\label{fig:libertine}
#+END_listing
*** Nimbus                                                     
# <<nimbus-font>>

The Nimbus font set uses fonts from the [[http://www.gust.org.pl/projects/e-foundry/tex-gyre/][Tex-Gyre]] distribution, which
provides a rich collection of diacritical characters in the attempt to
cover as many Latin-based scripts as possible.  The serif font is
Termes, which is a replacement for Times Roman.  The sans-serif font
is Heros, which is a replacement for Helvetica.  The monospace font is
Cursor, which is a Courier replacement.   The font set can be selected by passing the value
[[latex:progstruct][nimbus]] to the [[latex:progstruct][fontset]] key (Listing \ref{fig:nimbus}).
 
#+BEGIN_listing
#+source: pgf-option-nimbus
#+begin_src latex :exports code
    \pgfkeys{
      /ORGART/.cd,
      fontset/nimbus/.code={
        \AtBeginDocument{\ifpdf
          \RequirePackage[T1]{fontenc}
          \RequirePackage{tgtermes}
          \RequirePackage[scale=.85]{tgheros}
          \RequirePackage{tgcursor} % tt
          \fi}}}
#+end_src
#+LATEX: \caption[Define the nimbus value of the fontset key]{Define the nimbus value of the fontset key.}\label{fig:nimbus}
#+END_listing

*** Palatino
# <<palatino-font>>

The beautiful, old-style serif font, [[http://en.wikipedia.org/wiki/Palatino][Palatino]], was designed by [[http://en.wikipedia.org/wiki/Herman_Zapf][Herman
Zapf]].  It is somewhat heavier and easier to read than [[garamond-font][Garamond]].
Palatino gets a bit more leading than normal.  It is paired here with
Helvetica and Courier, as is [[times-font][Times]], for which it is an alternative.
The font set can be selected by passing the value [[latex:progstruct][palatino]] to the
[[latex:progstruct][fontset]] key (Listing \ref{fig:palatino}).

#+BEGIN_listing
#+source: pgf-option-palatino
#+begin_src latex :exports code
  \pgfkeys{
    /ORGART/.cd,
    fontset/palatino/.code={\AtBeginDocument{\ifpdf
        \RequirePackage[T1]{fontenc}
        \RequirePackage{mathpazo}% 
        \linespread{1.05}%
        \RequirePackage[scaled]{helvet}%
        \RequirePackage{courier} % tt
        \fi}}}
#+end_src
#+LATEX: \caption[Define the palatino value of the fontset key]{Define the palatino value of the fontset key.}\label{fig:palatino}
#+END_listing

*** Times
# <<times-font>>

The =times= option uses URW Nimbus Roman, a Times clone, for the serif
font, URW Nimbus Sans, a Helvetica clone, for the sans-serif font,
and URW Nimbus Mono, a Courier clone, for the typewriter font.  This
is a standard set of common typefaces typically used in scientific
publications.  All of the fonts should be included in a typical LaTeX
distribution. 

[[http://en.wikipedia.org/wiki/Times_Roman][Times New Roman]] was designed by [[http://en.wikipedia.org/wiki/Stanley_Morison][Stanley Morison]] for /The Times/ of
London during a redesign of the newspaper prompted, in part, by
Morison's criticism of its typography in 1929.  [[http://en.wikipedia.org/wiki/Helvetica][Helvetica]] was
developed in 1957 by [[http://en.wikipedia.org/wiki/Max_Miedinger][Max Miedinger]].  Helvetica looks better with Times
if it is set slightly smaller than the serif font.  [[http://en.wikipedia.org/wiki/Courier_(typeface)][Courier]] was
designed by Howard Kettler in 1955 for use in IBM typewriters.

The font set can be selected by passing the value [[latex:progstruct][times]] to the
[[latex:progstruct][fontset]] key (Listing \ref{fig:times}).

#+BEGIN_listing
#+source: pgf-option-times
#+begin_src latex :exports code
  \pgfkeys{
    /ORGART/.cd,
    fontset/times/.code={
      \setboolean{ORGART@noamssymb}{true}
      \AtBeginDocument{\ifpdf
        \RequirePackage[T1]{fontenc}
        \RequirePackage{mathptmx} 
        \RequirePackage[scaled=.90]{helvet} 
        \RequirePackage{courier}
        \fi}}}
#+end_src
#+LATEX: \caption[Define the times value of the fontset key]{Define the times value of the fontset key.}\label{fig:times}
#+END_listing
*** Utopia
# <<utopia-font>>

[[http://en.wikipedia.org/wiki/Utopia_(typeface)][Utopia]] is a transitional serif font designed by [[http://en.wikipedia.org/wiki/Robert_Slimbach][Robert Slimbach]] for
Adobe in 1989.  It became free software in 2006.  It is paired here
with the Bera sans serif and monospaced fonts.  Note that the Utopia
font clashes with the [[latex:package][amssymb]] package.

The font set can be selected by passing the value [[latex:progstruct][utopia]] to the
[[latex:progstruct][fontset]] key (Listing \ref{fig:utopia}).

#+BEGIN_listing
#+source: pgf-option-utopia
#+begin_src latex :exports code
  \pgfkeys{
    /ORGART/.cd,
    fontset/utopia/.code={
      \setboolean{ORGART@noamssymb}{true}
      \AtEndOfClass{\ifpdf
        \RequirePackage[T1]{fontenc} 
        \RequirePackage[adobe-utopia]{mathdesign}
        \RequirePackage[scaled]{berasans} 
        \RequirePackage[scaled]{beramono} % tt
        \fi}}}
#+end_src
#+LATEX: \caption[Define the utopia value of the fontset key]{Define the utopia value of the fontset key.}\label{fig:utopia}
#+END_listing
** Source block markup
Two options are available for syntax highlighting and typesetting of
source code blocks.  The [[latex:package][listings]] package is a pure LaTeX solution,
while the [[latex:package][minted]] package relies on [[latex:proglang][Python]] code and libraries.
[[latex:classfile][Org-article]] is designed so changing from one package to the other does
not involve changes to the input file; a single LaTeX export of an
[[latex:proglang][Org-mode]] file can be processed with either the [[latex:package][minted]] or [[latex:package][listings]]
package using [[latex:classfile][Org-article]]. 

#+BEGIN_listing
#+source: pgf-option-source
#+begin_src latex :noweb tangle :exports code
  \pgfkeys{ 
    /ORGART/.cd, 
    source/.is choice,
  } 
  <<pgf-option-source-listings>>  
  <<pgf-option-source-minted>>
#+end_src
#+LATEX: \caption[Set up option for source code highlighting and typesetting]{Set up option for source code highlighting and typesetting.}\label{fig:option-source}
#+END_listing

*** Listings
The [[latex:package][listings]] package is a source code printer for LaTeX.  According to
posts in =comp.text.tex= in mid-2010, the [[latex:package][listings]] package is no
longer maintained.  

Caveat emptor: the line-breaking mechanism in the listings package
appears to break when [[latex:progexample][resetmargins = false]].  This means that the
listing will always be set to =\textwidth=, rather than =\linewidth=.
Thus, care should be taken to ensure that listings do not occur in
lists or other indented environments.  Probably the best way to ensure
that this doesn't happen is to make sure the =H:= option in the export
header is set to a suitably high level, so source code blocks always
occur at an [[latex:proglang][Org-mode]] headline level that exports as a heading, rather
than a list, e.g. if source code appears in a three-asterisk headline
and no lower, then setting =H: 3= should ensure that listing margins
are always aligned with text margins.

You can choose to use the listings package by adding the following
line to the [[latex:proglang][Org-mode]] file: =#+LaTeX_CLASS_OPTIONS: [source=listings]=.
With this setting, default values are used to markup and typeset
source code blocks.

The [[latex:progstruct][listings]] option requires quite a bit of configuration to ensure
compatibility with the [[latex:package][minted]] package (Listing
\ref{fig:listings-option}).
  - make-lstinline-macro :: Defines a macro to create
       language-specific shortcuts for highlighting and typesetting
       inline source code snippets (Listing \ref{fig:lstinline-macro})
  - listings-code :: Defines basic markup for a few languages, and an
                     environment for floating listings based on code
                     in the [[latex:package][minted]] package (Listing \ref{fig:listings-code})
  - make-lstnewenvironment-code :: A [[latex:proglang][Python]] script configures
       block-level environments for the languages recognized by [[latex:proglang][Org-mode]]
  - make-lstinline-code :: A [[latex:proglang][Python]] script configures inline source
       code markup with macros for each of the languages recognized by
       [[latex:proglang][Org-mode]]


#+BEGIN_listing
#+source: pgf-option-source-listings
#+begin_src latex :noweb tangle :exports code
  <<make-lstinline-macro>>
  \pgfkeys{ 
    /ORGART/.cd, 
    source/listings/.code={
        \AtEndOfClass{
        \RequirePackage{listings}
        <<listings-code>>
        <<make-lstnewenvironment-code>>
        <<make-lstinline-code>>
      }
    }
  }  
#+end_src
#+LATEX: \caption[The listings value of the source key]{The listings value of the source key.}\label{fig:listings-option}
#+END_listing

**** Listings setup
# <<listings setup>>

These settings configure Org-mode to export source blocks that
[[latex:classfile][Org-article]] will recognize and handle (Listing
\ref{fig:org-listings}).  Setting [[latex:lispvar][org-export-latex-listings]] to
=listings= ensures that source code blocks in langauges that aren't
listed in [[latex:lispvar][org-export-latex-custom-lang-environments]] are also typeset
by the [[latex:progstruct][listings]] package.

#+BEGIN_listing
#+source: listings-setup
#+begin_src emacs-lisp :exports code :results silent
    (setq org-export-latex-listings 'listings)
    (setq org-export-latex-custom-lang-environments
          '((python "pythoncode")
            (emacs-lisp "common-lispcode")
            (org "textcode")
            (latex "latexcode")
            (sh "shcode")))
#+end_src
#+LATEX: \caption[Configure the Org-mode LaTeX exporter for the listings package]{Configure the Org-mode LaTeX exporter for the listings package.}\label{fig:org-listings}
#+END_listing
**** Listings themes                                               :noexport:
Themes are defined for the listings package.  Themes treat source
blocks in all languages identically.  They are provided for
convenience.

#+BEGIN_listing
#+source: pgf-option-listingstheme
#+begin_src latex :noweb tangle :exports code
  \newboolean{ORGART@color}
  \pgfkeys{ 
    /ORGART/.cd, 
    listingstheme/.is choice
  } 
  <<pgf-option-listingstheme-bw>>
  <<pgf-option-listingstheme-color>>
  <<pgf-option-listingstheme-sv>>
  <<pgf-option-listingstheme-es>>
#+end_src
#+LATEX: \caption[Set up options for listings package themes]{Set up options for listings package themes.}\label{fig:option-listingstheme}
#+END_listing

The =bw= theme offers footnote size text in a frame, set in black and
white with shades of gray.

#+source: org-buffer-listings-bw
#+begin_src org :exports code
  #+LaTeX_CLASS_OPTIONS: [listingstheme=bw]
#+end_src

#+source: pgf-option-listingstheme-bw
#+begin_src latex :exports code
  \pgfkeys{
    /ORGART/.cd,
    listingstheme/bw/.code={
      \AtBeginDocument{%
        \lstset{basicstyle=\ttfamily\footnotesize,
          frame=lines,
          breaklines=true,
          showstringspaces=false}}}
  }
#+end_src

The =listings-color= theme was lifted from a post to the [[latex:proglang][Org-mode]] list
by Eric Schulte.

#+source: org-buffer-listings-color
#+begin_src org :exports code
  #+LaTeX_CLASS_OPTIONS: [listingstheme=color]
#+end_src

#+source: pgf-option-listingstheme-color
#+begin_src latex :exports code
  \pgfkeys{
    /ORGART/.cd,
    listingstheme/color/.code={
      \setboolean{ORGART@color}{true}%
      \AtBeginDocument{%
        \definecolor{keywords}{RGB}{255,0,90}%
        \definecolor{comments}{RGB}{60,179,113}%
        \definecolor{back}{RGB}{231,231,231}%
        \lstset{%
          keywordstyle=\color{keywords},
          commentstyle=\color{comments},
          backgroundcolor=\color{back},
          basicstyle=\ttfamily\footnotesize,
          showstringspaces=false,
          frame=lines,
          breaklines=true,
          resetmargins=true}}}
  }
#+end_src

The =listings-sv= theme was posted to the list by Sebastian Vauban;
it has been modified here to work with the [[latex:package][color]] package, rather than
the [[latex:package][xcolor]] package used by Sebastien, and to allow breaking of long
lines.

#+source: org-buffer-listings-sv
#+begin_src org :exports code
  #+LaTeX_CLASS_OPTIONS: [listingstheme=sv]
#+end_src

#+source: pgf-option-listingstheme-sv
#+begin_src latex :exports code
  \pgfkeys{
    /ORGART/.cd,
    listingstheme/sv/.code={
      \setboolean{ORGART@color}{true}%
      \AtBeginDocument{%
        \definecolor{...@lstbackground}{RGB}{255,255,204} % light yellow
        \definecolor{...@lstkeyword}{RGB}{0,0,255} % blue
        \definecolor{...@lstidentifier}{RGB}{0,0,0} % black
        \definecolor{...@lstcomment}{RGB}{255,0,0} % red
        \definecolor{...@lststring}{RGB}{0,128,0} % dark green
        \lstset{%
          basicstyle=\ttfamily\scriptsize, % the font that is used for the code
          tabsize=4, % sets default tabsize to 4 spaces
          numbers=left, % where to put the line numbers
          numberstyle=\tiny, % line number font size
          stepnumber=0, % step between two line numbers
          breaklines=true, %!! do break long lines of code
          showtabs=false, % show tabs within strings adding particular underscores
          showspaces=false, % show spaces adding particular underscores
          showstringspaces=false, % underline spaces within strings
          keywordstyle=\color{...@lstkeyword},
          identifierstyle=\color{...@lstidentifier},
          stringstyle=\color{...@lststring},
          commentstyle=\color{...@lstcomment},
          backgroundcolor=\color{...@lstbackground}, % sets the background color
          resetmargins=true,%
          captionpos=b, % sets the caption position to `bottom'
          extendedchars=false %!?? workaround for when the listed file is in UTF-8
        }%
      }%
    }
  }
#+end_src

This theme was designed by Eric Schulte.

#+source: org-buffer-listings-es
#+begin_src org :exports code
  #+LaTeX_CLASS_OPTIONS: [listingstheme=es]
#+end_src

#+source: pgf-option-listingstheme-es
#+begin_src latex :exports code
  \pgfkeys{
    /ORGART/.cd,
    listingstheme/es/.code={
      \setboolean{ORGART@color}{true}%
      \AtBeginDocument{%
        \definecolor{dkgreen}{rgb}{0,0.5,0}%
        \definecolor{dkred}{rgb}{0.5,0,0}%
        \definecolor{gray}{rgb}{0.5,0.5,0.5}%
        \lstset{%
          basicstyle=\ttfamily\bfseries\scriptsize,
          keywordstyle=\color{blue},
          ndkeywordstyle=\color{red},
          commentstyle=\color{dkred},
          stringstyle=\color{dkgreen},
          numbers=left,
          breaklines=true,
          numberstyle=\ttfamily\footnotesize\color{gray},
          stepnumber=1,
          numbersep=10pt,
          backgroundcolor=\color{white},
          tabsize=4,
          showspaces=false,
          showstringspaces=false,
          xleftmargin=.23in
        }%
      }%
    }
  }
#+end_src

**** Listings lookup tables
These tables have a column for each of the [[latex:package][listings]] variables likely
relevant for [[latex:proglang][Org-mode]] users.  The first two columns in each table list
the [[latex:proglang][Org-mode]] name for the language and the name that the [[latex:package][listings]]
package environment will have for that language.  Note that these
names should appear on the list held by
[[latex:lispvar][org-export-latex-custom-lang-environments]].  Note, too, that the names
in the Lstlisting lookup table all end in "code"; this is the default
used by the [[latex:package][minted]] package and it is used here to promote
interoperability.

Default values are in the second row of the table.  These are used by
the [[latex:proglang][Python]] script to determine whether or not the variable should be
passed to the new LaTeX environment.  Note that the default value for
language has been set to =nil=.  This forces specification of a
language in the environment definition.

***** Lstlisting lookup table                                      :noexport:
#+tblname: listings-lookup
| Org        | Listings        | aboveskip      | belowskip      | firstline | lastline | showlines | emptylines | gobble | style | language          | alsolanguage | defaultdialect | basicstyle               | identifierstyle | commentstyle | stringstyle | keywordstyle | classoffset | extendedchars | inputencoding | upquote | tabsize | showtabs | showspaces | showstringspaces | formfeed  | numbers | stepnumber | numberfirstline | numberstyle | numbersep | numberblanklines | firstnumber | thelstnumber       | linewidth  | xleftmargin | xrightmargin | resetmargins | breaklines | breakatwhitespace | prebreak | postbreak | breakindent | breakautoindent | frame  | frameround | framesep | rulesep | framerule | framexleftmargin | framexrightmargin | framextopmargin | framexbottommargin | backgroundcolor | rulecolor      | fillcolor | rulesepcolor | index | indexstyle     | columns  | flexiblecolumns | basewidth      | fontadjust | texcl | mathescape | escapechar | escapeinside | escapebegin | escapeend |
| *default*  | *default*       | \medskipamount | \medskipamount |         1 |  9999999 | false     |          0 |      0 | {}    | nil               | {}           | {}             | {}                       | {}              | \itshape     | {}          | \bfseries    |           0 | true          | {}            | false   |       8 | false    | false      | false            | \bigbreak | none    |          1 | false           | {}          | 10pt      | true             | auto        | \arabic{lstnumber} | \linewidth | 0pt         | 0pt          | false        | false      | false             | {}       | {}        | 20pt        | true            | none   | ffff       | 3pt      | 2pt     | 0.4pt     | 0pt              | 0pt               | 0pt             | 0pt                | nil             | nil            | nil       | nil          | nil   | \lstindexmacro | [c]fixed | false           | {0.6em,0.45em} | false      | false | false      | {}         | {}           | {}          | {}        |
| asymptote  | asymptotecode   | \medskipamount | \medskipamount |         1 |  9999999 | false     |          0 |      0 | {}    | {}                | {}           | {}             | {}                       | {}              | \itshape     | {}          | \bfseries    |           0 | true          | {}            | false   |       8 | false    | false      | false            | \bigbreak | none    |          1 | false           | {}          | 10pt      | true             | auto        | \arabic{lstnumber} | \linewidth | 0pt         | 0pt          | false        | false      | false             | {}       | {}        | 20pt        | true            | none   | ffff       | 3pt      | 2pt     | 0.4pt     | 0pt              | 0pt               | 0pt             | 0pt                | nil             | nil            | nil       | nil          | nil   | \lstindexmacro | [c]fixed | false           | {0.6em,0.45em} | false      | false | false      | {}         | {}           | {}          | {}        |
| C          | ccode           | \medskipamount | \medskipamount |         1 |  9999999 | false     |          0 |      0 | {}    | [ANSI]{C}         | {}           | {}             | {}                       | {}              | \itshape     | {}          | \bfseries    |           0 | true          | {}            | false   |       8 | false    | false      | false            | \bigbreak | none    |          1 | false           | {}          | 10pt      | true             | auto        | \arabic{lstnumber} | \linewidth | 0pt         | 0pt          | false        | false      | false             | {}       | {}        | 20pt        | true            | none   | ffff       | 3pt      | 2pt     | 0.4pt     | 0pt              | 0pt               | 0pt             | 0pt                | nil             | nil            | nil       | nil          | nil   | \lstindexmacro | [c]fixed | false           | {0.6em,0.45em} | false      | false | false      | {}         | {}           | {}          | {}        |
| clojure    | clojurecode     | \medskipamount | \medskipamount |         1 |  9999999 | false     |          0 |      0 | {}    | {}                | {}           | {}             | {}                       | {}              | \itshape     | {}          | \bfseries    |           0 | true          | {}            | false   |       8 | false    | false      | false            | \bigbreak | none    |          1 | false           | {}          | 10pt      | true             | auto        | \arabic{lstnumber} | \linewidth | 0pt         | 0pt          | false        | false      | false             | {}       | {}        | 20pt        | true            | none   | ffff       | 3pt      | 2pt     | 0.4pt     | 0pt              | 0pt               | 0pt             | 0pt                | nil             | nil            | nil       | nil          | nil   | \lstindexmacro | [c]fixed | false           | {0.6em,0.45em} | false      | false | false      | {}         | {}           | {}          | {}        |
| css        | csscode         | \medskipamount | \medskipamount |         1 |  9999999 | false     |          0 |      0 | {}    | {}                | {}           | {}             | {\ttfamily\footnotesize} | {}              | \itshape     | {}          | \bfseries    |           0 | true          | {}            | false   |       8 | false    | false      | false            | \bigbreak | none    |          1 | false           | {}          | 10pt      | true             | auto        | \arabic{lstnumber} | \linewidth | 0pt         | 0pt          | false        | false      | false             | {}       | {}        | 20pt        | true            | none   | ffff       | 3pt      | 2pt     | 0.4pt     | 0pt              | 0pt               | 0pt             | 0pt                | nil             | \color{orange} | nil       | nil          | nil   | \lstindexmacro | [c]fixed | false           | {0.6em,0.45em} | false      | false | false      | {}         | {}           | {}          | {}        |
| ditaa      | ditaacode       | \medskipamount | \medskipamount |         1 |  9999999 | false     |          0 |      0 | {}    | {ditaa}           | {}           | {}             | {}                       | {}              | \itshape     | {}          | \bfseries    |           0 | true          | {}            | false   |       8 | false    | false      | false            | \bigbreak | none    |          1 | false           | {}          | 10pt      | true             | auto        | \arabic{lstnumber} | \linewidth | 0pt         | 0pt          | false        | false      | false             | {}       | {}        | 20pt        | true            | none   | ffff       | 3pt      | 2pt     | 0.4pt     | 0pt              | 0pt               | 0pt             | 0pt                | nil             | nil            | nil       | nil          | nil   | \lstindexmacro | [c]fixed | false           | {0.6em,0.45em} | false      | false | false      | {}         | {}           | {}          | {}        |
| dot        | dotlangcode     | \medskipamount | \medskipamount |         1 |  9999999 | false     |          0 |      0 | {}    | {dot}             | {}           | {}             | {}                       | {}              | \itshape     | {}          | \bfseries    |           0 | true          | {}            | false   |       8 | false    | false      | false            | \bigbreak | none    |          1 | false           | {}          | 10pt      | true             | auto        | \arabic{lstnumber} | \linewidth | 0pt         | 0pt          | false        | false      | false             | {}       | {}        | 20pt        | true            | none   | ffff       | 3pt      | 2pt     | 0.4pt     | 0pt              | 0pt               | 0pt             | 0pt                | nil             | nil            | nil       | nil          | nil   | \lstindexmacro | [c]fixed | false           | {0.6em,0.45em} | false      | false | false      | {}         | {}           | {}          | {}        |
| emacs-lisp | common-lispcode | \medskipamount | \medskipamount |         1 |  9999999 | false     |          0 |      0 | {}    | {Lisp}            | {}           | {}             | {\ttfamily\footnotesize} | {}              | \itshape     | {}          | \bfseries    |           0 | true          | {}            | false   |       8 | false    | false      | false            | \bigbreak | none    |          1 | false           | {}          | 10pt      | true             | auto        | \arabic{lstnumber} | \linewidth | 0pt         | 0pt          | false        | true       | false             | {}       | {}        | 20pt        | true            | single | ffff       | 3pt      | 2pt     | 0.4pt     | 0pt              | 0pt               | 0pt             | 0pt                | nil             | \color{gray}   | nil       | nil          | nil   | \lstindexmacro | [c]fixed | false           | {0.6em,0.45em} | false      | false | false      | {}         | {}           | {}          | {}        |
| gnuplot    | gnuplotcode     | \medskipamount | \medskipamount |         1 |  9999999 | false     |          0 |      0 | {}    | {Gnuplot}         | {}           | {}             | {}                       | {}              | \itshape     | {}          | \bfseries    |           0 | true          | {}            | false   |       8 | false    | false      | false            | \bigbreak | none    |          1 | false           | {}          | 10pt      | true             | auto        | \arabic{lstnumber} | \linewidth | 0pt         | 0pt          | false        | false      | false             | {}       | {}        | 20pt        | true            | none   | ffff       | 3pt      | 2pt     | 0.4pt     | 0pt              | 0pt               | 0pt             | 0pt                | nil             | nil            | nil       | nil          | nil   | \lstindexmacro | [c]fixed | false           | {0.6em,0.45em} | false      | false | false      | {}         | {}           | {}          | {}        |
| haskell    | haskellcode     | \medskipamount | \medskipamount |         1 |  9999999 | false     |          0 |      0 | {}    | {Haskell}         | {}           | {}             | {}                       | {}              | \itshape     | {}          | \bfseries    |           0 | true          | {}            | false   |       8 | false    | false      | false            | \bigbreak | none    |          1 | false           | {}          | 10pt      | true             | auto        | \arabic{lstnumber} | \linewidth | 0pt         | 0pt          | false        | false      | false             | {}       | {}        | 20pt        | true            | none   | ffff       | 3pt      | 2pt     | 0.4pt     | 0pt              | 0pt               | 0pt             | 0pt                | nil             | nil            | nil       | nil          | nil   | \lstindexmacro | [c]fixed | false           | {0.6em,0.45em} | false      | false | false      | {}         | {}           | {}          | {}        |
| js         | jscode          | \medskipamount | \medskipamount |         1 |  9999999 | false     |          0 |      0 | {}    | {Java}            | {}           | {}             | {}                       | {}              | \itshape     | {}          | \bfseries    |           0 | true          | {}            | false   |       8 | false    | false      | false            | \bigbreak | none    |          1 | false           | {}          | 10pt      | true             | auto        | \arabic{lstnumber} | \linewidth | 0pt         | 0pt          | false        | false      | false             | {}       | {}        | 20pt        | true            | none   | ffff       | 3pt      | 2pt     | 0.4pt     | 0pt              | 0pt               | 0pt             | 0pt                | nil             | nil            | nil       | nil          | nil   | \lstindexmacro | [c]fixed | false           | {0.6em,0.45em} | false      | false | false      | {}         | {}           | {}          | {}        |
| latex      | latexcode       | \medskipamount | \medskipamount |         1 |  9999999 | false     |          0 |      0 | {}    | [LaTeX]{TeX}      | {}           | {}             | {\ttfamily\footnotesize} | {}              | \itshape     | {}          | \bfseries    |           0 | true          | {}            | false   |       8 | false    | false      | false            | \bigbreak | none    |          1 | false           | {}          | 10pt      | true             | auto        | \arabic{lstnumber} | \linewidth | 0pt         | 0pt          | false        | truee      | false             | {}       | {}        | 20pt        | true            | single | ffff       | 3pt      | 2pt     | 0.4pt     | 0pt              | 0pt               | 0pt             | 0pt                | nil             | \color{green}  | nil       | nil          | nil   | \lstindexmacro | [c]fixed | false           | {0.6em,0.45em} | false      | false | false      | {}         | {}           | {}          | {}        |
| ledger     | ledgercode      | \medskipamount | \medskipamount |         1 |  9999999 | false     |          0 |      0 | {}    | {}                | {}           | {}             | {}                       | {}              | \itshape     | {}          | \bfseries    |           0 | true          | {}            | false   |       8 | false    | false      | false            | \bigbreak | none    |          1 | false           | {}          | 10pt      | true             | auto        | \arabic{lstnumber} | \linewidth | 0pt         | 0pt          | false        | false      | false             | {}       | {}        | 20pt        | true            | none   | ffff       | 3pt      | 2pt     | 0.4pt     | 0pt              | 0pt               | 0pt             | 0pt                | nil             | nil            | nil       | nil          | nil   | \lstindexmacro | [c]fixed | false           | {0.6em,0.45em} | false      | false | false      | {}         | {}           | {}          | {}        |
| lisp       | clcode          | \medskipamount | \medskipamount |         1 |  9999999 | false     |          0 |      0 | {}    | {Lisp}            | {}           | {}             | {}                       | {}              | \itshape     | {}          | \bfseries    |           0 | true          | {}            | false   |       8 | false    | false      | false            | \bigbreak | none    |          1 | false           | {}          | 10pt      | true             | auto        | \arabic{lstnumber} | \linewidth | 0pt         | 0pt          | false        | false      | false             | {}       | {}        | 20pt        | true            | none   | ffff       | 3pt      | 2pt     | 0.4pt     | 0pt              | 0pt               | 0pt             | 0pt                | nil             | nil            | nil       | nil          | nil   | \lstindexmacro | [c]fixed | false           | {0.6em,0.45em} | false      | false | false      | {}         | {}           | {}          | {}        |
| matlab     | matlabcode      | \medskipamount | \medskipamount |         1 |  9999999 | false     |          0 |      0 | {}    | {Matlab}          | {}           | {}             | {}                       | {}              | \itshape     | {}          | \bfseries    |           0 | true          | {}            | false   |       8 | false    | false      | false            | \bigbreak | none    |          1 | false           | {}          | 10pt      | true             | auto        | \arabic{lstnumber} | \linewidth | 0pt         | 0pt          | false        | false      | false             | {}       | {}        | 20pt        | true            | none   | ffff       | 3pt      | 2pt     | 0.4pt     | 0pt              | 0pt               | 0pt             | 0pt                | nil             | nil            | nil       | nil          | nil   | \lstindexmacro | [c]fixed | false           | {0.6em,0.45em} | false      | false | false      | {}         | {}           | {}          | {}        |
| mscgen     | mscgencode      | \medskipamount | \medskipamount |         1 |  9999999 | false     |          0 |      0 | {}    | {}                | {}           | {}             | {}                       | {}              | \itshape     | {}          | \bfseries    |           0 | true          | {}            | false   |       8 | false    | false      | false            | \bigbreak | none    |          1 | false           | {}          | 10pt      | true             | auto        | \arabic{lstnumber} | \linewidth | 0pt         | 0pt          | false        | false      | false             | {}       | {}        | 20pt        | true            | none   | ffff       | 3pt      | 2pt     | 0.4pt     | 0pt              | 0pt               | 0pt             | 0pt                | nil             | nil            | nil       | nil          | nil   | \lstindexmacro | [c]fixed | false           | {0.6em,0.45em} | false      | false | false      | {}         | {}           | {}          | {}        |
| ocaml      | ocamlcode       | \medskipamount | \medskipamount |         1 |  9999999 | false     |          0 |      0 | {}    | [Objective]{Caml} | {}           | {}             | {}                       | {}              | \itshape     | {}          | \bfseries    |           0 | true          | {}            | false   |       8 | false    | false      | false            | \bigbreak | none    |          1 | false           | {}          | 10pt      | true             | auto        | \arabic{lstnumber} | \linewidth | 0pt         | 0pt          | false        | false      | false             | {}       | {}        | 20pt        | true            | none   | ffff       | 3pt      | 2pt     | 0.4pt     | 0pt              | 0pt               | 0pt             | 0pt                | nil             | nil            | nil       | nil          | nil   | \lstindexmacro | [c]fixed | false           | {0.6em,0.45em} | false      | false | false      | {}         | {}           | {}          | {}        |
| octave     | octavecode      | \medskipamount | \medskipamount |         1 |  9999999 | false     |          0 |      0 | {}    | {Octave}          | {}           | {}             | {}                       | {}              | \itshape     | {}          | \bfseries    |           0 | true          | {}            | false   |       8 | false    | false      | false            | \bigbreak | none    |          1 | false           | {}          | 10pt      | true             | auto        | \arabic{lstnumber} | \linewidth | 0pt         | 0pt          | false        | false      | false             | {}       | {}        | 20pt        | true            | none   | ffff       | 3pt      | 2pt     | 0.4pt     | 0pt              | 0pt               | 0pt             | 0pt                | nil             | nil            | nil       | nil          | nil   | \lstindexmacro | [c]fixed | false           | {0.6em,0.45em} | false      | false | false      | {}         | {}           | {}          | {}        |
| org        | textcode        | \medskipamount | \medskipamount |         1 |  9999999 | false     |          0 |      0 | {}    | {org}             | {}           | {}             | {\ttfamily\footnotesize} | {}              | \itshape     | {}          | \bfseries    |           0 | true          | {}            | false   |       8 | false    | false      | false            | \bigbreak | none    |          1 | false           | {}          | 10pt      | true             | auto        | \arabic{lstnumber} | \linewidth | 0pt         | 0pt          | false        | true       | false             | {}       | {}        | 20pt        | true            | single | ffff       | 3pt      | 2pt     | 0.4pt     | 0pt              | 0pt               | 0pt             | 0pt                | nil             | \color{yellow} | nil       | nil          | nil   | \lstindexmacro | [c]fixed | false           | {0.6em,0.45em} | false      | false | false      | {}         | {}           | {}          | {}        |
| oz         | ozcode          | \medskipamount | \medskipamount |         1 |  9999999 | false     |          0 |      0 | {}    | {Oz}              | {}           | {}             | {}                       | {}              | \itshape     | {}          | \bfseries    |           0 | true          | {}            | false   |       8 | false    | false      | false            | \bigbreak | none    |          1 | false           | {}          | 10pt      | true             | auto        | \arabic{lstnumber} | \linewidth | 0pt         | 0pt          | false        | false      | false             | {}       | {}        | 20pt        | true            | none   | ffff       | 3pt      | 2pt     | 0.4pt     | 0pt              | 0pt               | 0pt             | 0pt                | nil             | nil            | nil       | nil          | nil   | \lstindexmacro | [c]fixed | false           | {0.6em,0.45em} | false      | false | false      | {}         | {}           | {}          | {}        |
| perl       | perlcode        | \medskipamount | \medskipamount |         1 |  9999999 | false     |          0 |      0 | {}    | {Perl}            | {}           | {}             | {}                       | {}              | \itshape     | {}          | \bfseries    |           0 | true          | {}            | false   |       8 | false    | false      | false            | \bigbreak | none    |          1 | false           | {}          | 10pt      | true             | auto        | \arabic{lstnumber} | \linewidth | 0pt         | 0pt          | false        | false      | false             | {}       | {}        | 20pt        | true            | none   | ffff       | 3pt      | 2pt     | 0.4pt     | 0pt              | 0pt               | 0pt             | 0pt                | nil             | nil            | nil       | nil          | nil   | \lstindexmacro | [c]fixed | false           | {0.6em,0.45em} | false      | false | false      | {}         | {}           | {}          | {}        |
| plantuml   | plantumlcode    | \medskipamount | \medskipamount |         1 |  9999999 | false     |          0 |      0 | {}    | {}                | {}           | {}             | {}                       | {}              | \itshape     | {}          | \bfseries    |           0 | true          | {}            | false   |       8 | false    | false      | false            | \bigbreak | none    |          1 | false           | {}          | 10pt      | true             | auto        | \arabic{lstnumber} | \linewidth | 0pt         | 0pt          | false        | false      | false             | {}       | {}        | 20pt        | true            | none   | ffff       | 3pt      | 2pt     | 0.4pt     | 0pt              | 0pt               | 0pt             | 0pt                | nil             | nil            | nil       | nil          | nil   | \lstindexmacro | [c]fixed | false           | {0.6em,0.45em} | false      | false | false      | {}         | {}           | {}          | {}        |
| python     | pythoncode      | \medskipamount | \medskipamount |         1 |  9999999 | false     |          0 |      0 | {}    | {Python}          | {}           | {}             | {\ttfamily\footnotesize} | {}              | \itshape     | {}          | \bfseries    |           0 | true          | {}            | false   |       8 | false    | false      | false            | \bigbreak | none    |          1 | false           | {}          | 10pt      | true             | auto        | \arabic{lstnumber} | \linewidth | 0pt         | 0pt          | false        | true       | false             | {}       | {}        | 20pt        | true            | single | ffff       | 3pt      | 2pt     | 0.4pt     | 0pt              | 0pt               | 0pt             | 0pt                | nil             | \color{blue}   | nil       | nil          | nil   | \lstindexmacro | [c]fixed | false           | {0.6em,0.45em} | false      | false | false      | {}         | {}           | {}          | {}        |
| R          | rlangcode       | \medskipamount | \medskipamount |         1 |  9999999 | false     |          0 |      0 | {}    | {R}               | {}           | {}             | {}                       | {}              | \itshape     | {}          | \bfseries    |           0 | true          | {}            | false   |       8 | false    | false      | false            | \bigbreak | none    |          1 | false           | {}          | 10pt      | true             | auto        | \arabic{lstnumber} | \linewidth | 0pt         | 0pt          | false        | false      | false             | {}       | {}        | 20pt        | true            | none   | ffff       | 3pt      | 2pt     | 0.4pt     | 0pt              | 0pt               | 0pt             | 0pt                | nil             | nil            | nil       | nil          | nil   | \lstindexmacro | [c]fixed | false           | {0.6em,0.45em} | false      | false | false      | {}         | {}           | {}          | {}        |
| ruby       | rubycode        | \medskipamount | \medskipamount |         1 |  9999999 | false     |          0 |      0 | {}    | {Ruby}            | {}           | {}             | {}                       | {}              | \itshape     | {}          | \bfseries    |           0 | true          | {}            | false   |       8 | false    | false      | false            | \bigbreak | none    |          1 | false           | {}          | 10pt      | true             | auto        | \arabic{lstnumber} | \linewidth | 0pt         | 0pt          | false        | false      | false             | {}       | {}        | 20pt        | true            | none   | ffff       | 3pt      | 2pt     | 0.4pt     | 0pt              | 0pt               | 0pt             | 0pt                | nil             | nil            | nil       | nil          | nil   | \lstindexmacro | [c]fixed | false           | {0.6em,0.45em} | false      | false | false      | {}         | {}           | {}          | {}        |
| sass       | sasscode        | \medskipamount | \medskipamount |         1 |  9999999 | false     |          0 |      0 | {}    | {}                | {}           | {}             | {}                       | {}              | \itshape     | {}          | \bfseries    |           0 | true          | {}            | false   |       8 | false    | false      | false            | \bigbreak | none    |          1 | false           | {}          | 10pt      | true             | auto        | \arabic{lstnumber} | \linewidth | 0pt         | 0pt          | false        | false      | false             | {}       | {}        | 20pt        | true            | none   | ffff       | 3pt      | 2pt     | 0.4pt     | 0pt              | 0pt               | 0pt             | 0pt                | nil             | nil            | nil       | nil          | nil   | \lstindexmacro | [c]fixed | false           | {0.6em,0.45em} | false      | false | false      | {}         | {}           | {}          | {}        |
| scheme     | schemecode      | \medskipamount | \medskipamount |         1 |  9999999 | false     |          0 |      0 | {}    | {}                | {}           | {}             | {}                       | {}              | \itshape     | {}          | \bfseries    |           0 | true          | {}            | false   |       8 | false    | false      | false            | \bigbreak | none    |          1 | false           | {}          | 10pt      | true             | auto        | \arabic{lstnumber} | \linewidth | 0pt         | 0pt          | false        | false      | false             | {}       | {}        | 20pt        | true            | none   | ffff       | 3pt      | 2pt     | 0.4pt     | 0pt              | 0pt               | 0pt             | 0pt                | nil             | nil            | nil       | nil          | nil   | \lstindexmacro | [c]fixed | false           | {0.6em,0.45em} | false      | false | false      | {}         | {}           | {}          | {}        |
| screen     | screencode      | \medskipamount | \medskipamount |         1 |  9999999 | false     |          0 |      0 | {}    | {}                | {}           | {}             | {}                       | {}              | \itshape     | {}          | \bfseries    |           0 | true          | {}            | false   |       8 | false    | false      | false            | \bigbreak | none    |          1 | false           | {}          | 10pt      | true             | auto        | \arabic{lstnumber} | \linewidth | 0pt         | 0pt          | false        | false      | false             | {}       | {}        | 20pt        | true            | none   | ffff       | 3pt      | 2pt     | 0.4pt     | 0pt              | 0pt               | 0pt             | 0pt                | nil             | nil            | nil       | nil          | nil   | \lstindexmacro | [c]fixed | false           | {0.6em,0.45em} | false      | false | false      | {}         | {}           | {}          | {}        |
| sh         | shcode          | \medskipamount | \medskipamount |         1 |  9999999 | false     |          0 |      0 | {}    | {sh}              | {}           | {}             | {\ttfamily\footnotesize} | {}              | \itshape     | {}          | \bfseries    |           0 | true          | {}            | false   |       8 | false    | false      | false            | \bigbreak | none    |          1 | false           | {}          | 10pt      | true             | auto        | \arabic{lstnumber} | \linewidth | 0pt         | 0pt          | false        | true       | false             | {}       | {}        | 20pt        | true            | single | ffff       | 3pt      | 2pt     | 0.4pt     | 0pt              | 0pt               | 0pt             | 0pt                | nil             | \color{red}    | nil       | nil          | nil   | \lstindexmacro | [c]fixed | false           | {0.6em,0.45em} | false      | false | false      | {}         | {}           | {}          | {}        |
| sql        | sqlcode         | \medskipamount | \medskipamount |         1 |  9999999 | false     |          0 |      0 | {}    | {SQL}             | {}           | {}             | {}                       | {}              | \itshape     | {}          | \bfseries    |           0 | true          | {}            | false   |       8 | false    | false      | false            | \bigbreak | none    |          1 | false           | {}          | 10pt      | true             | auto        | \arabic{lstnumber} | \linewidth | 0pt         | 0pt          | false        | false      | false             | {}       | {}        | 20pt        | true            | none   | ffff       | 3pt      | 2pt     | 0.4pt     | 0pt              | 0pt               | 0pt             | 0pt                | nil             | nil            | nil       | nil          | nil   | \lstindexmacro | [c]fixed | false           | {0.6em,0.45em} | false      | false | false      | {}         | {}           | {}          | {}        |
| sqlite     | sqlite3code     | \medskipamount | \medskipamount |         1 |  9999999 | false     |          0 |      0 | {}    | {SQL}             | {}           | {}             | {}                       | {}              | \itshape     | {}          | \bfseries    |           0 | true          | {}            | false   |       8 | false    | false      | false            | \bigbreak | none    |          1 | false           | {}          | 10pt      | true             | auto        | \arabic{lstnumber} | \linewidth | 0pt         | 0pt          | false        | false      | false             | {}       | {}        | 20pt        | true            | none   | ffff       | 3pt      | 2pt     | 0.4pt     | 0pt              | 0pt               | 0pt             | 0pt                | nil             | nil            | nil       | nil          | nil   | \lstindexmacro | [c]fixed | false           | {0.6em,0.45em} | false      | false | false      | {}         | {}           | {}          | {}        |

***** Lstinline lookup table                                       :noexport:
#+tblname: lstinline-lookup
| Org        | Listings   | aboveskip      | belowskip      | firstline | lastline | showlines | emptylines | gobble | style | language          | alsolanguage | defaultdialect | basicstyle               | identifierstyle | commentstyle | stringstyle | keywordstyle | classoffset | extendedchars | inputencoding | upquote | tabsize | showtabs | showspaces | showstringspaces | formfeed  | numbers | stepnumber | numberfirstline | numberstyle | numbersep | numberblanklines | firstnumber | thelstnumber       | linewidth  | xleftmargin | xrightmargin | breaklines | resetmargins | breakatwhitespace | prebreak | postbreak | breakindent | breakautoindent | index | indexstyle     | columns  | flexiblecolumns | basewidth      | fontadjust | texcl | mathescape | escapechar | escapeinside | escapebegin | escapeend |
| *default*  | *default*  | \medskipamount | \medskipamount |         1 |  9999999 | false     |          0 |      0 | {}    | nil               | {}           | {}             | {}                       | {}              | \itshape     | {}          | \bfseries    |           0 | true          | {}            | false   |       8 | false    | false      | false            | \bigbreak | none    |          1 | false           | {}          | 10pt      | true             | auto        | \arabic{lstnumber} | \linewidth | 0pt         | 0pt          | false      | false        | false             | {}       | {}        | 20pt        | true            | nil   | \lstindexmacro | [c]fixed | false           | {0.6em,0.45em} | false      | false | false      | {}         | {}           | {}          | {}        |
| asymptote  | asymptote  | \medskipamount | \medskipamount |         1 |  9999999 | false     |          0 |      0 | {}    | {}                | {}           | {}             | {}                       | {}              | \itshape     | {}          | \bfseries    |           0 | true          | {}            | false   |       8 | false    | false      | false            | \bigbreak | none    |          1 | false           | {}          | 10pt      | true             | auto        | \arabic{lstnumber} | \linewidth | 0pt         | 0pt          | false      | false        | false             | {}       | {}        | 20pt        | true            | nil   | \lstindexmacro | [c]fixed | false           | {0.6em,0.45em} | false      | false | false      | {}         | {}           | {}          | {}        |
| C          | cpp        | \medskipamount | \medskipamount |         1 |  9999999 | false     |          0 |      0 | {}    | [ANSI]{C}         | {}           | {}             | {}                       | {}              | \itshape     | {}          | \bfseries    |           0 | true          | {}            | false   |       8 | false    | false      | false            | \bigbreak | none    |          1 | false           | {}          | 10pt      | true             | auto        | \arabic{lstnumber} | \linewidth | 0pt         | 0pt          | false      | false        | false             | {}       | {}        | 20pt        | true            | nil   | \lstindexmacro | [c]fixed | false           | {0.6em,0.45em} | false      | false | false      | {}         | {}           | {}          | {}        |
| clojure    | clojure    | \medskipamount | \medskipamount |         1 |  9999999 | false     |          0 |      0 | {}    | {}                | {}           | {}             | {}                       | {}              | \itshape     | {}          | \bfseries    |           0 | true          | {}            | false   |       8 | false    | false      | false            | \bigbreak | none    |          1 | false           | {}          | 10pt      | true             | auto        | \arabic{lstnumber} | \linewidth | 0pt         | 0pt          | false      | false        | false             | {}       | {}        | 20pt        | true            | nil   | \lstindexmacro | [c]fixed | false           | {0.6em,0.45em} | false      | false | false      | {}         | {}           | {}          | {}        |
| css        | css        | \medskipamount | \medskipamount |         1 |  9999999 | false     |          0 |      0 | {}    | {}                | {}           | {}             | {}                       | {}              | \itshape     | {}          | \bfseries    |           0 | true          | {}            | false   |       8 | false    | false      | false            | \bigbreak | none    |          1 | false           | {}          | 10pt      | true             | auto        | \arabic{lstnumber} | \linewidth | 0pt         | 0pt          | false      | false        | false             | {}       | {}        | 20pt        | true            | nil   | \lstindexmacro | [c]fixed | false           | {0.6em,0.45em} | false      | false | false      | {}         | {}           | {}          | {}        |
| ditaa      | ditaa      | \medskipamount | \medskipamount |         1 |  9999999 | false     |          0 |      0 | {}    | {}                | {}           | {}             | {}                       | {}              | \itshape     | {}          | \bfseries    |           0 | true          | {}            | false   |       8 | false    | false      | false            | \bigbreak | none    |          1 | false           | {}          | 10pt      | true             | auto        | \arabic{lstnumber} | \linewidth | 0pt         | 0pt          | false      | false        | false             | {}       | {}        | 20pt        | true            | nil   | \lstindexmacro | [c]fixed | false           | {0.6em,0.45em} | false      | false | false      | {}         | {}           | {}          | {}        |
| dot        | dotlang    | \medskipamount | \medskipamount |         1 |  9999999 | false     |          0 |      0 | {}    | {}                | {}           | {}             | {}                       | {}              | \itshape     | {}          | \bfseries    |           0 | true          | {}            | false   |       8 | false    | false      | false            | \bigbreak | none    |          1 | false           | {}          | 10pt      | true             | auto        | \arabic{lstnumber} | \linewidth | 0pt         | 0pt          | false      | false        | false             | {}       | {}        | 20pt        | true            | nil   | \lstindexmacro | [c]fixed | false           | {0.6em,0.45em} | false      | false | false      | {}         | {}           | {}          | {}        |
| emacs-lisp | commonlisp | \medskipamount | \medskipamount |         1 |  9999999 | false     |          0 |      0 | {}    | {Lisp}            | {}           | {}             | {\ttfamily\small}        | {}              | \itshape     | {}          | \bfseries    |           0 | true          | {}            | false   |       8 | false    | false      | false            | \bigbreak | none    |          1 | false           | {}          | 10pt      | true             | auto        | \arabic{lstnumber} | \linewidth | 0pt         | 0pt          | false      | false        | false             | {}       | {}        | 20pt        | true            | nil   | \lstindexmacro | [c]fixed | false           | {0.6em,0.45em} | false      | false | false      | {}         | {}           | {}          | {}        |
| gnuplot    | gnuplot    | \medskipamount | \medskipamount |         1 |  9999999 | false     |          0 |      0 | {}    | {Gnuplot}         | {}           | {}             | {}                       | {}              | \itshape     | {}          | \bfseries    |           0 | true          | {}            | false   |       8 | false    | false      | false            | \bigbreak | none    |          1 | false           | {}          | 10pt      | true             | auto        | \arabic{lstnumber} | \linewidth | 0pt         | 0pt          | false      | false        | false             | {}       | {}        | 20pt        | true            | nil   | \lstindexmacro | [c]fixed | false           | {0.6em,0.45em} | false      | false | false      | {}         | {}           | {}          | {}        |
| haskell    | haskell    | \medskipamount | \medskipamount |         1 |  9999999 | false     |          0 |      0 | {}    | {Haskell}         | {}           | {}             | {}                       | {}              | \itshape     | {}          | \bfseries    |           0 | true          | {}            | false   |       8 | false    | false      | false            | \bigbreak | none    |          1 | false           | {}          | 10pt      | true             | auto        | \arabic{lstnumber} | \linewidth | 0pt         | 0pt          | false      | false        | false             | {}       | {}        | 20pt        | true            | nil   | \lstindexmacro | [c]fixed | false           | {0.6em,0.45em} | false      | false | false      | {}         | {}           | {}          | {}        |
| js         | js         | \medskipamount | \medskipamount |         1 |  9999999 | false     |          0 |      0 | {}    | {Java}            | {}           | {}             | {}                       | {}              | \itshape     | {}          | \bfseries    |           0 | true          | {}            | false   |       8 | false    | false      | false            | \bigbreak | none    |          1 | false           | {}          | 10pt      | true             | auto        | \arabic{lstnumber} | \linewidth | 0pt         | 0pt          | false      | false        | false             | {}       | {}        | 20pt        | true            | nil   | \lstindexmacro | [c]fixed | false           | {0.6em,0.45em} | false      | false | false      | {}         | {}           | {}          | {}        |
| latex      | latex      | \medskipamount | \medskipamount |         1 |  9999999 | false     |          0 |      0 | {}    | [LaTeX]{TeX}      | {}           | {}             | {}                       | {}              | \itshape     | {}          | \bfseries    |           0 | true          | {}            | false   |       8 | false    | false      | false            | \bigbreak | none    |          1 | false           | {}          | 10pt      | true             | auto        | \arabic{lstnumber} | \linewidth | 0pt         | 0pt          | false      | false        | false             | {}       | {}        | 20pt        | true            | nil   | \lstindexmacro | [c]fixed | false           | {0.6em,0.45em} | false      | false | false      | {}         | {}           | {}          | {}        |
| ledger     | ledger     | \medskipamount | \medskipamount |         1 |  9999999 | false     |          0 |      0 | {}    | {}                | {}           | {}             | {}                       | {}              | \itshape     | {}          | \bfseries    |           0 | true          | {}            | false   |       8 | false    | false      | false            | \bigbreak | none    |          1 | false           | {}          | 10pt      | true             | auto        | \arabic{lstnumber} | \linewidth | 0pt         | 0pt          | false      | false        | false             | {}       | {}        | 20pt        | true            | nil   | \lstindexmacro | [c]fixed | false           | {0.6em,0.45em} | false      | false | false      | {}         | {}           | {}          | {}        |
| lisp       | cl         | \medskipamount | \medskipamount |         1 |  9999999 | false     |          0 |      0 | {}    | {Lisp}            | {}           | {}             | {}                       | {}              | \itshape     | {}          | \bfseries    |           0 | true          | {}            | false   |       8 | false    | false      | false            | \bigbreak | none    |          1 | false           | {}          | 10pt      | true             | auto        | \arabic{lstnumber} | \linewidth | 0pt         | 0pt          | false      | false        | false             | {}       | {}        | 20pt        | true            | nil   | \lstindexmacro | [c]fixed | false           | {0.6em,0.45em} | false      | false | false      | {}         | {}           | {}          | {}        |
| matlab     | matlab     | \medskipamount | \medskipamount |         1 |  9999999 | false     |          0 |      0 | {}    | {Matlab}          | {}           | {}             | {}                       | {}              | \itshape     | {}          | \bfseries    |           0 | true          | {}            | false   |       8 | false    | false      | false            | \bigbreak | none    |          1 | false           | {}          | 10pt      | true             | auto        | \arabic{lstnumber} | \linewidth | 0pt         | 0pt          | false      | false        | false             | {}       | {}        | 20pt        | true            | nil   | \lstindexmacro | [c]fixed | false           | {0.6em,0.45em} | false      | false | false      | {}         | {}           | {}          | {}        |
| mscgen     | mscgen     | \medskipamount | \medskipamount |         1 |  9999999 | false     |          0 |      0 | {}    | {}                | {}           | {}             | {}                       | {}              | \itshape     | {}          | \bfseries    |           0 | true          | {}            | false   |       8 | false    | false      | false            | \bigbreak | none    |          1 | false           | {}          | 10pt      | true             | auto        | \arabic{lstnumber} | \linewidth | 0pt         | 0pt          | false      | false        | false             | {}       | {}        | 20pt        | true            | nil   | \lstindexmacro | [c]fixed | false           | {0.6em,0.45em} | false      | false | false      | {}         | {}           | {}          | {}        |
| ocaml      | ocaml      | \medskipamount | \medskipamount |         1 |  9999999 | false     |          0 |      0 | {}    | [Objective]{Caml} | {}           | {}             | {}                       | {}              | \itshape     | {}          | \bfseries    |           0 | true          | {}            | false   |       8 | false    | false      | false            | \bigbreak | none    |          1 | false           | {}          | 10pt      | true             | auto        | \arabic{lstnumber} | \linewidth | 0pt         | 0pt          | false      | false        | false             | {}       | {}        | 20pt        | true            | nil   | \lstindexmacro | [c]fixed | false           | {0.6em,0.45em} | false      | false | false      | {}         | {}           | {}          | {}        |
| octave     | octave     | \medskipamount | \medskipamount |         1 |  9999999 | false     |          0 |      0 | {}    | {Octave}          | {}           | {}             | {}                       | {}              | \itshape     | {}          | \bfseries    |           0 | true          | {}            | false   |       8 | false    | false      | false            | \bigbreak | none    |          1 | false           | {}          | 10pt      | true             | auto        | \arabic{lstnumber} | \linewidth | 0pt         | 0pt          | false      | false        | false             | {}       | {}        | 20pt        | true            | nil   | \lstindexmacro | [c]fixed | false           | {0.6em,0.45em} | false      | false | false      | {}         | {}           | {}          | {}        |
| org        | org        | \medskipamount | \medskipamount |         1 |  9999999 | false     |          0 |      0 | {}    | {org}             | {}           | {}             | {\ttfamily\small}        | {}              | \itshape     | {}          | \bfseries    |           0 | true          | {}            | false   |       8 | false    | false      | false            | \bigbreak | none    |          1 | false           | {}          | 10pt      | true             | auto        | \arabic{lstnumber} | \linewidth | 0pt         | 0pt          | false      | false        | false             | {}       | {}        | 20pt        | true            | nil   | \lstindexmacro | [c]fixed | false           | {0.6em,0.45em} | false      | false | false      | {}         | {}           | {}          | {}        |
| oz         | oz         | \medskipamount | \medskipamount |         1 |  9999999 | false     |          0 |      0 | {}    | {Oz}              | {}           | {}             | {}                       | {}              | \itshape     | {}          | \bfseries    |           0 | true          | {}            | false   |       8 | false    | false      | false            | \bigbreak | none    |          1 | false           | {}          | 10pt      | true             | auto        | \arabic{lstnumber} | \linewidth | 0pt         | 0pt          | false      | false        | false             | {}       | {}        | 20pt        | true            | nil   | \lstindexmacro | [c]fixed | false           | {0.6em,0.45em} | false      | false | false      | {}         | {}           | {}          | {}        |
| perl       | perl       | \medskipamount | \medskipamount |         1 |  9999999 | false     |          0 |      0 | {}    | {Perl}            | {}           | {}             | {}                       | {}              | \itshape     | {}          | \bfseries    |           0 | true          | {}            | false   |       8 | false    | false      | false            | \bigbreak | none    |          1 | false           | {}          | 10pt      | true             | auto        | \arabic{lstnumber} | \linewidth | 0pt         | 0pt          | false      | false        | false             | {}       | {}        | 20pt        | true            | nil   | \lstindexmacro | [c]fixed | false           | {0.6em,0.45em} | false      | false | false      | {}         | {}           | {}          | {}        |
| plantuml   | plantuml   | \medskipamount | \medskipamount |         1 |  9999999 | false     |          0 |      0 | {}    | {}                | {}           | {}             | {}                       | {}              | \itshape     | {}          | \bfseries    |           0 | true          | {}            | false   |       8 | false    | false      | false            | \bigbreak | none    |          1 | false           | {}          | 10pt      | true             | auto        | \arabic{lstnumber} | \linewidth | 0pt         | 0pt          | false      | false        | false             | {}       | {}        | 20pt        | true            | nil   | \lstindexmacro | [c]fixed | false           | {0.6em,0.45em} | false      | false | false      | {}         | {}           | {}          | {}        |
| python     | python     | \medskipamount | \medskipamount |         1 |  9999999 | false     |          0 |      0 | {}    | {Python}          | {}           | {}             | {\ttfamily\small}        | {}              | \itshape     | {}          | \bfseries    |           0 | true          | {}            | false   |       8 | false    | false      | false            | \bigbreak | none    |          1 | false           | {}          | 10pt      | true             | auto        | \arabic{lstnumber} | \linewidth | 0pt         | 0pt          | false      | false        | false             | {}       | {}        | 20pt        | true            | nil   | \lstindexmacro | [c]fixed | false           | {0.6em,0.45em} | false      | false | false      | {}         | {}           | {}          | {}        |
| R          | rlang      | \medskipamount | \medskipamount |         1 |  9999999 | false     |          0 |      0 | {}    | {R}               | {}           | {}             | {}                       | {}              | \itshape     | {}          | \bfseries    |           0 | true          | {}            | false   |       8 | false    | false      | false            | \bigbreak | none    |          1 | false           | {}          | 10pt      | true             | auto        | \arabic{lstnumber} | \linewidth | 0pt         | 0pt          | false      | false        | false             | {}       | {}        | 20pt        | true            | nil   | \lstindexmacro | [c]fixed | false           | {0.6em,0.45em} | false      | false | false      | {}         | {}           | {}          | {}        |
| ruby       | ruby       | \medskipamount | \medskipamount |         1 |  9999999 | false     |          0 |      0 | {}    | {Ruby}            | {}           | {}             | {}                       | {}              | \itshape     | {}          | \bfseries    |           0 | true          | {}            | false   |       8 | false    | false      | false            | \bigbreak | none    |          1 | false           | {}          | 10pt      | true             | auto        | \arabic{lstnumber} | \linewidth | 0pt         | 0pt          | false      | false        | false             | {}       | {}        | 20pt        | true            | nil   | \lstindexmacro | [c]fixed | false           | {0.6em,0.45em} | false      | false | false      | {}         | {}           | {}          | {}        |
| sass       | sass       | \medskipamount | \medskipamount |         1 |  9999999 | false     |          0 |      0 | {}    | {}                | {}           | {}             | {}                       | {}              | \itshape     | {}          | \bfseries    |           0 | true          | {}            | false   |       8 | false    | false      | false            | \bigbreak | none    |          1 | false           | {}          | 10pt      | true             | auto        | \arabic{lstnumber} | \linewidth | 0pt         | 0pt          | false      | false        | false             | {}       | {}        | 20pt        | true            | nil   | \lstindexmacro | [c]fixed | false           | {0.6em,0.45em} | false      | false | false      | {}         | {}           | {}          | {}        |
| scheme     | scheme     | \medskipamount | \medskipamount |         1 |  9999999 | false     |          0 |      0 | {}    | {}                | {}           | {}             | {}                       | {}              | \itshape     | {}          | \bfseries    |           0 | true          | {}            | false   |       8 | false    | false      | false            | \bigbreak | none    |          1 | false           | {}          | 10pt      | true             | auto        | \arabic{lstnumber} | \linewidth | 0pt         | 0pt          | false      | false        | false             | {}       | {}        | 20pt        | true            | nil   | \lstindexmacro | [c]fixed | false           | {0.6em,0.45em} | false      | false | false      | {}         | {}           | {}          | {}        |
| screen     | screen     | \medskipamount | \medskipamount |         1 |  9999999 | false     |          0 |      0 | {}    | {}                | {}           | {}             | {}                       | {}              | \itshape     | {}          | \bfseries    |           0 | true          | {}            | false   |       8 | false    | false      | false            | \bigbreak | none    |          1 | false           | {}          | 10pt      | true             | auto        | \arabic{lstnumber} | \linewidth | 0pt         | 0pt          | false      | false        | false             | {}       | {}        | 20pt        | true            | nil   | \lstindexmacro | [c]fixed | false           | {0.6em,0.45em} | false      | false | false      | {}         | {}           | {}          | {}        |
| sh         | sh         | \medskipamount | \medskipamount |         1 |  9999999 | false     |          0 |      0 | {}    | {sh}              | {}           | {}             | {\ttfamily\small}        | {}              | \itshape     | {}          | \bfseries    |           0 | true          | {}            | false   |       8 | false    | false      | false            | \bigbreak | none    |          1 | false           | {}          | 10pt      | true             | auto        | \arabic{lstnumber} | \linewidth | 0pt         | 0pt          | false      | false        | false             | {}       | {}        | 20pt        | true            | nil   | \lstindexmacro | [c]fixed | false           | {0.6em,0.45em} | false      | false | false      | {}         | {}           | {}          | {}        |
| sql        | sql        | \medskipamount | \medskipamount |         1 |  9999999 | false     |          0 |      0 | {}    | {SQL}             | {}           | {}             | {}                       | {}              | \itshape     | {}          | \bfseries    |           0 | true          | {}            | false   |       8 | false    | false      | false            | \bigbreak | none    |          1 | false           | {}          | 10pt      | true             | auto        | \arabic{lstnumber} | \linewidth | 0pt         | 0pt          | false      | false        | false             | {}       | {}        | 20pt        | true            | nil   | \lstindexmacro | [c]fixed | false           | {0.6em,0.45em} | false      | false | false      | {}         | {}           | {}          | {}        |
| sqlite     | sqlite3    | \medskipamount | \medskipamount |         1 |  9999999 | false     |          0 |      0 | {}    | {SQL}             | {}           | {}             | {}                       | {}              | \itshape     | {}          | \bfseries    |           0 | true          | {}            | false   |       8 | false    | false      | false            | \bigbreak | none    |          1 | false           | {}          | 10pt      | true             | auto        | \arabic{lstnumber} | \linewidth | 0pt         | 0pt          | false      | false        | false             | {}       | {}        | 20pt        | true            | nil   | \lstindexmacro | [c]fixed | false           | {0.6em,0.45em} | false      | false | false      | {}         | {}           | {}          | {}        |


**** Make listings environments

This [[latex:proglang][Python]] script creates [[latex:progstruct][lstnewenvironment]] macros for each of the
languages in the listings-lookup table (Listing \ref{fig:make-lstnew}).

#+BEGIN_listing
#+source: make-lstnewenvironment(x=listings-lookup)
#+begin_src python :results output raw :exports code
  res = ''
  rows = len(x)
  cols = len(x[0])
  for row in range(2,rows):  
      first = True
      s = '\\lstnewenvironment{' + x[row][1] +'}\n{\lstset{'
      for col in range(2,cols):
          if 'nil' != x[row][col] and x[row][col] != x[1][col]:
              if first:
                  s = s + x[0][col] + '=' + str(x[row][col])
                  first = False
              else:
                  s = s + ',' + x[0][col] + '=' + str(x[row][col])
      res = res + s + '}}\n{}\n'
  print res
#+end_src
#+LATEX: \caption[Python code to make lstnewenvironment macros]{Python code to make lstnewenvironment macros.}\label{fig:make-lstnew}
#+END_listing

This source block (Listing \ref{fig:lstnew-to-class}) puts the output of Listing \ref{fig:make-lstnew}
into the class file.
#+BEGIN_listing
#+source: make-lstnewenvironment-code
#+begin_src latex :noweb tangle :exports code
<<make-lstnewenvironment(x=listings-lookup)>>
#+end_src
#+LATEX: \caption[Put the lstnewenvironment macros in the class file]{Put the lstnewenvironment macros in the class file.}\label{fig:lstnew-to-class}
#+END_listing

**** Make inline list commands                                   

A LaTeX macro is used to define language-specific shortcuts for inline
listings with the [[latex:package][listings]] package (Listing
\ref{fig:lstinline-macro}).  It defines a newcommand [[latex:progstruct][makelstinline]]
that takes two arguments: the name of the new shortcut command and the
=key = value= options needed to configure the syntax highlighting and
typesetting.

#+BEGIN_listing
#+source: make-lstinline-macro
#+begin_src latex :exports code
  \newcommand\makelstinline[2]{
    \def\makelstinline@shortname{#1}
    \expandafter\newcommand\csname\makelstinline@shortname\endcsname[1][]{ 
      \lstinline[#2]##1}}
#+end_src
#+LATEX: \caption[A macro to make language-specific shortcuts for Org-mode languages]{A macro to make language-specific shortcuts for Org-mode languages.}\label{fig:lstinline-macro}
#+END_listing

This [[latex:proglang][Python]] code block (Listing \ref{fig:makelstinline}) uses the lookup table to create a call to
[[latex:progstruct][makelstinline]] for each of the languages in the table.

#+BEGIN_listing
#+source: make-lstinline(x=lstinline-lookup)
#+begin_src python :results output raw :exports code
  res = ''
  rows = len(x)
  cols = len(x[0])
  for row in range(2,rows):  
      first = True
      s = '\\makelstinline{'+ x[row][1] +'}{'
      for col in range(2,cols):
          if 'nil' != x[row][col] and x[row][col] != x[1][col]:
              if first:
                  s = s + x[0][col] + '=' + str(x[row][col])
                  first = False
              else:
                  s = s + ',' + x[0][col] + '=' + str(x[row][col])
      res = res + s + '}\n'
  print res
#+end_src
#+LATEX: \caption[Python code to make makelstinline macros]{Python code to make makelstinline macros.}\label{fig:makelstinline}
#+END_listing

This source block (Listing \ref{fig:make-lstinline-code}) is used to put the LaTeX macros into the class file.

#+BEGIN_listing
#+source: make-lstinline-code
#+begin_src latex :noweb tangle :exports code
<<make-lstinline(x=lstinline-lookup)>>
#+end_src
#+LATEX: \caption[Put the makelstinline macros in the class file]{Put the makelstinline macros in the class file.}\label{fig:make-lstinline-code}
#+END_listing

**** The listings configuration file

This source block writes a file, =orgart_listings.cfg=, that can be
used to input minted shortcuts into an Org-mode file that isn't using
[[latex:classfile][Org-article]] (Listing \ref{fig:listings-cfg}).  Typically, the configuration file would be input in the LaTeX header:
=\input{orgart_listings.cfg}=.


#+BEGIN_listing
#+source: listings-cfg
#+begin_src latex :tangle orgart_listings.cfg :noweb tangle :results raw :exports code
    <<make-lstnewenvironment(x=listings-lookup)>>
    <<make-lstinline(x=lstinline-lookup)>>
#+end_src
#+LATEX: \caption[Make a configuration file for the listings package in Org-mode]{Make a configuration file for the listings package in Org-mode.}\label{fig:listings-cfg}
#+END_listing



**** Listings code

This code defines three languages for the [[latex:package][listings]] package.  It also
defines a shell for the listings environment, which is defined and
used by the [[latex:package][minted]] package (Listing \ref{fig:listings-code}).

#+BEGIN_listing
#+source: listings-code
#+begin_src latex :exports none
    \lstdefinelanguage{org}%
    {morekeywords={:results, :session, :var, :noweb, :exports},%
      sensitive=false,%
      morestring=[b]",%
      morecomment=[l]{\#}}%
    \lstdefinelanguage{dot}
    {morekeywords={graph},
      sensitive=false}
    \lstdefinelanguage{ditaa}{breaklines=false}
    \ifthenelse{\boolean{ORGART@koma}}
    {\DeclareNewTOC[type=listing,name=Listing,float,floatpos=htb!]{lol}
      \providecommand\listoflistings{\listoftoc[List of Listings]{lol}}
      \renewcommand\listoflistings{\listoftoc[List of Listings]{lol}}
    }
    {\newfloat{listing}{h}{lol}
    \newcommand\listingscaption{Listing}
    \floatname{listing}{\listingscaption}
    \newcommand\listoflistingscaption{List of Listings}
    \providecommand\listoflistings{\listof{listing}{\listoflistingscaption}}
    \floatplacement{listing}{htb!}
  }
#+end_src
#+LATEX: \caption[Code to configure the listings package]{Code to configure the listings package.}\label{fig:listings-code}
#+END_listing
*** Minted

Minted is a LaTeX package for formatting source code.  It is an
alternative to the listings package.  It relies on an external piece
of software called Pygments that needs to be installed separately.

**** Installing Pygments
On a Debian/Ubuntu linux system [[latex:package][pygments]] can be installed with this
shell command: [[inline:sh][sudo aptitude install python-pygments]].

**** Org-mode setup
# <<minted setup>>

This code block (Listing \ref{fig:minted-setup}) sets
`org-export-latex-listings' so that [[latex:package][minted]] is used to syntax highlight
and typeset source code, defines the languages that [[latex:package][minted]] will work
on, and configures the call to [[latex:proglang][pdflatex]] so it can interface with the
external calls made by [[latex:package][minted]].

#+BEGIN_listing
#+source: minted-setup
#+begin_src emacs-lisp :exports code :results silent
  (setq org-export-latex-listings 'minted)
  (setq org-export-latex-custom-lang-environments
        '((python "pythoncode")
          (emacs-lisp "common-lispcode")
          (org "textcode")
          (latex "latexcode")))
  (setq org-latex-to-pdf-process
        '("pdflatex -shell-escape -interaction nonstopmode -output-directory %o %f"))
#+end_src
#+LATEX: \caption[Configure the Org-mode LaTeX exporter for the minted package]{Configure the Org-mode LaTeX exporter for the minted package.}\label{fig:minted-setup}
#+END_listing

**** Using minted

To use minted to typeset source code blocks, pass the [[latex:progstruct][minted]] value to
the [[latex:progstruct][source]] key (Listing \ref{fig:minted-source}).  This loads the
[[latex:package][minted]] package, makes the macros that setup the minted environments
and commands for inline listings, sets the default placement of floats
created by the [[latex:progstruct][listing command]], and sets the header of the list of
listings set by the [[latex:progstruct][listoflistings]] command.

#+BEGIN_listing
#+source: pgf-option-source-minted
#+begin_src latex :noweb tangle :exports code
  \pgfkeys{ 
    /ORGART/.cd, 
    source/minted/.code={
      \AtEndOfClass{
        \RequirePackage{minted}
        <<make-newminted-code>>
        <<make-newmint-code>>
        \floatplacement{listing}{htb!}
        \listoflistingscaption{List of Listings}
        }}}  
#+end_src
#+LATEX: \caption[The minted value of the source key]{The minted value of the source key.}\label{fig:minted-source}
#+END_listing

**** Minted styles
Minted defines styles, which are color schemes used in syntax
highlighting of code.  Minted styles are accessible with a =key =
value= interface with the key [[latex:progstruct][mintedstyle]] (Listing
\ref{fig:option-mintedstyle}).  The [[latex:progstruct][mintedstyle]] key can take the
following values:
   - monokai
   - perldoc
   - borland
   - colorful
   - murphy
   - trac
   - tango
   - fruity
   - autumn
   - vs
   - bw
   - emacs
   - pastie
   - friendly
   - native

#+BEGIN_listing
#+source:pgf-option-mintedstyle
#+begin_src latex :exports code
  \pgfkeys{ 
    /ORGART/.cd, 
    mintedstyle/.is choice,
    mintedstyle/monokai/.code={\AtBeginDocument{\usemintedstyle{monokai}}},
    mintedstyle/manni/.code={\AtBeginDocument{\usemintedstyle{manni}}},
    mintedstyle/perldoc/.code={\AtBeginDocument{\usemintedstyle{perldoc}}},
    mintedstyle/borland/.code={\AtBeginDocument{\usemintedstyle{borland}}},
    mintedstyle/colorful/.code={\AtBeginDocument{\usemintedstyle{colorful}}},
    mintedstyle/murphy/.code={\AtBeginDocument{\usemintedstyle{murphy}}},
    mintedstyle/trac/.code={\AtBeginDocument{\usemintedstyle{trac}}},
    mintedstyle/tango/.code={\AtBeginDocument{\usemintedstyle{tango}}},
    mintedstyle/fruity/.code={\AtBeginDocument{\usemintedstyle{fruity}}},
    mintedstyle/autumn/.code={\AtBeginDocument{\usemintedstyle{autumn}}},
    mintedstyle/vs/.code={\AtBeginDocument{\usemintedstyle{vs}}},
    mintedstyle/bw/.code={\AtBeginDocument{\usemintedstyle{bw}}},
    mintedstyle/emacs/.code={\AtBeginDocument{\usemintedstyle{emacs}}},
    mintedstyle/pastie/.code={\AtBeginDocument{\usemintedstyle{pastie}}},
    mintedstyle/friendly/.code={\AtBeginDocument{\usemintedstyle{friendly}}},
    mintedstyle/native/.code={\AtBeginDocument{\usemintedstyle{native}}}
  } 
#+end_src
#+LATEX: \caption[Set up options for minted package styles]{Set up options for minted package styles.}\label{fig:option-mintedstyle}
#+END_listing


**** Mark up code snippets
# <<markup-code-snippets>>

The class creates macros for marking up code snippets, using the
[[latex:progstruct][newmint]] command of the [[latex:package][minted]] package.  Adding a code snippet is as
easy as =C-c C-l inline:python x=str(y)=, which yields the following:

This is some [[latex:proglang][Python]] code inline:  [[inline:python][x = str(y)]].


**** Newmint and newminted lookup tables
These lookup tables hold configuration information for the the [[latex:package][minted]]
package.  The configuration information is used by a [[latex:proglang][Python]] script to
write out =newmint= and =newminted= macros.  These macros expand
to LaTeX environments that have access to the information needed to
highlight syntax and typeset a particular computer language.

Each row in the table holds information for a language supported by
[[latex:proglang][Org-mode]].  The first two columns contain the [[latex:proglang][Org-mode]] name for the
language and the [[latex:package][minted]] name.  The other 29 columns are for [[latex:package][minted]]
variables.  The table is too large to reproduce on the printed page,
so a corner of it is presented in Table \ref{tab:newminted}.

#+CAPTION: A corner of the newminted lookup table
#+LABEL: tab:newminted

| Org          | Minted      | baselinestretch | bgcolor | firstline |
| *default*    | *default*   | auto            | nil     |         1 |
| asymptote    | asymptote   | auto            | nil     |         1 |
| C            | cpp         | auto            | nil     |         1 |
| clojure      | clojure     | auto            | nil     |         1 | 
| css          | css         | auto            | nil     |         1 |

The *default* row holds the [[latex:package][minted]] defaults.  The [[latex:proglang][Python]] scripts that
use the table to configure [[latex:package][minted]] use this row to determine whether or
not to write out a =key = value= pair to the [[latex:package][minted]] configuration in
the [[latex:classfile][Org-article]] class file.  A =nil= value in a cell of the table
indicates that the variable indicated in the column head is not set in
the minted configuration for that language.

The printed appearance of source code in any language is controlled by
changing entries in its row of variables and then tangling a new LaTeX
class file with =C-c C-v t=.  When the exported LaTeX source code is
compiled with the new class file, changes in the table will be
reflected on the pdf output.

**** Newmint lookup table                                          :noexport:

This table holds default minted values for each of the languages
supported by Org-mode.  You can change how minted typesets source code
snippets in any language by modifying the appropriate cell in the table.

#+tblname: newmint-lookup
| Org          | Minted      | baselinestretch | bgcolor | firstline | firstnumber | fontfamily | fontseries | fontsize      | fontshape | formatcom | frame  | framerule | framesep | gobble | lastline | linenos | mathescape | numberblanklines | numbersep | obeytabs | resetmargins | rulecolor     | samepage | showspaces | showtabs | stepnumber | tabsize | texcl | xleftmargin | xrightmargin |
| *default*    | *default*   | auto            | nil     |         1 |           1 | tt         | auto       | auto          | auto      | nil       | none   | 0.4pt     | \fboxsep |      0 | nil      | FALSE   | FALSE      | TRUE             | 12pt      | FALSE    | FALSE        | \color{black} | FALSE    | FALSE      | FALSE    |          1 |       8 | FALSE | 0pt         | 0pt          |
| asymptote    | asymptote   | auto            | nil     |         1 |           1 | tt         | auto       | auto          | auto      | nil       | none   | 0.4pt     | \fboxsep |      0 | nil      | FALSE   | FALSE      | TRUE             | 12pt      | FALSE    | FALSE        | \color{black} | FALSE    | FALSE      | FALSE    |          1 |       8 | FALSE | 0pt         | 0pt          |
| C            | cpp         | auto            | nil     |         1 |           1 | tt         | auto       | auto          | auto      | nil       | none   | 0.4pt     | \fboxsep |      0 | nil      | FALSE   | FALSE      | TRUE             | 12pt      | FALSE    | FALSE        | \color{black} | FALSE    | FALSE      | FALSE    |          1 |       8 | FALSE | 0pt         | 0pt          |
| clojure      | clojure     | auto            | nil     |         1 |           1 | tt         | auto       | auto          | auto      | nil       | none   | 0.4pt     | \fboxsep |      0 | nil      | FALSE   | FALSE      | TRUE             | 12pt      | FALSE    | FALSE        | \color{black} | FALSE    | FALSE      | FALSE    |          1 |       8 | FALSE | 0pt         | 0pt          |
| css          | css         | auto            | nil     |         1 |           1 | tt         | auto       | auto          | auto      | nil       | none   | 0.4pt     | \fboxsep |      0 | nil      | FALSE   | FALSE      | TRUE             | 12pt      | FALSE    | FALSE        | \color{black} | FALSE    | FALSE      | FALSE    |          1 |       8 | FALSE | 0pt         | 0pt          |
| ditaa        | ditaa       | auto            | nil     |         1 |           1 | tt         | auto       | auto          | auto      | nil       | none   | 0.4pt     | \fboxsep |      0 | nil      | FALSE   | FALSE      | TRUE             | 12pt      | FALSE    | FALSE        | \color{black} | FALSE    | FALSE      | FALSE    |          1 |       8 | FALSE | 0pt         | 0pt          |
| dot          | dotlang     | auto            | nil     |         1 |           1 | tt         | auto       | auto          | auto      | nil       | none   | 0.4pt     | \fboxsep |      0 | nil      | FALSE   | FALSE      | TRUE             | 12pt      | FALSE    | FALSE        | \color{black} | FALSE    | FALSE      | FALSE    |          1 |       8 | FALSE | 0pt         | 0pt          |
| emacs-lisp   | common-lisp | auto            | nil     |         1 |           1 | tt         | auto       | auto          | auto      | nil       | none   | 0.4pt     | \fboxsep |      0 | nil      | FALSE   | FALSE      | TRUE             | 12pt      | FALSE    | FALSE        | \color{black} | FALSE    | FALSE      | FALSE    |          1 |       8 | FALSE | 0pt         | 0pt          |
| gnuplot      | gnuplot     | auto            | nil     |         1 |           1 | tt         | auto       | auto          | auto      | nil       | none   | 0.4pt     | \fboxsep |      0 | nil      | FALSE   | FALSE      | TRUE             | 12pt      | FALSE    | FALSE        | \color{black} | FALSE    | FALSE      | FALSE    |          1 |       8 | FALSE | 0pt         | 0pt          |
| haskell      | haskell     | auto            | nil     |         1 |           1 | tt         | auto       | auto          | auto      | nil       | none   | 0.4pt     | \fboxsep |      0 | nil      | FALSE   | FALSE      | TRUE             | 12pt      | FALSE    | FALSE        | \color{black} | FALSE    | FALSE      | FALSE    |          1 |       8 | FALSE | 0pt         | 0pt          |
| js           | js          | auto            | nil     |         1 |           1 | tt         | auto       | auto          | auto      | nil       | none   | 0.4pt     | \fboxsep |      0 | nil      | FALSE   | FALSE      | TRUE             | 12pt      | FALSE    | FALSE        | \color{black} | FALSE    | FALSE      | FALSE    |          1 |       8 | FALSE | 0pt         | 0pt          |
| latex        | latex       | auto            | nil     |         1 |           1 | tt         | auto       | auto          | auto      | nil       | none   | 0.4pt     | \fboxsep |      0 | nil      | FALSE   | FALSE      | TRUE             | 12pt      | FALSE    | FALSE        | \color{black} | FALSE    | FALSE      | FALSE    |          1 |       8 | FALSE | 0pt         | 0pt          |
| ledger       | ledger      | auto            | nil     |         1 |           1 | tt         | auto       | auto          | auto      | nil       | none   | 0.4pt     | \fboxsep |      0 | nil      | FALSE   | FALSE      | TRUE             | 12pt      | FALSE    | FALSE        | \color{black} | FALSE    | FALSE      | FALSE    |          1 |       8 | FALSE | 0pt         | 0pt          |
| lisp         | cl          | auto            | nil     |         1 |           1 | tt         | auto       | auto          | auto      | nil       | none   | 0.4pt     | \fboxsep |      0 | nil      | FALSE   | FALSE      | TRUE             | 12pt      | FALSE    | FALSE        | \color{black} | FALSE    | FALSE      | FALSE    |          1 |       8 | FALSE | 0pt         | 0pt          |
| matlab       | matlab      | auto            | nil     |         1 |           1 | tt         | auto       | auto          | auto      | nil       | none   | 0.4pt     | \fboxsep |      0 | nil      | FALSE   | FALSE      | TRUE             | 12pt      | FALSE    | FALSE        | \color{black} | FALSE    | FALSE      | FALSE    |          1 |       8 | FALSE | 0pt         | 0pt          |
| mscgen       | mscgen      | auto            | nil     |         1 |           1 | tt         | auto       | auto          | auto      | nil       | none   | 0.4pt     | \fboxsep |      0 | nil      | FALSE   | FALSE      | TRUE             | 12pt      | FALSE    | FALSE        | \color{black} | FALSE    | FALSE      | FALSE    |          1 |       8 | FALSE | 0pt         | 0pt          |
| ocaml        | ocaml       | auto            | nil     |         1 |           1 | tt         | auto       | auto          | auto      | nil       | none   | 0.4pt     | \fboxsep |      0 | nil      | FALSE   | FALSE      | TRUE             | 12pt      | FALSE    | FALSE        | \color{black} | FALSE    | FALSE      | FALSE    |          1 |       8 | FALSE | 0pt         | 0pt          |
| octave       | octave      | auto            | nil     |         1 |           1 | tt         | auto       | auto          | auto      | nil       | none   | 0.4pt     | \fboxsep |      0 | nil      | FALSE   | FALSE      | TRUE             | 12pt      | FALSE    | FALSE        | \color{black} | FALSE    | FALSE      | FALSE    |          1 |       8 | FALSE | 0pt         | 0pt          |
| org          | text        | auto            | nil     |         1 |           1 | tt         | auto       | auto          | auto      | nil       | none   | 0.4pt     | \fboxsep |      0 | nil      | FALSE   | FALSE      | TRUE             | 12pt      | FALSE    | FALSE        | \color{black} | FALSE    | FALSE      | FALSE    |          1 |       8 | FALSE | 0pt         | 0pt          |
| oz (contrib) | oz          | auto            | nil     |         1 |           1 | tt         | auto       | auto          | auto      | nil       | none   | 0.4pt     | \fboxsep |      0 | nil      | FALSE   | FALSE      | TRUE             | 12pt      | FALSE    | FALSE        | \color{black} | FALSE    | FALSE      | FALSE    |          1 |       8 | FALSE | 0pt         | 0pt          |
| perl         | perl        | auto            | nil     |         1 |           1 | tt         | auto       | auto          | auto      | nil       | none   | 0.4pt     | \fboxsep |      0 | nil      | FALSE   | FALSE      | TRUE             | 12pt      | FALSE    | FALSE        | \color{black} | FALSE    | FALSE      | FALSE    |          1 |       8 | FALSE | 0pt         | 0pt          |
| plantuml     | plantuml    | auto            | nil     |         1 |           1 | tt         | auto       | auto          | auto      | nil       | none   | 0.4pt     | \fboxsep |      0 | nil      | FALSE   | FALSE      | TRUE             | 12pt      | FALSE    | FALSE        | \color{black} | FALSE    | FALSE      | FALSE    |          1 |       8 | FALSE | 0pt         | 0pt          |
| python       | python      | auto            | nil     |         1 |           1 | tt         | auto       | \footnotesize | auto      | nil       | single | 0.4pt     | \fboxsep |      0 | nil      | FALSE   | FALSE      | TRUE             | 12pt      | FALSE    | FALSE        | \color{black} | FALSE    | TRUE       | FALSE    |          1 |       8 | FALSE | 0pt         | 0pt          |
| R            | rlang       | auto            | nil     |         1 |           1 | tt         | auto       | auto          | auto      | nil       | none   | 0.4pt     | \fboxsep |      0 | nil      | FALSE   | FALSE      | TRUE             | 12pt      | FALSE    | FALSE        | \color{black} | FALSE    | FALSE      | FALSE    |          1 |       8 | FALSE | 0pt         | 0pt          |
| ruby         | ruby        | auto            | nil     |         1 |           1 | tt         | auto       | auto          | auto      | nil       | none   | 0.4pt     | \fboxsep |      0 | nil      | FALSE   | FALSE      | TRUE             | 12pt      | FALSE    | FALSE        | \color{black} | FALSE    | FALSE      | FALSE    |          1 |       8 | FALSE | 0pt         | 0pt          |
| sass         | sass        | auto            | nil     |         1 |           1 | tt         | auto       | auto          | auto      | nil       | none   | 0.4pt     | \fboxsep |      0 | nil      | FALSE   | FALSE      | TRUE             | 12pt      | FALSE    | FALSE        | \color{black} | FALSE    | FALSE      | FALSE    |          1 |       8 | FALSE | 0pt         | 0pt          |
| scheme       | scheme      | auto            | nil     |         1 |           1 | tt         | auto       | auto          | auto      | nil       | none   | 0.4pt     | \fboxsep |      0 | nil      | FALSE   | FALSE      | TRUE             | 12pt      | FALSE    | FALSE        | \color{black} | FALSE    | FALSE      | FALSE    |          1 |       8 | FALSE | 0pt         | 0pt          |
| screen       | screen      | auto            | nil     |         1 |           1 | tt         | auto       | auto          | auto      | nil       | none   | 0.4pt     | \fboxsep |      0 | nil      | FALSE   | FALSE      | TRUE             | 12pt      | FALSE    | FALSE        | \color{black} | FALSE    | FALSE      | FALSE    |          1 |       8 | FALSE | 0pt         | 0pt          |
| sh           | sh          | auto            | nil     |         1 |           1 | tt         | auto       | auto          | auto      | nil       | none   | 0.4pt     | \fboxsep |      0 | nil      | FALSE   | FALSE      | TRUE             | 12pt      | FALSE    | FALSE        | \color{black} | FALSE    | FALSE      | FALSE    |          1 |       8 | FALSE | 0pt         | 0pt          |
| sql          | sql         | auto            | nil     |         1 |           1 | tt         | auto       | auto          | auto      | nil       | none   | 0.4pt     | \fboxsep |      0 | nil      | FALSE   | FALSE      | TRUE             | 12pt      | FALSE    | FALSE        | \color{black} | FALSE    | FALSE      | FALSE    |          1 |       8 | FALSE | 0pt         | 0pt          |
| sqlite       | sqlite3     | auto            | nil     |         1 |           1 | tt         | auto       | auto          | auto      | nil       | none   | 0.4pt     | \fboxsep |      0 | nil      | FALSE   | FALSE      | TRUE             | 12pt      | FALSE    | FALSE        | \color{black} | FALSE    | FALSE      | FALSE    |          1 |       8 | FALSE | 0pt         | 0pt          |

**** Newminted lookup table                                        :noexport:
This table holds default minted values for each of the languages
supported by Org-mode.  You can change how minted typesets source code
blocks in any language by modifying the appropriate cell in the table.

#+tblname: newminted-lookup
| Org          | Minted      | baselinestretch | bgcolor | firstline | firstnumber | fontfamily | fontseries | fontsize      | fontshape | formatcom | frame  | framerule | framesep | gobble | lastline | linenos | mathescape | numberblanklines | numbersep | obeytabs | resetmargins | rulecolor     | samepage | showspaces | showtabs | stepnumber | tabsize | texcl | xleftmargin | xrightmargin |
| *default*    | *default*   | auto            | nil     |         1 |           1 | tt         | auto       | auto          | auto      | nil       | none   | 0.4pt     | \fboxsep |      0 | nil      | false   | false      | TRUE             | 12pt      | false    | false        | \color{black} | false    | false      | false    |          1 |       8 | false | 0pt         | 0pt          |
| asymptote    | asymptote   | auto            | nil     |         1 |           1 | tt         | auto       | auto          | auto      | nil       | none   | 0.4pt     | \fboxsep |      0 | nil      | false   | false      | TRUE             | 12pt      | false    | false        | \color{black} | false    | false      | false    |          1 |       8 | false | 0pt         | 0pt          |
| C            | c           | auto            | nil     |         1 |           1 | tt         | auto       | auto          | auto      | nil       | none   | 0.4pt     | \fboxsep |      0 | nil      | false   | false      | TRUE             | 12pt      | false    | false        | \color{black} | false    | false      | false    |          1 |       8 | false | 0pt         | 0pt          |
| clojure      | clojure     | auto            | nil     |         1 |           1 | tt         | auto       | auto          | auto      | nil       | none   | 0.4pt     | \fboxsep |      0 | nil      | false   | false      | TRUE             | 12pt      | false    | false        | \color{black} | false    | false      | false    |          1 |       8 | false | 0pt         | 0pt          |
| css          | css         | auto            | nil     |         1 |           1 | tt         | auto       | auto          | auto      | nil       | none   | 0.4pt     | \fboxsep |      0 | nil      | false   | false      | TRUE             | 12pt      | false    | false        | \color{black} | false    | false      | false    |          1 |       8 | false | 0pt         | 0pt          |
| ditaa        | ditaa       | auto            | nil     |         1 |           1 | tt         | auto       | auto          | auto      | nil       | none   | 0.4pt     | \fboxsep |      0 | nil      | false   | false      | TRUE             | 12pt      | false    | false        | \color{black} | false    | false      | false    |          1 |       8 | false | 0pt         | 0pt          |
| dot          | dotlang     | auto            | nil     |         1 |           1 | tt         | auto       | auto          | auto      | nil       | none   | 0.4pt     | \fboxsep |      0 | nil      | false   | false      | TRUE             | 12pt      | false    | false        | \color{black} | false    | false      | false    |          1 |       8 | false | 0pt         | 0pt          |
| emacs-lisp   | common-lisp | auto            | nil     |         1 |           1 | tt         | auto       | \footnotesize | auto      | nil       | single | 0.4pt     | \fboxsep |      0 | nil      | false   | false      | TRUE             | 12pt      | false    | false        | \color{black} | false    | false      | false    |          1 |       8 | false | 0pt         | 0pt          |
| gnuplot      | gnuplot     | auto            | nil     |         1 |           1 | tt         | auto       | auto          | auto      | nil       | none   | 0.4pt     | \fboxsep |      0 | nil      | false   | false      | TRUE             | 12pt      | false    | false        | \color{black} | false    | false      | false    |          1 |       8 | false | 0pt         | 0pt          |
| haskell      | haskell     | auto            | nil     |         1 |           1 | tt         | auto       | auto          | auto      | nil       | none   | 0.4pt     | \fboxsep |      0 | nil      | false   | false      | TRUE             | 12pt      | false    | false        | \color{black} | false    | false      | false    |          1 |       8 | false | 0pt         | 0pt          |
| js           | js          | auto            | nil     |         1 |           1 | tt         | auto       | auto          | auto      | nil       | none   | 0.4pt     | \fboxsep |      0 | nil      | false   | false      | TRUE             | 12pt      | false    | false        | \color{black} | false    | false      | false    |          1 |       8 | false | 0pt         | 0pt          |
| latex        | latex       | auto            | nil     |         1 |           1 | tt         | auto       | \footnotesize | auto      | nil       | single | 0.4pt     | \fboxsep |      0 | nil      | false   | false      | TRUE             | 12pt      | false    | false        | \color{black} | false    | false      | false    |          1 |       8 | false | 0pt         | 0pt          |
| ledger       | ledger      | auto            | nil     |         1 |           1 | tt         | auto       | auto          | auto      | nil       | none   | 0.4pt     | \fboxsep |      0 | nil      | false   | false      | TRUE             | 12pt      | false    | false        | \color{black} | false    | false      | false    |          1 |       8 | false | 0pt         | 0pt          |
| lisp         | cl          | auto            | nil     |         1 |           1 | tt         | auto       | auto          | auto      | nil       | none   | 0.4pt     | \fboxsep |      0 | nil      | false   | false      | TRUE             | 12pt      | false    | false        | \color{black} | false    | false      | false    |          1 |       8 | false | 0pt         | 0pt          |
| matlab       | matlab      | auto            | nil     |         1 |           1 | tt         | auto       | auto          | auto      | nil       | none   | 0.4pt     | \fboxsep |      0 | nil      | false   | false      | TRUE             | 12pt      | false    | false        | \color{black} | false    | false      | false    |          1 |       8 | false | 0pt         | 0pt          |
| mscgen       | mscgen      | auto            | nil     |         1 |           1 | tt         | auto       | auto          | auto      | nil       | none   | 0.4pt     | \fboxsep |      0 | nil      | false   | false      | TRUE             | 12pt      | false    | false        | \color{black} | false    | false      | false    |          1 |       8 | false | 0pt         | 0pt          |
| ocaml        | ocaml       | auto            | nil     |         1 |           1 | tt         | auto       | auto          | auto      | nil       | none   | 0.4pt     | \fboxsep |      0 | nil      | false   | false      | TRUE             | 12pt      | false    | false        | \color{black} | false    | false      | false    |          1 |       8 | false | 0pt         | 0pt          |
| octave       | octave      | auto            | nil     |         1 |           1 | tt         | auto       | auto          | auto      | nil       | none   | 0.4pt     | \fboxsep |      0 | nil      | false   | false      | TRUE             | 12pt      | false    | false        | \color{black} | false    | false      | false    |          1 |       8 | false | 0pt         | 0pt          |
| org          | text        | auto            | nil     |         1 |           1 | tt         | auto       | \footnotesize | auto      | nil       | single | 0.4pt     | \fboxsep |      0 | nil      | false   | false      | TRUE             | 12pt      | false    | false        | \color{black} | false    | false      | false    |          1 |       8 | false | 0pt         | 0pt          |
| oz (contrib) | oz          | auto            | nil     |         1 |           1 | tt         | auto       | auto          | auto      | nil       | none   | 0.4pt     | \fboxsep |      0 | nil      | false   | false      | TRUE             | 12pt      | false    | false        | \color{black} | false    | false      | false    |          1 |       8 | false | 0pt         | 0pt          |
| perl         | perl        | auto            | nil     |         1 |           1 | tt         | auto       | auto          | auto      | nil       | none   | 0.4pt     | \fboxsep |      0 | nil      | false   | false      | TRUE             | 12pt      | false    | false        | \color{black} | false    | false      | false    |          1 |       8 | false | 0pt         | 0pt          |
| plantuml     | plantuml    | auto            | nil     |         1 |           1 | tt         | auto       | auto          | auto      | nil       | none   | 0.4pt     | \fboxsep |      0 | nil      | false   | false      | TRUE             | 12pt      | false    | false        | \color{black} | false    | false      | false    |          1 |       8 | false | 0pt         | 0pt          |
| python       | python      | auto            | nil     |         1 |           1 | tt         | auto       | \small        | auto      | nil       | single | 0.4pt     | \fboxsep |      0 | nil      | true    | false      | TRUE             | 12pt      | false    | false        | \color{blue}  | false    | false      | false    |          1 |       8 | false | 0pt         | 0pt          |
| R            | rlang       | auto            | nil     |         1 |           1 | tt         | auto       | auto          | auto      | nil       | none   | 0.4pt     | \fboxsep |      0 | nil      | false   | false      | TRUE             | 12pt      | false    | false        | \color{black} | false    | false      | false    |          1 |       8 | false | 0pt         | 0pt          |
| ruby         | ruby        | auto            | nil     |         1 |           1 | tt         | auto       | auto          | auto      | nil       | none   | 0.4pt     | \fboxsep |      0 | nil      | false   | false      | TRUE             | 12pt      | false    | false        | \color{black} | false    | false      | false    |          1 |       8 | false | 0pt         | 0pt          |
| sass         | sass        | auto            | nil     |         1 |           1 | tt         | auto       | auto          | auto      | nil       | none   | 0.4pt     | \fboxsep |      0 | nil      | false   | false      | TRUE             | 12pt      | false    | false        | \color{black} | false    | false      | false    |          1 |       8 | false | 0pt         | 0pt          |
| scheme       | scheme      | auto            | nil     |         1 |           1 | tt         | auto       | auto          | auto      | nil       | none   | 0.4pt     | \fboxsep |      0 | nil      | false   | false      | TRUE             | 12pt      | false    | false        | \color{black} | false    | false      | false    |          1 |       8 | false | 0pt         | 0pt          |
| screen       | screen      | auto            | nil     |         1 |           1 | tt         | auto       | auto          | auto      | nil       | none   | 0.4pt     | \fboxsep |      0 | nil      | false   | false      | TRUE             | 12pt      | false    | false        | \color{black} | false    | false      | false    |          1 |       8 | false | 0pt         | 0pt          |
| sh           | sh          | auto            | nil     |         1 |           1 | tt         | auto       | auto          | auto      | nil       | none   | 0.4pt     | \fboxsep |      0 | nil      | false   | false      | TRUE             | 12pt      | false    | false        | \color{black} | false    | false      | false    |          1 |       8 | false | 0pt         | 0pt          |
| sql          | sql         | auto            | nil     |         1 |           1 | tt         | auto       | auto          | auto      | nil       | none   | 0.4pt     | \fboxsep |      0 | nil      | false   | false      | TRUE             | 12pt      | false    | false        | \color{black} | false    | false      | false    |          1 |       8 | false | 0pt         | 0pt          |
| sqlite       | sqlite3     | auto            | nil     |         1 |           1 | tt         | auto       | auto          | auto      | nil       | none   | 0.4pt     | \fboxsep |      0 | nil      | false   | false      | TRUE             | 12pt      | false    | false        | \color{black} | false    | false      | false    |          1 |       8 | false | 0pt         | 0pt          |

**** Make newminted

This [[latex:proglang][Python]] source code block transforms the newminted-lookup table into
LaTeX macros for the class file (Listing \ref{fig:newminted-macros}).

#+BEGIN_listing
#+source: make-newminted(x=newminted-lookup)
#+begin_src python :results output raw :exports code
  res = ''
  rows = len(x)
  cols = len(x[0])
  for row in range(2,rows):  
      first = True
      s = '\\newminted{' + x[row][1] +'}{'
      for col in range(2,cols):
          if 'nil' != x[row][col] and x[row][col] != x[1][col]:
              if first:
                  s = s + x[0][col] + '=' + str(x[row][col])
                  first = False
              else:
                  s = s + ',' + x[0][col] + '=' + str(x[row][col])
      res = res + s + '}\n'
  print res
#+end_src
#+LATEX: \caption[Python code to make newminted macros]{Python code to make newminted macros.}\label{fig:newminted-macros}
#+END_listing

This source block in Listing \ref{fig:newminted-cfg} is used to put the LaTeX macros into the class file.

#+BEGIN_listing
#+source: make-newminted-code
#+begin_src latex :noweb tangle :exports code
<<make-newminted(x=newminted-lookup)>>
#+end_src
#+LATEX: \caption[Put the newminted macros into the class file]{Put the newminted macros into the class file.}\label{fig:newminted-cfg}
#+END_listing

**** Make newmint

The [[latex:proglang][Python]] source code block in Listing \ref{fig:make-newmint}
transforms the newmint-lookup table into LaTeX macros for the class
file.

#+BEGIN_listing
#+source: make-newmint(x=newmint-lookup)
#+begin_src python :results output raw :exports code
  res = ''
  rows = len(x)
  cols = len(x[0])
  for row in range(2,rows):  
      first = True
      s = '\\newmint{' + x[row][1] +'}{'
      for col in range(2,cols):
          if 'nil' != x[row][col] and x[row][col] != x[1][col]:
              if first:
                  s = s + x[0][col] + '=' + str(x[row][col])
                  first = False
              else:
                  s = s + ',' + x[0][col] + '=' + str(x[row][col])
      res = res + s + '}\n'
  print res
#+end_src
#+LATEX: \caption[Python code to make the newmint macros]{Python code to make the newmint macros.}\label{fig:make-newmint}
#+END_listing

The source block in Listing \ref{fig:make-newmint-code} is used to put the LaTeX macros into the class file.

#+BEGIN_listing
#+source: make-newmint-code
#+begin_src latex :noweb tangle :exports code
<<make-newmint(x=newmint-lookup)>>
#+end_src
#+LATEX: \caption[Put the newmint macros in the class file]{Put the newmint macros in the class file.}\label{fig:make-newmint-code}
#+END_listing

**** Configuration file

This source block writes a file, =orgart_minted.cfg=, that can be used to input
minted shortcuts into an Org-mode file that isn't using [[latex:classfile][Org-article]]
(Listing \ref{fig:minted-cfg}).

#+BEGIN_listing
#+source: minted-cfg
#+begin_src latex :tangle orgart_minted.cfg :noweb tangle :exports code
  <<make-newmint(x=newmint-lookup)>>
  <<make-newminted(x=newminted-lookup)>>  
#+end_src
#+LATEX: \caption[Make a configuration file for the minted package in Org-mode]{Make a configuration file for the minted package in Org-mode.}\label{fig:minted-cfg}
#+END_listing

Typically, the configuration file would be input in the LaTeX header:
: #+LATEX_HEADER: \input{orgart_minted.cfg}

**** Notes                                                         :noexport:
***** DONE [3/3] Per language configuration in an Org-mode table
      :LOGBOOK:
      - State "DONE"       from "TODO"       [2010-11-13 Sat 16:28]
      :END:
      - [X] Write script to output \newminted{} calls
      - [X] Configure path to org-article preamble
      - [X] Configure path to .tex file that can be used with \input
***** TODO [2/3] Define little \newmints using an Org-mode table
      - [X] One for each language
      - [ ] Can be inserted with link syntax
      - [X] First two columns of table have Org-mode language
        name/minted language name


***** Concordance
| Org          | Minted          |
|--------------+-----------------|
| asymptote    | asy, asymptote  |
| C            | c, cpp, c++     |
| clojure      | clojure, clj    |
| css          | css             |
| ditaa        |                 |
| dot          |                 |
| emacs-lisp   | common-lisp, cl |
| gnuplot      | gnuplot         |
| haskell      | haskell, hs     |
| js           | js, javascript  |
| latex        | tex, latex      |
| ledger       |                 |
| lisp         | common-lisp, cl |
| matlab       | matlab          |
| mscgen       |                 |
| ocaml        | ocaml           |
| octave       | octave          |
| oz (contrib) |                 |
| perl         | perl, pl        |
| plantuml     |                 |
| python       | python, py      |
| R            |                 |
| ruby         | rb, ruby        |
| sass         | sass            |
| scheme       | scheme, scm     |
| screen       |                 |
| sh           | bash, sh, ksh   |
| sql          | sql             |
| sqlite       | sqlite3         |

** Other packages
Packages not included in the [[latex:proglang][Org-mode]] list of default packages are
made available in [[latex:classfile][Org-article]].  These include facilities to apply
microtypographic adjustments to suitable fonts, set the line spacing
of the document to double space, and set lists more compactly than the
standard LaTeX [[latex:classfile][article]].

*** Microtype

The [[latex:package][microtype]] package makes available the micro-typographic
extensions of pdfTeX.  Prominent among these are font expansion and
character protrusion, which together result in fewer bad line breaks
and a visually even right margin.  

You can probably read the [[latex:package][microtype]] documentation, which runs to more
than 200 pages, on your system by issuing the shell command: [[inline:sh][texdoc
microtype]].  This package is not loaded by default.  An option is
provided to load it (Listings \ref{fig:microtype-option}, \ref{fig:load-microtype}).

#+BEGIN_listing
#+source: option-microtype
#+begin_src latex :exports code
  \newboolean{ORGART@microtype}
  \DeclareOption{microtype}{\setboolean{ORGART@microtype}{true}}
#+end_src
#+LATEX: \caption[Setting the microtype option]{Setting the microtype option.}\label{fig:microtype-option}
#+END_listing

#+BEGIN_listing
#+source: load-microtype
#+begin_src latex :exports code
    \ifthenelse{\boolean{ORGART@microtype}}
  {%
    \ifpdf
     \AtEndOfClass{\RequirePackage{microtype}}
    \fi}%
  {}
#+end_src
#+LATEX: \caption[Load the microtype package]{Load the microtype package.}\label{fig:load-microtype}
#+END_listing
*** Setspace
# <<setspace>>

The [[latex:package][setspace]] package is used here for the sole purpose of creating
double-spaced documents, such as manuscripts submitted to some
publishing houses.  This package is not loaded by default.  An option,
[[latex:progstruct][doublespace]]  (Listing \ref{fig:setspace-options}), is provided to load
[[latex:package][setspace]] (Listing \ref{fig:load-setspace}) and set linespacing to
doublespacing (Listing \ref{fig:setspace-code}).

#+BEGIN_listing
#+source: option-setspace
#+begin_src latex :exports code
  \newboolean{ORGART@doublespace}
  \DeclareOption{doublespace}{\setboolean{ORGART@doublespace}{true}}
#+end_src
#+LATEX: \caption[Set up options for the setspace package]{Set up options for the setspace package.}\label{fig:setspace-options}
#+END_listing

#+BEGIN_listing
#+source: load-setspace
#+begin_src latex :exports code
  \ifthenelse{\boolean{ORGART@doublespace}}
  {\RequirePackage{setspace}}
  {}
#+end_src
#+LATEX: \caption[Loading the setspace package]{Loading the setspace package.}\label{fig:load-setspace}
#+END_listing

#+BEGIN_listing
#+source: setspace-code
#+begin_src latex :exports code
  \ifthenelse{\boolean{ORGART@doublespace}}
  {\doublespacing}
  {}%
#+end_src
#+LATEX: \caption[Setting the document line spacing]{Setting the document line spacing.}\label{fig:setspace-code}
#+END_listing

*** Paralist

The [[latex:package][paralist]] package was designed to meet the widespread request for
more tightly set lists in the standard LaTeX classes.  If it is
loaded, then the LaTeX environments =itemize=, =enumerate=, and
=description= are over-ridden by their paralist counterparts.

You can probably read the [[latex:package][paralist]] documentation on your system by
issuing the shell command:  [[inline:sh][texdoc paralist]].

List typesetting is configured with the [[latex:progstruct][lists]] key which recognizes the
following values: [[latex:progstruct][latex]], [[latex:progstruct][compact]], and several varieties of the value
[[latex:progstruct][inpara]], each of which begin with [[latex:progstruct][inpara]] and are followed by the format
of the list enumeration inside the paragraph:

  - latex :: Use standard LaTeX lists, which are set with generous
             space between items
  - compact :: Use compact lists, with little space between items
  - inpara :: Use compact lists for itemize and description
              environments, but set enumerated lists inside paragraphs
  - inparai :: Line [[latex:progstruct][inpara]], but the label used for enumeration is a
               lowercase roman numeral in parentheses
  - inparacustom :: Like [[latex:progstruct][inpara]], but the label used for enumeration
                    can be customized with the [[latex:progstruct][customlabel]] key (NOT WORKING)
  - customlabel :: a formatting string for the label, e.g., i), (i),
                   a), A), I), 1), {example} a. (NOT WORKING)

#+BEGIN_listing
#+source: pgf-option-paralist
#+begin_src latex :exports code
    \pgfkeys{ 
      /ORGART/.cd, 
      customlabel/.store in=\ORGART@customlabel,
      lists/.is choice,
      lists/latex/.code={},
      lists/compact/.code={\AtEndOfClass{%
        \RequirePackage{paralist}
        \let\itemize\compactitem
        \let\description\compactdesc
        \let\enumerate\compactenum}},
     lists/inpara/.code={\AtEndOfClass{%
        \RequirePackage{paralist}
        \let\itemize\compactitem
        \let\description\compactdesc
        \let\enumerate\inparaenum}},
     lists/inparai/.code={\AtEndOfClass{%
        \RequirePackage{paralist}
        \let\itemize\compactitem
        \let\description\compactdesc
        \renewenvironment{enumerate}{\begin{inparaenum}[(i)]}{\end{inparaenum}}}},
     lists/inparacustom/.code={\AtEndOfClass{%
        \RequirePackage{paralist}}
        \AtBeginDocument{
        \let\itemize\compactitem
        \let\description\compactdesc
        \renewenvironment{enumerate}{\begin{inparaenum}[\ORGART@customlabel]}{\end{inparaenum}}}}
  }  
#+end_src
#+LATEX: \caption[Set up option for lists]{Set up options for lists.}\label{fig:paralist-option}
#+END_listing


*** Topcapt                                                        :noexport:
The [[latex:packgae][topcapt]] package is needed when it is desired to set the caption
of a table above the table.  In this case, the [[latex:progstruct][caption]] command
must be moved above the =tabular= environment and the command changed
to =\topcaption=.  These will be adjustments made to the code produced
by the [[latex:proglang][Org-mode]] LaTeX exporter.

This package is not loaded by default.  An option is provided to load
it.

#+source: org-buffer-topcapt
#+begin_src org :exports code
  #+LaTeX_CLASS_OPTIONS: [topcapt]
#+end_src

#+source: option-topcapt
#+begin_src latex :exports code
  \newboolean{topcapt}
  \DeclareOption{topcapt}{\setboolean{topcapt}{true}}
#+end_src

#+source: load-topcapt
#+begin_src latex :exports code
  \ifthenelse{\boolean{topcapt}}
    {\RequirePackage{topcapt}}
    {}
#+end_src

*** Color                                                          :noexport:
The =xcolor= package provides facilities for adding color to LaTeX
output.  This package needs additional configuration.  It should take
options. 

#+source: org-buffer-color
#+begin_src org :exports code
  #+LaTeX_CLASS_OPTIONS: [color]
#+end_src

#+source: option-color
#+begin_src latex :exports code
  \newboolean{ORGART@color}
  \DeclareOption{color}{\setboolean{ORGART@color}{true}}  
#+end_src

#+source: load-color
#+begin_src latex :exports code
  \ifthenelse{\boolean{ORGART@color}}
    {\RequirePackage{color}}
    {}
#+end_src

*** GANTT charts
Eric Fraga wrote a GANTT chart constructor, powered by an [[latex:proglang][Org-mode]]
table.  It relies on two pieces of software:
  - a LaTeX package, [[latex:package][gantt.sty]], which you will need to download and
    install, and
  - an [[latex:proglang][Emacs lisp]] source code block in the [[http://orgmode.org/manual/Library-of-Babel.html#Library-of-Babel][Library of Babel]].

[[latex:classfile][Org-article]] users will need to download the style file [[latex:package][gantt.sty]] and
install it, either in the directory in which the LaTeX file will be
compiled or at an appropriate place in the TeX directory structure.

The [[latex:progstruct][curl]] command works to grab [[latex:package][gantt.sty]] from Worg (Listing
\ref{fig:download-gantt}).  You can evaluate this source code block
with =C-c C-c=, or cut and paste it into a shell and evaluate it
there.

#+BEGIN_listing
#+source: get-gantt.sty
#+begin_src sh
  curl http://repo.or.cz/w/Worg.git/blob_plain/HEAD:/code/latex/gantt.sty > gantt.sty
#+end_src
#+LATEX: \caption[Download gantt.sty from Worg]{Download gantt.sty from Worg.}\label{fig:download-gantt}
#+END_listing

**** The GANTT Option

The [[latex:package][gantt.sty]] package can be loaded with the [[latex:progstruct][gantt]] option (Listings
\ref{fig:option-gantt}, \ref{fig:load-gantt}).

#+BEGIN_listing
#+source: option-gantt
#+begin_src latex :exports code
  \newboolean{ORGART@gantt}
  \DeclareOption{gantt}{\setboolean{ORGART@gantt}{true}}
#+end_src
#+LATEX: \caption[Set up option for table-driven GANTT charts]{Set up option for table-driven GANTT charts.}\label{fig:option-gantt}
#+END_listing

#+BEGIN_listing
#+source: load-gantt
#+begin_src latex :exports code
  \ifthenelse{\boolean{ORGART@gantt}}
  {\AtEndOfClass{\RequirePackage{gantt}}}
  {}
#+end_src
#+LATEX: \caption[Load the gantt package]{Load the gantt package.}\label{fig:load-gantt}
#+END_listing

**** Preparing the input table

  Table \ref{tab:gantt} describes the tasks and other relevant
  information for a project.  Each line is an /entry/ and there are
  three types of entry allowed in this table:

  - task :: an actual task that has a start time, a duration and an end time
  - milestone :: a specific milestone in the project that has a start
               time alone
  - date :: a point in time that will be drawn as a vertical line in the
          GANTT chart (e.g., start of each year)

  Each element of the chart will be annotated with the content of the
  /label/ column of each entry.  The first column of the table is
  ignored but I use it to number the entries.  The last column, titled
  /align/, is used to determine where to place the /activity/ text for
  tasks, whether to the left or right of the bar or, if nothing is
  specified, centred within the bar itself.

#+CAPTION: The GANTT chart input table
#+LABEL: tab:gantt
#+tblname: gantttesttable
    |    | type      | label | activity      | depends | start | duration | end | align |
    |----+-----------+-------+---------------+---------+-------+----------+-----+-------|
    |  1 | date      | Start |               |         |     0 |          |   0 |       |
    |  2 | task      | 1.1   | Lit survey    |         |     0 |        3 |   3 | right |
    |  3 | task      | 1.2   | Develop model |       2 |     3 |        9 |  12 | right |
    |  4 | milestone | M1    | model         |       3 |    12 |          |  12 |       |
    |  5 | task      | 1.3   | Implement     |       3 |    12 |        6 |  18 | left  |
    |  6 | date      | Y1    |               |         |    12 |          |  12 |       |
    |  7 | milestone | M2    | software      |       5 |    18 |          |  18 |       |
    |----+-----------+-------+---------------+---------+-------+----------+-----+-------|
    |  8 | task      | 2.1   | Surrogate     |       3 |    15 |        6 |  21 | left  |
    |  9 | task      | 2.2   | Implement     |       7 |    21 |        3 |  24 | left  |
    | 10 | milestone | M3    | software      |       8 |    24 |          |  24 |       |
    | 11 | date      | End   |               |         |    24 |          |  24 |       |
    |----+-----------+-------+---------------+---------+-------+----------+-----+-------|
    #+TBLFM: $1=1+@-1::$8=$6+$7::@5$6=@-1$+2::@6$6=@-1$+2::@8$6=@-2$+2::@9$6=3+@4$+2::@10$6=@-1$+2

**** Creating the GANTT chart
In the [[latex:proglang][Org-mode]] buffer, the call to the code in the Library of Babel
passes =ganttesttable= to the function =elispgantt= (Listing \ref{fig:elispgantt}).  Note that the
header argument is set in the function call.  The results are wrapped
in =#+BEGIN_LaTeX= ... =#+END_LaTeX= so they are interpreted as LaTeX
code by the [[latex:proglang][Org-mode]] LaTeX exporter.  


#+BEGIN_listing
#+begin_src org :exports code
,#+lob: elispgantt(table=gantttesttable) :results output latex
#+end_src
#+LATEX: \caption[Call to the elispgantt function in the Library of Babel]{Call to the elispgantt function in the Library of Babel.}\label{fig:elispgantt}
#+END_listing


#+source: elispgantt-output
#+begin_src org :exports none

\pgfdeclarelayer{background}
\pgfdeclarelayer{foreground}
\pgfsetlayers{background,foreground}
\renewcommand{\ganttprojecttime}{24}
\renewcommand{\ganttntasks}{5}
\noindent
\begin{tikzpicture}[y=-0.75cm,x=0.75\textwidth]
  \begin{pgfonlayer}{background}
    \draw[very thin, red!10!white] (0,1+\ganttntasks) grid [ystep=0.75cm,xstep=1/\ganttprojecttime] (1,0);
    \draw[\ganttdatelinecolour] (0,0) -- (1,0);
    \draw[\ganttdatelinecolour] (0,1+\ganttntasks) -- (1,1+\ganttntasks);
  \end{pgfonlayer}
  \gantttask{1.1}{Lit survey}{0}{3}{3}{[right]}
  \gantttask{1.2}{Develop model}{3}{12}{12}{[right]}
  \gantttask{1.3}{Implement}{12}{18}{12}{[left]}
  \gantttask{2.1}{Surrogate}{15}{21}{15}{[left]}
  \gantttask{2.2}{Implement}{21}{24}{21}{[left]}

  \ganttmilestone{$\begin{array}{c}\mbox{M1}\\ \mbox{model}\end{array}$}{12}
  \ganttmilestone{$\begin{array}{c}\mbox{M2}\\ \mbox{software}\end{array}$}{18}
  \ganttmilestone{$\begin{array}{c}\mbox{M3}\\ \mbox{software}\end{array}$}{24}

  \ganttdateline{Start}{0}
  \ganttdateline{Y1}{12}
  \ganttdateline{End}{24}

\end{tikzpicture}
#+end_src


The resulting GANTT chart is processed by LaTeX and appears in the PDF
output without reference to an external file (Fig. \ref{fig:gantt}).
Note that the chart does not appear in the HTML export.  The chart
looks great, Eric!

#+BEGIN_figure
#+LATEX: \centering
#+BEGIN_LaTeX
\pgfdeclarelayer{background}
\pgfdeclarelayer{foreground}
\pgfsetlayers{background,foreground}
\renewcommand{\ganttprojecttime}{24}
\renewcommand{\ganttntasks}{5}
\noindent
\begin{tikzpicture}[y=-0.75cm,x=0.75\textwidth]
  \begin{pgfonlayer}{background}
    \draw[very thin, red!10!white] (0,1+\ganttntasks) grid [ystep=0.75cm,xstep=1/\ganttprojecttime] (1,0);
    \draw[\ganttdatelinecolour] (0,0) -- (1,0);
    \draw[\ganttdatelinecolour] (0,1+\ganttntasks) -- (1,1+\ganttntasks);
  \end{pgfonlayer}
  \gantttask{1.1}{Lit survey}{0}{3}{3}{[right]}
  \gantttask{1.2}{Develop model}{3}{12}{12}{[right]}
  \gantttask{1.3}{Implement}{12}{18}{12}{[left]}
  \gantttask{2.1}{Surrogate}{15}{21}{15}{[left]}
  \gantttask{2.2}{Implement}{21}{24}{21}{[left]}

  \ganttmilestone{$\begin{array}{c}\mbox{M1}\\ \mbox{model}\end{array}$}{12}
  \ganttmilestone{$\begin{array}{c}\mbox{M2}\\ \mbox{software}\end{array}$}{18}
  \ganttmilestone{$\begin{array}{c}\mbox{M3}\\ \mbox{software}\end{array}$}{24}

  \ganttdateline{Start}{0}
  \ganttdateline{Y1}{12}
  \ganttdateline{End}{24}

\end{tikzpicture}
#+END_LaTeX
#+LATEX: \caption[Eric Fraga's GANTT chart example]{Eric Fraga's GANTT chart example.}\label{fig:gantt}
#+END_figure

**** GANTT Emacs lisp source code block                            :noexport:

The following source code block sent to the [[latex:proglang][Org-mode]] list by Eric
Fraga has been modified slightly.  It is installed in the [[http://orgmode.org/manual/Library-of-Babel.html#Library-of-Babel][Library of Babel]].

#+source: elispgantt
#+begin_src emacs-lisp :var table=gantttest :exports code
  (let ((dates "")
        (entries (nthcdr 2 table))
        (milestones "")
        (nmilestones 0)
        (ntasks 0)
        (projecttime 0)
        (tasks "")
        (xlength 1))
    (message "Initial: %s\n" table)
    (message "Entries: %s\n" entries)
    (while entries
      (let ((entry (first entries)))
        (if (listp entry)
            (let ((id (first entry))
                  (type (nth 1 entry))
                  (label (nth 2 entry))
                  (task (nth 3 entry))
                  (dependencies (nth 4 entry))
                  (start (nth 5 entry))
                  (duration (nth 6 entry))
                  (end (nth 7 entry))
                  (alignment (nth 8 entry)))
              (if (> start projecttime) (setq projecttime start))
              (if (string= type "task")
                  (let ((end (+ start duration))
                        (textposition (+ start (/ duration 2)))
                        (flush ""))
                    (if (string= alignment "left")
                        (progn
                          (setq textposition start)
                          (setq flush "[left]"))
                      (if (string= alignment "right")
                          (progn
                            (setq textposition end)
                            (setq flush "[right]"))))
                    (setq tasks
                          (format "%s  \\gantttask{%s}{%s}{%d}{%d}{%d}{%s}\n"
                                  tasks label task start end textposition flush))
                    (setq ntasks (+ 1 ntasks))
                    (if (> end projecttime)
                        (setq projecttime end)))
                (if (string= type "milestone")
                    (progn
                      (setq milestones
                            (format
                             "%s  \\ganttmilestone{$\\begin{array}{c}\\mbox{%s}\\\\ \\mbox{%s}\\end{array}$}{%d}\n"
                             milestones label task start))
                      (setq nmilestones (+ 1 nmilestones)))
                  (if (string= type "date")
                      (setq dates (format "%s  \\ganttdateline{%s}{%d}\n"
                                          dates label start))
                    (message "Ignoring entry with type %s\n" type)))))
          (message "Ignoring non-list entry %s\n" entry)) ; end if list entry
        (setq entries (cdr entries))))  ; end while entries left
    (format "\\pgfdeclarelayer{background}
  \\pgfdeclarelayer{foreground}
  \\pgfsetlayers{background,foreground}
  \\renewcommand{\\ganttprojecttime}{%d}
  \\renewcommand{\\ganttntasks}{%d}
  \\noindent
  \\begin{tikzpicture}[y=-0.75cm,x=0.75\\textwidth]
    \\begin{pgfonlayer}{background}
      \\draw[very thin, red!10!white] (0,1+\\ganttntasks) grid [ystep=0.75cm,xstep=1/\\ganttprojecttime] (1,0);
      \\draw[\\ganttdatelinecolour] (0,0) -- (1,0);
      \\draw[\\ganttdatelinecolour] (0,1+\\ganttntasks) -- (1,1+\\ganttntasks);
    \\end{pgfonlayer}
  %s
  %s
  %s
  \\end{tikzpicture}" projecttime ntasks tasks milestones dates))
#+end_src

*** Index                                                          :noexport:
* Notes                                                            :noexport:
** DONE fontenc is passed option TI by default
   :LOGBOOK:
   - State "DONE"       from "TODO"       [2010-09-13 Mon 07:25]
   :END:
** DONE inputenc is passed option AUTO by default
   :LOGBOOK:
   - State "DONE"       from "TODO"       [2010-09-13 Mon 07:26]
   :END:
** DONE investigate monotype fonts other than courier
   :LOGBOOK:
   - State "DONE"       from "STARTED"    [2010-10-17 Sun 10:34]
   - State "STARTED"    from "TODO"       [2010-09-13 Mon 07:26]
   :END:
   - Inconsolata is nice, modeled on Vera
** DONE Add the listings package
   :LOGBOOK:
   - State "DONE"       from "TODO"       [2010-09-13 Mon 08:36]
   :END:
** DONE Add the color package
   :LOGBOOK:
   - State "DONE"       from "TODO"       [2010-09-13 Mon 11:27]
   :END:
** DONE PassOptionsToPackages conditionally
   :LOGBOOK:
   - State "DONE"       from "TODO"       [2010-09-14 Tue 06:51]
   :END:
   - See p. 880 of LaTeX Companion
   - Need to figure out how to get options to the packages, are they
     throwing warnings (OK) or errors (not OK)?
\DeclareOption{myoption}{%
   \PassOptionsToPackage{myoption}{other-package}}
** DONE Hyperref active by default
   :LOGBOOK:
   - State "DONE"       from "TODO"       [2010-09-17 Fri 07:31]
   :END:
** DONE Sebastian Vauban's settings
   :LOGBOOK:
   - State "DONE"       from "STARTED"    [2010-10-17 Sun 10:34]
   - State "STARTED"    from "TODO"       [2010-09-17 Fri 08:27]
   :END:
#+begin_LaTeX
% typeset source code listings
\usepackage{listings} % must be loaded after `babel'
\lstloadlanguages{C}
\definecolor{...@lstbackground}{html}{ffffcc} % light yellow
\definecolor{...@lstkeyword}{html}{0000ff} % blue
\definecolor{...@lstidentifier}{html}{000000} % black
\definecolor{...@lstcomment}{html}{ff0000} % red
\definecolor{...@lststring}{html}{008000} % dark green
\lstset{%
    basicstyle=\ttfamily\scriptsize, % the font that is used for the code
    tabsize=4, % sets default tabsize to 4 spaces
    numbers=left, % where to put the line numbers
    numberstyle=\tiny, % line number font size
    stepnumber=0, % step between two line numbers
    breaklines=false, %!! don't break long lines of code
    showtabs=false, % show tabs within strings adding particular underscores
    showspaces=false, % show spaces adding particular underscores
    showstringspaces=false, % underline spaces within strings
    keywordstyle=\color{...@lstkeyword},
    identifierstyle=\color{...@lstidentifier},
    stringstyle=\color{...@lststring},
    commentstyle=\color{...@lstcomment},
    backgroundcolor=\color{...@lstbackground}, % sets the background color
    captionpos=b, % sets the caption position to `bottom'
    extendedchars=false %!?? workaround for when the listed file is in UTF-8
}
#+end_LaTeX
** DONE Color or xcolor?
   :LOGBOOK:
   - State "DONE"       from ""           [2010-09-19 Sun 21:37]
   :END:
   - Check which package is best to use
   - Troubles with xcolor
** DONE Explanation of div
   :LOGBOOK:
   - State "DONE"       from ""           [2010-09-21 Tue 18:11]
   :END:
   This table comes from the KOMA-script documentation.  It gives text
   block and margin sizes on A4 paper with various settings of [[latex:progstruct][DIV]].

#+tblname: koma-div
| DIV | width_[mm] | height_[mm] | top_[mm] | inner_[mm] |
|-----+------------+-------------+----------+------------|
|   6 |     105.00 |      148.50 |    49.50 |      35.00 |
|   7 |     120.00 |      169.71 |    42.43 |      30.00 |
|   8 |     131.25 |      185.63 |    37.13 |      26.25 |
|   9 |     140.00 |      198.00 |    33.00 |      23.33 |
|  10 |     147.00 |      207.90 |    29.70 |      21.00 |
|  11 |     152.73 |      216.00 |    27.00 |      19.09 |
|  12 |     157.50 |      222.75 |    24.75 |      17.50 |
|  13 |     161.54 |      228.46 |    22.85 |      16.15 |
|  14 |     165.00 |      233.36 |    21.21 |      15.00 |
|  15 |     168.00 |      237.60 |    19.80 |      14.00 |

This R script plots the text block information in the table.

#+begin_src R :var x = koma-div :width 2000 :height 2000 :pointsize 40 :file ../images/org-article-text-blocks.png
  plot(x[,2], x[,3], xlim=c(0,260), ylim=c(0,260), type='n',
  xlab='Text block width (mm)', ylab='Text block height (mm)')
  rect(0,0,x[,2],x[,3])
  text(x=x[,2],y=x[,3],labels=x[,1],pos=3,offset=0.1)
#+end_src

#+results:
[[file:../images/org-article-text-blocks.png]]

** DONE Format TOC
   :LOGBOOK:
   - State "DONE"       from ""           [2010-09-26 Sun 11:34]
   :END:
#+source: format-toc
#+begin_src emacs-lisp :exports code
  (defun org-export-latex-format-toc-org-article (depth)
    (when depth
      (format "\\setcounter{secnumdepth}{%s}\n\\tableofcontents\n"
              depth)))
  (setq org-export-latex-format-toc-function 'org-export-latex-format-toc-org-article)
#+end_src
** TODO Insert properties in text
Add macro to insert property values into exported text
=======================================================

you can use {{{property{NAME}}}} to insert the value of a
property upon export.

Thanks to David Maus for a patch to this effect.

** umlauts and other characters
Even better, for the OP, is to switch to the tex input method (M-x
set-input-method RET tex RET)!  In this case, you can type \"o to get ö.
Almost all TeX and LaTeX sequences are understood (e.g. \forall to get
∀, \exists for ∃, \alpha for α, \leftrightharpoons for ⇋, and so on.)
You can see all the characters with =describe-input-method=.

Will need to let LaTeX know that the input is UTF-8.  It works out of
the box for HTML.
** TODO Semantic markup for blocks, Christian Moe
Use org-special-blocks

On Oct 31, 2010, at 9:47 AM, Magnus Nilsson wrote:

Dear all,

Is there a way to include an abstract that suits both LaTeX export
and html export?

I am thinking in lines of
#+BEGIN_ABSTRACT:
My abstract goes here
#+END_ABSTRACT:
and have it interpreted differently depending on the export used.

If I'm not overlooking a hitch, you can do that now with the contributed package org-special-blocks. Just put

(require 'org-special-blocks)

in your .emacs.

The HTML abstract won't look like anything special until you style it, it will just be wrapped in a <div class="abstract"> element. Here are some sample style lines for your org document header (without line wraps):

#+STYLE: <style>.abstract {margin: 1em; padding: 1em; border: 1px solid black}
#+STYLE: .abstract:before {content: "ABSTRACT: ";}</style>

Thomas S. Dye wrote:
Alternatively, you could use the existing link syntax for this kind of
markup. See
http://orgmode.org/worg/org-tutorials/org-latex-export.php#sec-12

I'm all for using custom links to extend inline markup, but this is block-level, and thus handily extensible with org-special-blocks.

Cheers,
Christian

** Test conditional export

#+source: test_output
#+begin_src octave :results value vector :exports (if (and (boundp 'htmlp) htmlp) "none" "results" )
rand(2)
#+end_src

#+results: test_output
| 0.3982018019389448 | 0.3879818701032038 |
| 0.8053847746148466 | 0.3333630867175288 |
------------------------------------------------------------

Will export nothing to HTML, and the resulting output to other
formats.

Values for 'exports' can be 'both', 'none', 'code' or 'results'; and
there are export flags latexp, htmlp, asciip, docbookp.

I tested the above example, and it "mostly" works. Sometimes not, and
I don't yet know why.

BR
.j.
** HTML export
It should be possible to change the automatic conversion of Org-mode
link syntax into HTML links.  The test here could be when the FOLLOW
function assigned in org-add-link-type is nil.  This is an indication
that the link is being used in an extended way, and not as a link.
** TODO Take care of font clashes with amssymb
** Buffer local variables
What about making configuration variables buffer-local in the block
you execute? Once the buffer is killed, you should be back to your
previous configuration.

For example:

 #+BEGIN_SRC emacs-lisp
 (make-local-variable 'sentence-end-double-space)
 (setq sentence-end-double-space t)
 #+END_SRC

Regards,

-- Nicolas Goaziou
** TODO Set up listings environment as separate code block
** Python script for listings
\lstnewenvironment 
{name}[⟨number ⟩][⟨opt. default arg.⟩] 
{ ⟨starting code ⟩} 
{ ⟨ending code ⟩} 

\lstnewenvironment{pascal} 
{\lstset{language=pascal}} 
{} 


** Listings variables not in table and reason

| lineskip       | marked bug                        |
| boxpos         | marked bug                        |
| float          | implemented differently in minted |
| floatplacement | implemented differently in minted |
| print          | handled by Org-mode :export       |
| linerange      | individual listings only          |
|                |                                   |


